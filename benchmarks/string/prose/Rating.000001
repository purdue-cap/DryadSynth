
    (set-logic SLIA)
    (synth-fun f ((arg0 String)) String 
        (
            (Start String (ntString)) 
            (ntString String (")" "No Rating)" "(" arg0
                (str.++ ntString ntString) 
                (str.replace ntString ntString ntString) 
                (str.at ntString ntInt)
                (int.to.str ntInt)
                (ite ntBool ntString ntString)
                (str.substr ntString ntInt ntInt)
            )) 
            (ntInt Int (
                1 0 -1
                (+ ntInt ntInt)
                (- ntInt ntInt)
                (str.len ntString)
                (str.to.int ntString)
                (ite ntBool ntInt ntInt)
                (str.indexof ntString ntString ntInt)
            )) 
            (ntBool Bool (
                true false
                (= ntInt ntInt)
                (str.prefixof ntString ntString)
                (str.suffixof ntString ntString)
                (str.contains ntString ntString)
            ))
        )
    )
(constraint (= (f "\t \n \n\nNo Rating)") "0"))
(constraint (= (f "(6)") "6"))
(constraint (= (f "(10)") "10"))
(constraint (= (f "\t\t(10)") "10"))
(constraint (= (f "\n\n \tNo Rating)") "0"))
(constraint (= (f "(\nNo Rating)") "0"))
(constraint (= (f "(10)") "10"))
(constraint (= (f "(7)") "7"))
(constraint (= (f "  \n(5)") "5"))
(constraint (= (f "\n\t\t(5)") "5"))
(constraint (= (f "(9)") "9"))
(constraint (= (f " \n\t\t (1)") "1"))
(constraint (= (f "\n\t\n\t\nNo Rating)") "0"))
(constraint (= (f "(   \n\t\t\n\n No Rating)") "0"))
(constraint (= (f "\t(7)") "7"))
(constraint (= (f "(10)") "10"))
(constraint (= (f "(7)") "7"))
(constraint (= (f "(2)") "2"))
(constraint (= (f "(0)") "0"))
(constraint (= (f "(9)") "9"))
(check-synth)
