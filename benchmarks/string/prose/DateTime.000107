
    (set-logic SLIA)
    (synth-fun f ((arg0 String)) String 
        (
            (Start String (ntString)) 
            (ntString String ("-" ":" "-203" "-Jan-" "-Jan-203" arg0
                (str.++ ntString ntString) 
                (str.replace ntString ntString ntString) 
                (str.at ntString ntInt)
                (int.to.str ntInt)
                (ite ntBool ntString ntString)
                (str.substr ntString ntInt ntInt)
            )) 
            (ntInt Int (
                1 0 -1
                (+ ntInt ntInt)
                (- ntInt ntInt)
                (str.len ntString)
                (str.to.int ntString)
                (ite ntBool ntInt ntInt)
                (str.indexof ntString ntString ntInt)
            )) 
            (ntBool Bool (
                true false
                (= ntInt ntInt)
                (str.prefixof ntString ntString)
                (str.suffixof ntString ntString)
                (str.contains ntString ntString)
            ))
        )
    )
(constraint (= (f "31-Jan-2031 05:54:18") "2031"))
(constraint (= (f "17-Jan-1990 13:32:01") "1990"))
(constraint (= (f "14-Feb-2034 05:36:07") "2034"))
(constraint (= (f "14-Mar-2002 13:16:16") "2002"))
(constraint (= (f "21-Jan-1985 05:44:43") "1985"))
(constraint (= (f "16-Aug-1985 01:11:56") "1985"))
(constraint (= (f "20-Dec-2033 18:36:29") "2033"))
(constraint (= (f "16-Jul-1984 10:21:59") "1984"))
(constraint (= (f "13-Jan-2038 10:59:36") "2038"))
(constraint (= (f "14-Aug-1982 15:13:54") "1982"))
(constraint (= (f "22-Nov-2030 08:18:08") "2030"))
(constraint (= (f "21-Oct-1997 08:42:58") "1997"))
(constraint (= (f "28-Nov-2006 14:19:15") "2006"))
(constraint (= (f "29-Apr-2031 04:59:45") "2031"))
(constraint (= (f "29-Jan-2032 02:38:36") "2032"))
(constraint (= (f "11-May-2028 15:31:52") "2028"))
(constraint (= (f "15-Jul-1977 12:45:39") "1977"))
(constraint (= (f "27-Jan-2029 05:55:41") "2029"))
(constraint (= (f "03-Mar-2024 10:17:49") "2024"))
(constraint (= (f "14-Apr-2010 00:23:13") "2010"))
(check-synth)
