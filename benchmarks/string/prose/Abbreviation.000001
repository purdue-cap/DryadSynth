
    (set-logic SLIA)
    (synth-fun f ((arg0 String)) String 
        (
            (Start String (ntString)) 
            (ntString String ("et" "Consectetur" "Nihil Impedit" "Eveniet" arg0
                (str.++ ntString ntString) 
                (str.replace ntString ntString ntString) 
                (str.at ntString ntInt)
                (int.to.str ntInt)
                (ite ntBool ntString ntString)
                (str.substr ntString ntInt ntInt)
            )) 
            (ntInt Int (
                1 0 -1
                (+ ntInt ntInt)
                (- ntInt ntInt)
                (str.len ntString)
                (str.to.int ntString)
                (ite ntBool ntInt ntInt)
                (str.indexof ntString ntString ntInt)
            )) 
            (ntBool Bool (
                true false
                (= ntInt ntInt)
                (str.prefixof ntString ntString)
                (str.suffixof ntString ntString)
                (str.contains ntString ntString)
            ))
        )
    )
(constraint (= (f "Consectetur") "C"))
(constraint (= (f "Nihil Impedit") "NI"))
(constraint (= (f "Consectetur") "C"))
(constraint (= (f "Nihil Impedit") "NI"))
(constraint (= (f "Consectetur") "C"))
(constraint (= (f "Consectetur") "C"))
(constraint (= (f "Consectetur") "C"))
(constraint (= (f "Eveniet") "E"))
(constraint (= (f "Consectetur") "C"))
(constraint (= (f "Eveniet") "E"))
(constraint (= (f "Eveniet") "E"))
(constraint (= (f "Consectetur") "C"))
(constraint (= (f "Nihil Impedit") "NI"))
(constraint (= (f "Consectetur") "C"))
(constraint (= (f "Consectetur") "C"))
(constraint (= (f "Nihil Impedit") "NI"))
(constraint (= (f "Nihil Impedit") "NI"))
(constraint (= (f "Nihil Impedit") "NI"))
(constraint (= (f "Consectetur") "C"))
(constraint (= (f "Consectetur") "C"))
(constraint (= (f "Consectetur") "C"))
(constraint (= (f "Consectetur") "C"))
(constraint (= (f "Consectetur") "C"))
(constraint (= (f "Nihil Impedit") "NI"))
(constraint (= (f "Consectetur") "C"))
(constraint (= (f "Consectetur") "C"))
(constraint (= (f "Eveniet") "E"))
(constraint (= (f "Eveniet") "E"))
(constraint (= (f "Consectetur") "C"))
(constraint (= (f "Consectetur") "C"))
(constraint (= (f "Nihil Impedit") "NI"))
(constraint (= (f "Eveniet") "E"))
(constraint (= (f "Eveniet") "E"))
(constraint (= (f "Consectetur") "C"))
(constraint (= (f "Eveniet") "E"))
(constraint (= (f "Consectetur") "C"))
(constraint (= (f "Eveniet") "E"))
(constraint (= (f "Consectetur") "C"))
(constraint (= (f "Consectetur") "C"))
(constraint (= (f "Nihil Impedit") "NI"))
(constraint (= (f "Consectetur") "C"))
(constraint (= (f "Consectetur") "C"))
(constraint (= (f "Nihil Impedit") "NI"))
(constraint (= (f "Nihil Impedit") "NI"))
(constraint (= (f "Eveniet") "E"))
(constraint (= (f "Nihil Impedit") "NI"))
(constraint (= (f "Nihil Impedit") "NI"))
(constraint (= (f "Consectetur") "C"))
(constraint (= (f "Consectetur") "C"))
(constraint (= (f "Eveniet") "E"))
(constraint (= (f "Consectetur") "C"))
(constraint (= (f "Eveniet") "E"))
(check-synth)
