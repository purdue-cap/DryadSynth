<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="918" onload="init(evt)" viewBox="0 0 1200 918" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="918" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="901.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="901.00"> </text><svg id="frames" x="10" width="1180" total_samples="507"><g><title>_dl_map_object_deps (1 samples, 0.20%)</title><rect x="0.0000%" y="773" width="0.1972%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="783.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.20%)</title><rect x="0.0000%" y="757" width="0.1972%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="767.50"></text></g><g><title>openaux (1 samples, 0.20%)</title><rect x="0.0000%" y="741" width="0.1972%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="751.50"></text></g><g><title>_dl_map_object (1 samples, 0.20%)</title><rect x="0.0000%" y="725" width="0.1972%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="735.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.20%)</title><rect x="0.0000%" y="709" width="0.1972%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="719.50"></text></g><g><title>memset (1 samples, 0.20%)</title><rect x="0.0000%" y="693" width="0.1972%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="703.50"></text></g><g><title>.annobin_rtld.c (6 samples, 1.18%)</title><rect x="0.0000%" y="837" width="1.1834%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="6"/><text x="0.2500%" y="847.50"></text></g><g><title>_dl_start (6 samples, 1.18%)</title><rect x="0.0000%" y="821" width="1.1834%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="6"/><text x="0.2500%" y="831.50"></text></g><g><title>_dl_sysdep_start (6 samples, 1.18%)</title><rect x="0.0000%" y="805" width="1.1834%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="6"/><text x="0.2500%" y="815.50"></text></g><g><title>dl_main (6 samples, 1.18%)</title><rect x="0.0000%" y="789" width="1.1834%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="6"/><text x="0.2500%" y="799.50"></text></g><g><title>_dl_relocate_object (5 samples, 0.99%)</title><rect x="0.1972%" y="773" width="0.9862%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="5"/><text x="0.4472%" y="783.50"></text></g><g><title>_dl_lookup_symbol_x (4 samples, 0.79%)</title><rect x="0.3945%" y="757" width="0.7890%" height="15" fill="rgb(240,193,28)" fg:x="2" fg:w="4"/><text x="0.6445%" y="767.50"></text></g><g><title>do_lookup_x (4 samples, 0.79%)</title><rect x="0.3945%" y="741" width="0.7890%" height="15" fill="rgb(216,20,37)" fg:x="2" fg:w="4"/><text x="0.6445%" y="751.50"></text></g><g><title>__gmpn_sqr_basecase_coreisbr (1 samples, 0.20%)</title><rect x="1.1834%" y="837" width="0.1972%" height="15" fill="rgb(206,188,39)" fg:x="6" fg:w="1"/><text x="1.4334%" y="847.50"></text></g><g><title>bitwuzla (8 samples, 1.58%)</title><rect x="0.0000%" y="853" width="1.5779%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="8"/><text x="0.2500%" y="863.50"></text></g><g><title>_start (1 samples, 0.20%)</title><rect x="1.3807%" y="837" width="0.1972%" height="15" fill="rgb(231,73,38)" fg:x="7" fg:w="1"/><text x="1.6307%" y="847.50"></text></g><g><title>__libc_start_main (1 samples, 0.20%)</title><rect x="1.3807%" y="821" width="0.1972%" height="15" fill="rgb(225,20,46)" fg:x="7" fg:w="1"/><text x="1.6307%" y="831.50"></text></g><g><title>bitwuzla_main (1 samples, 0.20%)</title><rect x="1.3807%" y="805" width="0.1972%" height="15" fill="rgb(210,31,41)" fg:x="7" fg:w="1"/><text x="1.6307%" y="815.50"></text></g><g><title>bitwuzla_new (1 samples, 0.20%)</title><rect x="1.3807%" y="789" width="0.1972%" height="15" fill="rgb(221,200,47)" fg:x="7" fg:w="1"/><text x="1.6307%" y="799.50"></text></g><g><title>bzla_new (1 samples, 0.20%)</title><rect x="1.3807%" y="773" width="0.1972%" height="15" fill="rgb(226,26,5)" fg:x="7" fg:w="1"/><text x="1.6307%" y="783.50"></text></g><g><title>bzla_opt_init_opts (1 samples, 0.20%)</title><rect x="1.3807%" y="757" width="0.1972%" height="15" fill="rgb(249,33,26)" fg:x="7" fg:w="1"/><text x="1.6307%" y="767.50"></text></g><g><title>init_opt.constprop.0 (1 samples, 0.20%)</title><rect x="1.3807%" y="741" width="0.1972%" height="15" fill="rgb(235,183,28)" fg:x="7" fg:w="1"/><text x="1.6307%" y="751.50"></text></g><g><title>bzla_util_getenv_value (1 samples, 0.20%)</title><rect x="1.3807%" y="725" width="0.1972%" height="15" fill="rgb(221,5,38)" fg:x="7" fg:w="1"/><text x="1.6307%" y="735.50"></text></g><g><title>bzla_mem_realloc (1 samples, 0.20%)</title><rect x="1.3807%" y="709" width="0.1972%" height="15" fill="rgb(247,18,42)" fg:x="7" fg:w="1"/><text x="1.6307%" y="719.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.20%)</title><rect x="1.3807%" y="693" width="0.1972%" height="15" fill="rgb(241,131,45)" fg:x="7" fg:w="1"/><text x="1.6307%" y="703.50"></text></g><g><title>__GI___tunables_init (1 samples, 0.20%)</title><rect x="2.9586%" y="789" width="0.1972%" height="15" fill="rgb(249,31,29)" fg:x="15" fg:w="1"/><text x="3.2086%" y="799.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.20%)</title><rect x="3.1558%" y="773" width="0.1972%" height="15" fill="rgb(225,111,53)" fg:x="16" fg:w="1"/><text x="3.4058%" y="783.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.20%)</title><rect x="3.1558%" y="757" width="0.1972%" height="15" fill="rgb(238,160,17)" fg:x="16" fg:w="1"/><text x="3.4058%" y="767.50"></text></g><g><title>openaux (1 samples, 0.20%)</title><rect x="3.1558%" y="741" width="0.1972%" height="15" fill="rgb(214,148,48)" fg:x="16" fg:w="1"/><text x="3.4058%" y="751.50"></text></g><g><title>_dl_map_object (1 samples, 0.20%)</title><rect x="3.1558%" y="725" width="0.1972%" height="15" fill="rgb(232,36,49)" fg:x="16" fg:w="1"/><text x="3.4058%" y="735.50"></text></g><g><title>_dl_load_cache_lookup (1 samples, 0.20%)</title><rect x="3.1558%" y="709" width="0.1972%" height="15" fill="rgb(209,103,24)" fg:x="16" fg:w="1"/><text x="3.4058%" y="719.50"></text></g><g><title>.annobin_rtld.c (14 samples, 2.76%)</title><rect x="1.5779%" y="837" width="2.7613%" height="15" fill="rgb(229,88,8)" fg:x="8" fg:w="14"/><text x="1.8279%" y="847.50">.a..</text></g><g><title>_dl_start (8 samples, 1.58%)</title><rect x="2.7613%" y="821" width="1.5779%" height="15" fill="rgb(213,181,19)" fg:x="14" fg:w="8"/><text x="3.0113%" y="831.50"></text></g><g><title>_dl_sysdep_start (7 samples, 1.38%)</title><rect x="2.9586%" y="805" width="1.3807%" height="15" fill="rgb(254,191,54)" fg:x="15" fg:w="7"/><text x="3.2086%" y="815.50"></text></g><g><title>dl_main (6 samples, 1.18%)</title><rect x="3.1558%" y="789" width="1.1834%" height="15" fill="rgb(241,83,37)" fg:x="16" fg:w="6"/><text x="3.4058%" y="799.50"></text></g><g><title>_dl_relocate_object (5 samples, 0.99%)</title><rect x="3.3531%" y="773" width="0.9862%" height="15" fill="rgb(233,36,39)" fg:x="17" fg:w="5"/><text x="3.6031%" y="783.50"></text></g><g><title>_dl_lookup_symbol_x (4 samples, 0.79%)</title><rect x="3.5503%" y="757" width="0.7890%" height="15" fill="rgb(226,3,54)" fg:x="18" fg:w="4"/><text x="3.8003%" y="767.50"></text></g><g><title>do_lookup_x (3 samples, 0.59%)</title><rect x="3.7475%" y="741" width="0.5917%" height="15" fill="rgb(245,192,40)" fg:x="19" fg:w="3"/><text x="3.9975%" y="751.50"></text></g><g><title>check_match (2 samples, 0.39%)</title><rect x="3.9448%" y="725" width="0.3945%" height="15" fill="rgb(238,167,29)" fg:x="20" fg:w="2"/><text x="4.1948%" y="735.50"></text></g><g><title>strcmp (1 samples, 0.20%)</title><rect x="4.1420%" y="709" width="0.1972%" height="15" fill="rgb(232,182,51)" fg:x="21" fg:w="1"/><text x="4.3920%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.20%)</title><rect x="4.3393%" y="837" width="0.1972%" height="15" fill="rgb(231,60,39)" fg:x="22" fg:w="1"/><text x="4.5893%" y="847.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.20%)</title><rect x="4.3393%" y="821" width="0.1972%" height="15" fill="rgb(208,69,12)" fg:x="22" fg:w="1"/><text x="4.5893%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.20%)</title><rect x="4.3393%" y="805" width="0.1972%" height="15" fill="rgb(235,93,37)" fg:x="22" fg:w="1"/><text x="4.5893%" y="815.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.20%)</title><rect x="4.5365%" y="821" width="0.1972%" height="15" fill="rgb(213,116,39)" fg:x="23" fg:w="1"/><text x="4.7865%" y="831.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.20%)</title><rect x="4.7337%" y="821" width="0.1972%" height="15" fill="rgb(222,207,29)" fg:x="24" fg:w="1"/><text x="4.9837%" y="831.50"></text></g><g><title>[unknown] (7 samples, 1.38%)</title><rect x="4.5365%" y="837" width="1.3807%" height="15" fill="rgb(206,96,30)" fg:x="23" fg:w="7"/><text x="4.7865%" y="847.50"></text></g><g><title>meet_middle::enumerate::expr::Expr::eval (5 samples, 0.99%)</title><rect x="4.9310%" y="821" width="0.9862%" height="15" fill="rgb(218,138,4)" fg:x="25" fg:w="5"/><text x="5.1810%" y="831.50"></text></g><g><title>&lt;core::result::Result&lt;T,F&gt; as core::ops::try_trait::FromResidual&lt;core::result::Result&lt;core::convert::Infallible,E&gt;&gt;&gt;::from_residual (3 samples, 0.59%)</title><rect x="5.3254%" y="805" width="0.5917%" height="15" fill="rgb(250,191,14)" fg:x="27" fg:w="3"/><text x="5.5754%" y="815.50"></text></g><g><title>&lt;T as core::convert::From&lt;T&gt;&gt;::from (3 samples, 0.59%)</title><rect x="5.3254%" y="789" width="0.5917%" height="15" fill="rgb(239,60,40)" fg:x="27" fg:w="3"/><text x="5.5754%" y="799.50"></text></g><g><title>__spawni_child (1 samples, 0.20%)</title><rect x="9.2702%" y="821" width="0.1972%" height="15" fill="rgb(206,27,48)" fg:x="47" fg:w="1"/><text x="9.5202%" y="831.50"></text></g><g><title>__GI___libc_sigaction (1 samples, 0.20%)</title><rect x="9.2702%" y="805" width="0.1972%" height="15" fill="rgb(225,35,8)" fg:x="47" fg:w="1"/><text x="9.5202%" y="815.50"></text></g><g><title>&lt;meet_middle::parse::constraint::pbe::PbeConstraint as core::clone::Clone&gt;::clone (1 samples, 0.20%)</title><rect x="9.6647%" y="613" width="0.1972%" height="15" fill="rgb(250,213,24)" fg:x="49" fg:w="1"/><text x="9.9147%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.20%)</title><rect x="9.6647%" y="597" width="0.1972%" height="15" fill="rgb(247,123,22)" fg:x="49" fg:w="1"/><text x="9.9147%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.20%)</title><rect x="9.6647%" y="581" width="0.1972%" height="15" fill="rgb(231,138,38)" fg:x="49" fg:w="1"/><text x="9.9147%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.20%)</title><rect x="9.6647%" y="565" width="0.1972%" height="15" fill="rgb(231,145,46)" fg:x="49" fg:w="1"/><text x="9.9147%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.20%)</title><rect x="9.6647%" y="549" width="0.1972%" height="15" fill="rgb(251,118,11)" fg:x="49" fg:w="1"/><text x="9.9147%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.20%)</title><rect x="9.6647%" y="533" width="0.1972%" height="15" fill="rgb(217,147,25)" fg:x="49" fg:w="1"/><text x="9.9147%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.20%)</title><rect x="9.6647%" y="517" width="0.1972%" height="15" fill="rgb(247,81,37)" fg:x="49" fg:w="1"/><text x="9.9147%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.20%)</title><rect x="9.6647%" y="501" width="0.1972%" height="15" fill="rgb(209,12,38)" fg:x="49" fg:w="1"/><text x="9.9147%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.20%)</title><rect x="9.6647%" y="485" width="0.1972%" height="15" fill="rgb(227,1,9)" fg:x="49" fg:w="1"/><text x="9.9147%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.20%)</title><rect x="9.6647%" y="469" width="0.1972%" height="15" fill="rgb(248,47,43)" fg:x="49" fg:w="1"/><text x="9.9147%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.20%)</title><rect x="9.6647%" y="453" width="0.1972%" height="15" fill="rgb(221,10,30)" fg:x="49" fg:w="1"/><text x="9.9147%" y="463.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.20%)</title><rect x="9.6647%" y="437" width="0.1972%" height="15" fill="rgb(210,229,1)" fg:x="49" fg:w="1"/><text x="9.9147%" y="447.50"></text></g><g><title>meet_middle::enumerate::algo::Algo&lt;_&gt;::new (3 samples, 0.59%)</title><rect x="9.8619%" y="581" width="0.5917%" height="15" fill="rgb(222,148,37)" fg:x="50" fg:w="3"/><text x="10.1119%" y="591.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (3 samples, 0.59%)</title><rect x="9.8619%" y="565" width="0.5917%" height="15" fill="rgb(234,67,33)" fg:x="50" fg:w="3"/><text x="10.1119%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (3 samples, 0.59%)</title><rect x="9.8619%" y="549" width="0.5917%" height="15" fill="rgb(247,98,35)" fg:x="50" fg:w="3"/><text x="10.1119%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::with_capacity (3 samples, 0.59%)</title><rect x="9.8619%" y="533" width="0.5917%" height="15" fill="rgb(247,138,52)" fg:x="50" fg:w="3"/><text x="10.1119%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (3 samples, 0.59%)</title><rect x="9.8619%" y="517" width="0.5917%" height="15" fill="rgb(213,79,30)" fg:x="50" fg:w="3"/><text x="10.1119%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::fallible_with_capacity (3 samples, 0.59%)</title><rect x="9.8619%" y="501" width="0.5917%" height="15" fill="rgb(246,177,23)" fg:x="50" fg:w="3"/><text x="10.1119%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (3 samples, 0.59%)</title><rect x="9.8619%" y="485" width="0.5917%" height="15" fill="rgb(230,62,27)" fg:x="50" fg:w="3"/><text x="10.1119%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (3 samples, 0.59%)</title><rect x="9.8619%" y="469" width="0.5917%" height="15" fill="rgb(216,154,8)" fg:x="50" fg:w="3"/><text x="10.1119%" y="479.50"></text></g><g><title>core::intrinsics::write_bytes (3 samples, 0.59%)</title><rect x="9.8619%" y="453" width="0.5917%" height="15" fill="rgb(244,35,45)" fg:x="50" fg:w="3"/><text x="10.1119%" y="463.50"></text></g><g><title>__memset_avx2_erms (3 samples, 0.59%)</title><rect x="9.8619%" y="437" width="0.5917%" height="15" fill="rgb(251,115,12)" fg:x="50" fg:w="3"/><text x="10.1119%" y="447.50"></text></g><g><title>meet_middle::enumerate::algo::Algo&lt;_&gt;::run_until::{{closure}} (1 samples, 0.20%)</title><rect x="10.4536%" y="549" width="0.1972%" height="15" fill="rgb(240,54,50)" fg:x="53" fg:w="1"/><text x="10.7036%" y="559.50"></text></g><g><title>meet_middle::search::sample::SampleConfig::search_inner::{{closure}} (1 samples, 0.20%)</title><rect x="10.4536%" y="533" width="0.1972%" height="15" fill="rgb(233,84,52)" fg:x="53" fg:w="1"/><text x="10.7036%" y="543.50"></text></g><g><title>meet_middle::search::filter::FilterState&lt;_&gt;::filter (1 samples, 0.20%)</title><rect x="10.4536%" y="517" width="0.1972%" height="15" fill="rgb(207,117,47)" fg:x="53" fg:w="1"/><text x="10.7036%" y="527.50"></text></g><g><title>meet_middle::solutions::Solutions::add_solution (1 samples, 0.20%)</title><rect x="10.4536%" y="501" width="0.1972%" height="15" fill="rgb(249,43,39)" fg:x="53" fg:w="1"/><text x="10.7036%" y="511.50"></text></g><g><title>meet_middle::parse::constraint::pbe::PbeConstraint::test (1 samples, 0.20%)</title><rect x="10.4536%" y="485" width="0.1972%" height="15" fill="rgb(209,38,44)" fg:x="53" fg:w="1"/><text x="10.7036%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.20%)</title><rect x="10.4536%" y="469" width="0.1972%" height="15" fill="rgb(236,212,23)" fg:x="53" fg:w="1"/><text x="10.7036%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.20%)</title><rect x="10.4536%" y="453" width="0.1972%" height="15" fill="rgb(242,79,21)" fg:x="53" fg:w="1"/><text x="10.7036%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.20%)</title><rect x="10.4536%" y="437" width="0.1972%" height="15" fill="rgb(211,96,35)" fg:x="53" fg:w="1"/><text x="10.7036%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.20%)</title><rect x="10.4536%" y="421" width="0.1972%" height="15" fill="rgb(253,215,40)" fg:x="53" fg:w="1"/><text x="10.7036%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.20%)</title><rect x="10.4536%" y="405" width="0.1972%" height="15" fill="rgb(211,81,21)" fg:x="53" fg:w="1"/><text x="10.7036%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.20%)</title><rect x="10.4536%" y="389" width="0.1972%" height="15" fill="rgb(208,190,38)" fg:x="53" fg:w="1"/><text x="10.7036%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.20%)</title><rect x="10.4536%" y="373" width="0.1972%" height="15" fill="rgb(235,213,38)" fg:x="53" fg:w="1"/><text x="10.7036%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.20%)</title><rect x="10.4536%" y="357" width="0.1972%" height="15" fill="rgb(237,122,38)" fg:x="53" fg:w="1"/><text x="10.7036%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.20%)</title><rect x="10.4536%" y="341" width="0.1972%" height="15" fill="rgb(244,218,35)" fg:x="53" fg:w="1"/><text x="10.7036%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.20%)</title><rect x="10.4536%" y="325" width="0.1972%" height="15" fill="rgb(240,68,47)" fg:x="53" fg:w="1"/><text x="10.7036%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.20%)</title><rect x="10.4536%" y="309" width="0.1972%" height="15" fill="rgb(210,16,53)" fg:x="53" fg:w="1"/><text x="10.7036%" y="319.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.20%)</title><rect x="10.4536%" y="293" width="0.1972%" height="15" fill="rgb(235,124,12)" fg:x="53" fg:w="1"/><text x="10.7036%" y="303.50"></text></g><g><title>meet_middle::enumerate::expr::Expr::for_each_subexpr (1 samples, 0.20%)</title><rect x="10.6509%" y="549" width="0.1972%" height="15" fill="rgb(224,169,11)" fg:x="54" fg:w="1"/><text x="10.9009%" y="559.50"></text></g><g><title>meet_middle::enumerate::algo::Algo&lt;_&gt;::run_until::{{closure}} (1 samples, 0.20%)</title><rect x="10.6509%" y="533" width="0.1972%" height="15" fill="rgb(250,166,2)" fg:x="54" fg:w="1"/><text x="10.9009%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::try_insert (1 samples, 0.20%)</title><rect x="10.6509%" y="517" width="0.1972%" height="15" fill="rgb(242,216,29)" fg:x="54" fg:w="1"/><text x="10.9009%" y="527.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (1 samples, 0.20%)</title><rect x="10.6509%" y="501" width="0.1972%" height="15" fill="rgb(230,116,27)" fg:x="54" fg:w="1"/><text x="10.9009%" y="511.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.20%)</title><rect x="10.6509%" y="485" width="0.1972%" height="15" fill="rgb(228,99,48)" fg:x="54" fg:w="1"/><text x="10.9009%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (1 samples, 0.20%)</title><rect x="10.6509%" y="469" width="0.1972%" height="15" fill="rgb(253,11,6)" fg:x="54" fg:w="1"/><text x="10.9009%" y="479.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1 samples, 0.20%)</title><rect x="10.6509%" y="453" width="0.1972%" height="15" fill="rgb(247,143,39)" fg:x="54" fg:w="1"/><text x="10.9009%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.20%)</title><rect x="10.6509%" y="437" width="0.1972%" height="15" fill="rgb(236,97,10)" fg:x="54" fg:w="1"/><text x="10.9009%" y="447.50"></text></g><g><title>core::ptr::write (1 samples, 0.20%)</title><rect x="10.6509%" y="421" width="0.1972%" height="15" fill="rgb(233,208,19)" fg:x="54" fg:w="1"/><text x="10.9009%" y="431.50"></text></g><g><title>meet_middle::enumerate::expr::Expr::for_each_subexpr (3 samples, 0.59%)</title><rect x="10.4536%" y="565" width="0.5917%" height="15" fill="rgb(216,164,2)" fg:x="53" fg:w="3"/><text x="10.7036%" y="575.50"></text></g><g><title>meet_middle::enumerate::op::bv::xor (1 samples, 0.20%)</title><rect x="10.8481%" y="549" width="0.1972%" height="15" fill="rgb(220,129,5)" fg:x="55" fg:w="1"/><text x="11.0981%" y="559.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::collect (1 samples, 0.20%)</title><rect x="10.8481%" y="533" width="0.1972%" height="15" fill="rgb(242,17,10)" fg:x="55" fg:w="1"/><text x="11.0981%" y="543.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed (1 samples, 0.20%)</title><rect x="10.8481%" y="517" width="0.1972%" height="15" fill="rgb(242,107,0)" fg:x="55" fg:w="1"/><text x="11.0981%" y="527.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::map (1 samples, 0.20%)</title><rect x="10.8481%" y="501" width="0.1972%" height="15" fill="rgb(251,28,31)" fg:x="55" fg:w="1"/><text x="11.0981%" y="511.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map (1 samples, 0.20%)</title><rect x="10.8481%" y="485" width="0.1972%" height="15" fill="rgb(233,223,10)" fg:x="55" fg:w="1"/><text x="11.0981%" y="495.50"></text></g><g><title>core::array::drain::drain_array_with (1 samples, 0.20%)</title><rect x="10.8481%" y="469" width="0.1972%" height="15" fill="rgb(215,21,27)" fg:x="55" fg:w="1"/><text x="11.0981%" y="479.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map::{{closure}} (1 samples, 0.20%)</title><rect x="10.8481%" y="453" width="0.1972%" height="15" fill="rgb(232,23,21)" fg:x="55" fg:w="1"/><text x="11.0981%" y="463.50"></text></g><g><title>core::array::try_from_trusted_iterator (1 samples, 0.20%)</title><rect x="10.8481%" y="437" width="0.1972%" height="15" fill="rgb(244,5,23)" fg:x="55" fg:w="1"/><text x="11.0981%" y="447.50"></text></g><g><title>core::array::try_from_fn (1 samples, 0.20%)</title><rect x="10.8481%" y="421" width="0.1972%" height="15" fill="rgb(226,81,46)" fg:x="55" fg:w="1"/><text x="11.0981%" y="431.50"></text></g><g><title>core::array::try_from_fn_erased (1 samples, 0.20%)</title><rect x="10.8481%" y="405" width="0.1972%" height="15" fill="rgb(247,70,30)" fg:x="55" fg:w="1"/><text x="11.0981%" y="415.50"></text></g><g><title>core::array::try_from_trusted_iterator::next::{{closure}} (1 samples, 0.20%)</title><rect x="10.8481%" y="389" width="0.1972%" height="15" fill="rgb(212,68,19)" fg:x="55" fg:w="1"/><text x="11.0981%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (1 samples, 0.20%)</title><rect x="10.8481%" y="373" width="0.1972%" height="15" fill="rgb(240,187,13)" fg:x="55" fg:w="1"/><text x="11.0981%" y="383.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_1::{{closure}} (1 samples, 0.20%)</title><rect x="10.8481%" y="357" width="0.1972%" height="15" fill="rgb(223,113,26)" fg:x="55" fg:w="1"/><text x="11.0981%" y="367.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed::{{closure}} (1 samples, 0.20%)</title><rect x="10.8481%" y="341" width="0.1972%" height="15" fill="rgb(206,192,2)" fg:x="55" fg:w="1"/><text x="11.0981%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="10.8481%" y="325" width="0.1972%" height="15" fill="rgb(241,108,4)" fg:x="55" fg:w="1"/><text x="11.0981%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="10.8481%" y="309" width="0.1972%" height="15" fill="rgb(247,173,49)" fg:x="55" fg:w="1"/><text x="11.0981%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.20%)</title><rect x="10.8481%" y="293" width="0.1972%" height="15" fill="rgb(224,114,35)" fg:x="55" fg:w="1"/><text x="11.0981%" y="303.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="10.8481%" y="277" width="0.1972%" height="15" fill="rgb(245,159,27)" fg:x="55" fg:w="1"/><text x="11.0981%" y="287.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="10.8481%" y="261" width="0.1972%" height="15" fill="rgb(245,172,44)" fg:x="55" fg:w="1"/><text x="11.0981%" y="271.50"></text></g><g><title>core::ops::index_range::IndexRange::next_unchecked (1 samples, 0.20%)</title><rect x="10.8481%" y="245" width="0.1972%" height="15" fill="rgb(236,23,11)" fg:x="55" fg:w="1"/><text x="11.0981%" y="255.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 1.58%)</title><rect x="9.6647%" y="725" width="1.5779%" height="15" fill="rgb(205,117,38)" fg:x="49" fg:w="8"/><text x="9.9147%" y="735.50"></text></g><g><title>std::panicking::try (8 samples, 1.58%)</title><rect x="9.6647%" y="709" width="1.5779%" height="15" fill="rgb(237,72,25)" fg:x="49" fg:w="8"/><text x="9.9147%" y="719.50"></text></g><g><title>std::panicking::try::do_call (8 samples, 1.58%)</title><rect x="9.6647%" y="693" width="1.5779%" height="15" fill="rgb(244,70,9)" fg:x="49" fg:w="8"/><text x="9.9147%" y="703.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (8 samples, 1.58%)</title><rect x="9.6647%" y="677" width="1.5779%" height="15" fill="rgb(217,125,39)" fg:x="49" fg:w="8"/><text x="9.9147%" y="687.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (8 samples, 1.58%)</title><rect x="9.6647%" y="661" width="1.5779%" height="15" fill="rgb(235,36,10)" fg:x="49" fg:w="8"/><text x="9.9147%" y="671.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (8 samples, 1.58%)</title><rect x="9.6647%" y="645" width="1.5779%" height="15" fill="rgb(251,123,47)" fg:x="49" fg:w="8"/><text x="9.9147%" y="655.50"></text></g><g><title>meet_middle::search::search::SearchConfig::search::{{closure}} (8 samples, 1.58%)</title><rect x="9.6647%" y="629" width="1.5779%" height="15" fill="rgb(221,13,13)" fg:x="49" fg:w="8"/><text x="9.9147%" y="639.50"></text></g><g><title>meet_middle::search::sample::SampleConfig::search (7 samples, 1.38%)</title><rect x="9.8619%" y="613" width="1.3807%" height="15" fill="rgb(238,131,9)" fg:x="50" fg:w="7"/><text x="10.1119%" y="623.50"></text></g><g><title>meet_middle::search::sample::SampleConfig::search_inner (7 samples, 1.38%)</title><rect x="9.8619%" y="597" width="1.3807%" height="15" fill="rgb(211,50,8)" fg:x="50" fg:w="7"/><text x="10.1119%" y="607.50"></text></g><g><title>meet_middle::enumerate::algo::Algo&lt;_&gt;::run_until (4 samples, 0.79%)</title><rect x="10.4536%" y="581" width="0.7890%" height="15" fill="rgb(245,182,24)" fg:x="53" fg:w="4"/><text x="10.7036%" y="591.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::try_insert (1 samples, 0.20%)</title><rect x="11.0454%" y="565" width="0.1972%" height="15" fill="rgb(242,14,37)" fg:x="56" fg:w="1"/><text x="11.2954%" y="575.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (1 samples, 0.20%)</title><rect x="11.0454%" y="549" width="0.1972%" height="15" fill="rgb(246,228,12)" fg:x="56" fg:w="1"/><text x="11.2954%" y="559.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.20%)</title><rect x="11.0454%" y="533" width="0.1972%" height="15" fill="rgb(213,55,15)" fg:x="56" fg:w="1"/><text x="11.2954%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (1 samples, 0.20%)</title><rect x="11.0454%" y="517" width="0.1972%" height="15" fill="rgb(209,9,3)" fg:x="56" fg:w="1"/><text x="11.2954%" y="527.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1 samples, 0.20%)</title><rect x="11.0454%" y="501" width="0.1972%" height="15" fill="rgb(230,59,30)" fg:x="56" fg:w="1"/><text x="11.2954%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.20%)</title><rect x="11.0454%" y="485" width="0.1972%" height="15" fill="rgb(209,121,21)" fg:x="56" fg:w="1"/><text x="11.2954%" y="495.50"></text></g><g><title>core::ptr::write (1 samples, 0.20%)</title><rect x="11.0454%" y="469" width="0.1972%" height="15" fill="rgb(220,109,13)" fg:x="56" fg:w="1"/><text x="11.2954%" y="479.50"></text></g><g><title>__GI___clone (28 samples, 5.52%)</title><rect x="5.9172%" y="837" width="5.5227%" height="15" fill="rgb(232,18,1)" fg:x="30" fg:w="28"/><text x="6.1672%" y="847.50">__GI___..</text></g><g><title>start_thread (10 samples, 1.97%)</title><rect x="9.4675%" y="821" width="1.9724%" height="15" fill="rgb(215,41,42)" fg:x="48" fg:w="10"/><text x="9.7175%" y="831.50">s..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (9 samples, 1.78%)</title><rect x="9.6647%" y="805" width="1.7751%" height="15" fill="rgb(224,123,36)" fg:x="49" fg:w="9"/><text x="9.9147%" y="815.50">s..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (9 samples, 1.78%)</title><rect x="9.6647%" y="789" width="1.7751%" height="15" fill="rgb(240,125,3)" fg:x="49" fg:w="9"/><text x="9.9147%" y="799.50">&lt;..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (9 samples, 1.78%)</title><rect x="9.6647%" y="773" width="1.7751%" height="15" fill="rgb(205,98,50)" fg:x="49" fg:w="9"/><text x="9.9147%" y="783.50">&lt;..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (9 samples, 1.78%)</title><rect x="9.6647%" y="757" width="1.7751%" height="15" fill="rgb(205,185,37)" fg:x="49" fg:w="9"/><text x="9.9147%" y="767.50">c..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (9 samples, 1.78%)</title><rect x="9.6647%" y="741" width="1.7751%" height="15" fill="rgb(238,207,15)" fg:x="49" fg:w="9"/><text x="9.9147%" y="751.50">s..</text></g><g><title>std::sys::unix::thread::guard::current (1 samples, 0.20%)</title><rect x="11.2426%" y="725" width="0.1972%" height="15" fill="rgb(213,199,42)" fg:x="57" fg:w="1"/><text x="11.4926%" y="735.50"></text></g><g><title>pthread_getattr_np (1 samples, 0.20%)</title><rect x="11.2426%" y="709" width="0.1972%" height="15" fill="rgb(235,201,11)" fg:x="57" fg:w="1"/><text x="11.4926%" y="719.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.20%)</title><rect x="11.2426%" y="693" width="0.1972%" height="15" fill="rgb(207,46,11)" fg:x="57" fg:w="1"/><text x="11.4926%" y="703.50"></text></g><g><title>tcache_init.part.0 (1 samples, 0.20%)</title><rect x="11.2426%" y="677" width="0.1972%" height="15" fill="rgb(241,35,35)" fg:x="57" fg:w="1"/><text x="11.4926%" y="687.50"></text></g><g><title>_int_malloc (1 samples, 0.20%)</title><rect x="11.2426%" y="661" width="0.1972%" height="15" fill="rgb(243,32,47)" fg:x="57" fg:w="1"/><text x="11.4926%" y="671.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.20%)</title><rect x="11.4398%" y="837" width="0.1972%" height="15" fill="rgb(247,202,23)" fg:x="58" fg:w="1"/><text x="11.6898%" y="847.50"></text></g><g><title>__libc_start_main (1 samples, 0.20%)</title><rect x="11.6371%" y="837" width="0.1972%" height="15" fill="rgb(219,102,11)" fg:x="59" fg:w="1"/><text x="11.8871%" y="847.50"></text></g><g><title>main (1 samples, 0.20%)</title><rect x="11.6371%" y="821" width="0.1972%" height="15" fill="rgb(243,110,44)" fg:x="59" fg:w="1"/><text x="11.8871%" y="831.50"></text></g><g><title>std::rt::lang_start_internal (1 samples, 0.20%)</title><rect x="11.6371%" y="805" width="0.1972%" height="15" fill="rgb(222,74,54)" fg:x="59" fg:w="1"/><text x="11.8871%" y="815.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.20%)</title><rect x="11.6371%" y="789" width="0.1972%" height="15" fill="rgb(216,99,12)" fg:x="59" fg:w="1"/><text x="11.8871%" y="799.50"></text></g><g><title>std::panicking::try (1 samples, 0.20%)</title><rect x="11.6371%" y="773" width="0.1972%" height="15" fill="rgb(226,22,26)" fg:x="59" fg:w="1"/><text x="11.8871%" y="783.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.20%)</title><rect x="11.6371%" y="757" width="0.1972%" height="15" fill="rgb(217,163,10)" fg:x="59" fg:w="1"/><text x="11.8871%" y="767.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (1 samples, 0.20%)</title><rect x="11.6371%" y="741" width="0.1972%" height="15" fill="rgb(213,25,53)" fg:x="59" fg:w="1"/><text x="11.8871%" y="751.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.20%)</title><rect x="11.6371%" y="725" width="0.1972%" height="15" fill="rgb(252,105,26)" fg:x="59" fg:w="1"/><text x="11.8871%" y="735.50"></text></g><g><title>std::panicking::try (1 samples, 0.20%)</title><rect x="11.6371%" y="709" width="0.1972%" height="15" fill="rgb(220,39,43)" fg:x="59" fg:w="1"/><text x="11.8871%" y="719.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.20%)</title><rect x="11.6371%" y="693" width="0.1972%" height="15" fill="rgb(229,68,48)" fg:x="59" fg:w="1"/><text x="11.8871%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1 samples, 0.20%)</title><rect x="11.6371%" y="677" width="0.1972%" height="15" fill="rgb(252,8,32)" fg:x="59" fg:w="1"/><text x="11.8871%" y="687.50"></text></g><g><title>std::rt::lang_start::{{closure}} (1 samples, 0.20%)</title><rect x="11.6371%" y="661" width="0.1972%" height="15" fill="rgb(223,20,43)" fg:x="59" fg:w="1"/><text x="11.8871%" y="671.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.20%)</title><rect x="11.6371%" y="645" width="0.1972%" height="15" fill="rgb(229,81,49)" fg:x="59" fg:w="1"/><text x="11.8871%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.20%)</title><rect x="11.6371%" y="629" width="0.1972%" height="15" fill="rgb(236,28,36)" fg:x="59" fg:w="1"/><text x="11.8871%" y="639.50"></text></g><g><title>meet_middle::main (1 samples, 0.20%)</title><rect x="11.6371%" y="613" width="0.1972%" height="15" fill="rgb(249,185,26)" fg:x="59" fg:w="1"/><text x="11.8871%" y="623.50"></text></g><g><title>meet_middle::main_inner (1 samples, 0.20%)</title><rect x="11.6371%" y="597" width="0.1972%" height="15" fill="rgb(249,174,33)" fg:x="59" fg:w="1"/><text x="11.8871%" y="607.50"></text></g><g><title>meet_middle::search::search::SearchConfig::cegis_loop (1 samples, 0.20%)</title><rect x="11.6371%" y="581" width="0.1972%" height="15" fill="rgb(233,201,37)" fg:x="59" fg:w="1"/><text x="11.8871%" y="591.50"></text></g><g><title>meet_middle::search::search::SearchConfig::search (1 samples, 0.20%)</title><rect x="11.6371%" y="565" width="0.1972%" height="15" fill="rgb(221,78,26)" fg:x="59" fg:w="1"/><text x="11.8871%" y="575.50"></text></g><g><title>meet_middle::search::sample::SampleConfig::search (1 samples, 0.20%)</title><rect x="11.6371%" y="549" width="0.1972%" height="15" fill="rgb(250,127,30)" fg:x="59" fg:w="1"/><text x="11.8871%" y="559.50"></text></g><g><title>meet_middle::search::sample::SampleConfig::search_inner (1 samples, 0.20%)</title><rect x="11.6371%" y="533" width="0.1972%" height="15" fill="rgb(230,49,44)" fg:x="59" fg:w="1"/><text x="11.8871%" y="543.50"></text></g><g><title>meet_middle::enumerate::algo::Algo&lt;_&gt;::run_until (1 samples, 0.20%)</title><rect x="11.6371%" y="517" width="0.1972%" height="15" fill="rgb(229,67,23)" fg:x="59" fg:w="1"/><text x="11.8871%" y="527.50"></text></g><g><title>meet_middle::enumerate::expr::Expr::for_each_subexpr (1 samples, 0.20%)</title><rect x="11.6371%" y="501" width="0.1972%" height="15" fill="rgb(249,83,47)" fg:x="59" fg:w="1"/><text x="11.8871%" y="511.50"></text></g><g><title>meet_middle::enumerate::algo::Algo&lt;_&gt;::run_until::{{closure}} (1 samples, 0.20%)</title><rect x="11.6371%" y="485" width="0.1972%" height="15" fill="rgb(215,43,3)" fg:x="59" fg:w="1"/><text x="11.8871%" y="495.50"></text></g><g><title>meet_middle::search::sample::SampleConfig::search_inner::{{closure}} (1 samples, 0.20%)</title><rect x="11.6371%" y="469" width="0.1972%" height="15" fill="rgb(238,154,13)" fg:x="59" fg:w="1"/><text x="11.8871%" y="479.50"></text></g><g><title>meet_middle::search::filter::FilterState&lt;_&gt;::filter (1 samples, 0.20%)</title><rect x="11.6371%" y="453" width="0.1972%" height="15" fill="rgb(219,56,2)" fg:x="59" fg:w="1"/><text x="11.8871%" y="463.50"></text></g><g><title>meet_middle::solutions::Solutions::add_solution (1 samples, 0.20%)</title><rect x="11.6371%" y="437" width="0.1972%" height="15" fill="rgb(233,0,4)" fg:x="59" fg:w="1"/><text x="11.8871%" y="447.50"></text></g><g><title>meet_middle::parse::constraint::pbe::PbeConstraint::test (1 samples, 0.20%)</title><rect x="11.6371%" y="421" width="0.1972%" height="15" fill="rgb(235,30,7)" fg:x="59" fg:w="1"/><text x="11.8871%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.20%)</title><rect x="11.6371%" y="405" width="0.1972%" height="15" fill="rgb(250,79,13)" fg:x="59" fg:w="1"/><text x="11.8871%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.20%)</title><rect x="11.6371%" y="389" width="0.1972%" height="15" fill="rgb(211,146,34)" fg:x="59" fg:w="1"/><text x="11.8871%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.20%)</title><rect x="11.6371%" y="373" width="0.1972%" height="15" fill="rgb(228,22,38)" fg:x="59" fg:w="1"/><text x="11.8871%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.20%)</title><rect x="11.6371%" y="357" width="0.1972%" height="15" fill="rgb(235,168,5)" fg:x="59" fg:w="1"/><text x="11.8871%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.20%)</title><rect x="11.6371%" y="341" width="0.1972%" height="15" fill="rgb(221,155,16)" fg:x="59" fg:w="1"/><text x="11.8871%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.20%)</title><rect x="11.6371%" y="325" width="0.1972%" height="15" fill="rgb(215,215,53)" fg:x="59" fg:w="1"/><text x="11.8871%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="11.6371%" y="309" width="0.1972%" height="15" fill="rgb(223,4,10)" fg:x="59" fg:w="1"/><text x="11.8871%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="11.6371%" y="293" width="0.1972%" height="15" fill="rgb(234,103,6)" fg:x="59" fg:w="1"/><text x="11.8871%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="11.6371%" y="277" width="0.1972%" height="15" fill="rgb(227,97,0)" fg:x="59" fg:w="1"/><text x="11.8871%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.20%)</title><rect x="11.6371%" y="261" width="0.1972%" height="15" fill="rgb(234,150,53)" fg:x="59" fg:w="1"/><text x="11.8871%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="11.6371%" y="245" width="0.1972%" height="15" fill="rgb(228,201,54)" fg:x="59" fg:w="1"/><text x="11.8871%" y="255.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.20%)</title><rect x="11.6371%" y="229" width="0.1972%" height="15" fill="rgb(222,22,37)" fg:x="59" fg:w="1"/><text x="11.8871%" y="239.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.20%)</title><rect x="11.6371%" y="213" width="0.1972%" height="15" fill="rgb(237,53,32)" fg:x="59" fg:w="1"/><text x="11.8871%" y="223.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.20%)</title><rect x="11.6371%" y="197" width="0.1972%" height="15" fill="rgb(233,25,53)" fg:x="59" fg:w="1"/><text x="11.8871%" y="207.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.20%)</title><rect x="11.8343%" y="565" width="0.1972%" height="15" fill="rgb(210,40,34)" fg:x="60" fg:w="1"/><text x="12.0843%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.20%)</title><rect x="11.8343%" y="549" width="0.1972%" height="15" fill="rgb(241,220,44)" fg:x="60" fg:w="1"/><text x="12.0843%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.20%)</title><rect x="11.8343%" y="533" width="0.1972%" height="15" fill="rgb(235,28,35)" fg:x="60" fg:w="1"/><text x="12.0843%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.20%)</title><rect x="11.8343%" y="517" width="0.1972%" height="15" fill="rgb(210,56,17)" fg:x="60" fg:w="1"/><text x="12.0843%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.20%)</title><rect x="11.8343%" y="501" width="0.1972%" height="15" fill="rgb(224,130,29)" fg:x="60" fg:w="1"/><text x="12.0843%" y="511.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.20%)</title><rect x="11.8343%" y="485" width="0.1972%" height="15" fill="rgb(235,212,8)" fg:x="60" fg:w="1"/><text x="12.0843%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.20%)</title><rect x="12.0316%" y="485" width="0.1972%" height="15" fill="rgb(223,33,50)" fg:x="61" fg:w="1"/><text x="12.2816%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.39%)</title><rect x="12.0316%" y="501" width="0.3945%" height="15" fill="rgb(219,149,13)" fg:x="61" fg:w="2"/><text x="12.2816%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.20%)</title><rect x="12.2288%" y="485" width="0.1972%" height="15" fill="rgb(250,156,29)" fg:x="62" fg:w="1"/><text x="12.4788%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.20%)</title><rect x="12.2288%" y="469" width="0.1972%" height="15" fill="rgb(216,193,19)" fg:x="62" fg:w="1"/><text x="12.4788%" y="479.50"></text></g><g><title>&lt;meet_middle::enumerate::Bv&lt;_&gt; as core::hash::Hash&gt;::hash (1 samples, 0.20%)</title><rect x="12.2288%" y="453" width="0.1972%" height="15" fill="rgb(216,135,14)" fg:x="62" fg:w="1"/><text x="12.4788%" y="463.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (1 samples, 0.20%)</title><rect x="12.2288%" y="437" width="0.1972%" height="15" fill="rgb(241,47,5)" fg:x="62" fg:w="1"/><text x="12.4788%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.20%)</title><rect x="12.2288%" y="421" width="0.1972%" height="15" fill="rgb(233,42,35)" fg:x="62" fg:w="1"/><text x="12.4788%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash_slice (1 samples, 0.20%)</title><rect x="12.2288%" y="405" width="0.1972%" height="15" fill="rgb(231,13,6)" fg:x="62" fg:w="1"/><text x="12.4788%" y="415.50"></text></g><g><title>meet_middle::enumerate::algo::Algo&lt;_&gt;::new (2 samples, 0.39%)</title><rect x="12.4260%" y="501" width="0.3945%" height="15" fill="rgb(207,181,40)" fg:x="63" fg:w="2"/><text x="12.6760%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (2 samples, 0.39%)</title><rect x="12.4260%" y="485" width="0.3945%" height="15" fill="rgb(254,173,49)" fg:x="63" fg:w="2"/><text x="12.6760%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (2 samples, 0.39%)</title><rect x="12.4260%" y="469" width="0.3945%" height="15" fill="rgb(221,1,38)" fg:x="63" fg:w="2"/><text x="12.6760%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::with_capacity (2 samples, 0.39%)</title><rect x="12.4260%" y="453" width="0.3945%" height="15" fill="rgb(206,124,46)" fg:x="63" fg:w="2"/><text x="12.6760%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (2 samples, 0.39%)</title><rect x="12.4260%" y="437" width="0.3945%" height="15" fill="rgb(249,21,11)" fg:x="63" fg:w="2"/><text x="12.6760%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::fallible_with_capacity (2 samples, 0.39%)</title><rect x="12.4260%" y="421" width="0.3945%" height="15" fill="rgb(222,201,40)" fg:x="63" fg:w="2"/><text x="12.6760%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (2 samples, 0.39%)</title><rect x="12.4260%" y="405" width="0.3945%" height="15" fill="rgb(235,61,29)" fg:x="63" fg:w="2"/><text x="12.6760%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (2 samples, 0.39%)</title><rect x="12.4260%" y="389" width="0.3945%" height="15" fill="rgb(219,207,3)" fg:x="63" fg:w="2"/><text x="12.6760%" y="399.50"></text></g><g><title>core::intrinsics::write_bytes (2 samples, 0.39%)</title><rect x="12.4260%" y="373" width="0.3945%" height="15" fill="rgb(222,56,46)" fg:x="63" fg:w="2"/><text x="12.6760%" y="383.50"></text></g><g><title>__memset_avx2_erms (2 samples, 0.39%)</title><rect x="12.4260%" y="357" width="0.3945%" height="15" fill="rgb(239,76,54)" fg:x="63" fg:w="2"/><text x="12.6760%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="14.5957%" y="485" width="0.1972%" height="15" fill="rgb(231,124,27)" fg:x="74" fg:w="1"/><text x="14.8457%" y="495.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.20%)</title><rect x="14.5957%" y="469" width="0.1972%" height="15" fill="rgb(249,195,6)" fg:x="74" fg:w="1"/><text x="14.8457%" y="479.50"></text></g><g><title>&lt;itertools::adaptors::Combinations&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="14.7929%" y="485" width="0.1972%" height="15" fill="rgb(237,174,47)" fg:x="75" fg:w="1"/><text x="15.0429%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (1 samples, 0.20%)</title><rect x="14.7929%" y="469" width="0.1972%" height="15" fill="rgb(206,201,31)" fg:x="75" fg:w="1"/><text x="15.0429%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.20%)</title><rect x="14.7929%" y="453" width="0.1972%" height="15" fill="rgb(231,57,52)" fg:x="75" fg:w="1"/><text x="15.0429%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (10 samples, 1.97%)</title><rect x="14.9901%" y="469" width="1.9724%" height="15" fill="rgb(248,177,22)" fg:x="76" fg:w="10"/><text x="15.2401%" y="479.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 1.97%)</title><rect x="14.9901%" y="453" width="1.9724%" height="15" fill="rgb(215,211,37)" fg:x="76" fg:w="10"/><text x="15.2401%" y="463.50">a..</text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 1.97%)</title><rect x="14.9901%" y="437" width="1.9724%" height="15" fill="rgb(241,128,51)" fg:x="76" fg:w="10"/><text x="15.2401%" y="447.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (10 samples, 1.97%)</title><rect x="14.9901%" y="421" width="1.9724%" height="15" fill="rgb(227,165,31)" fg:x="76" fg:w="10"/><text x="15.2401%" y="431.50">&lt;..</text></g><g><title>alloc::alloc::Global::grow_impl (10 samples, 1.97%)</title><rect x="14.9901%" y="405" width="1.9724%" height="15" fill="rgb(228,167,24)" fg:x="76" fg:w="10"/><text x="15.2401%" y="415.50">a..</text></g><g><title>alloc::alloc::realloc (10 samples, 1.97%)</title><rect x="14.9901%" y="389" width="1.9724%" height="15" fill="rgb(228,143,12)" fg:x="76" fg:w="10"/><text x="15.2401%" y="399.50">a..</text></g><g><title>__rdl_realloc (10 samples, 1.97%)</title><rect x="14.9901%" y="373" width="1.9724%" height="15" fill="rgb(249,149,8)" fg:x="76" fg:w="10"/><text x="15.2401%" y="383.50">_..</text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (10 samples, 1.97%)</title><rect x="14.9901%" y="357" width="1.9724%" height="15" fill="rgb(243,35,44)" fg:x="76" fg:w="10"/><text x="15.2401%" y="367.50">s..</text></g><g><title>std::sys::common::alloc::realloc_fallback (10 samples, 1.97%)</title><rect x="14.9901%" y="341" width="1.9724%" height="15" fill="rgb(246,89,9)" fg:x="76" fg:w="10"/><text x="15.2401%" y="351.50">s..</text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 1.97%)</title><rect x="14.9901%" y="325" width="1.9724%" height="15" fill="rgb(233,213,13)" fg:x="76" fg:w="10"/><text x="15.2401%" y="335.50">c..</text></g><g><title>__memmove_avx_unaligned_erms (10 samples, 1.97%)</title><rect x="14.9901%" y="309" width="1.9724%" height="15" fill="rgb(233,141,41)" fg:x="76" fg:w="10"/><text x="15.2401%" y="319.50">_..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (12 samples, 2.37%)</title><rect x="14.9901%" y="485" width="2.3669%" height="15" fill="rgb(239,167,4)" fg:x="76" fg:w="12"/><text x="15.2401%" y="495.50">al..</text></g><g><title>core::ptr::write (2 samples, 0.39%)</title><rect x="16.9625%" y="469" width="0.3945%" height="15" fill="rgb(209,217,16)" fg:x="86" fg:w="2"/><text x="17.2125%" y="479.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.20%)</title><rect x="17.1598%" y="453" width="0.1972%" height="15" fill="rgb(219,88,35)" fg:x="87" fg:w="1"/><text x="17.4098%" y="463.50"></text></g><g><title>bumpalo::Bump::alloc_layout (3 samples, 0.59%)</title><rect x="17.3570%" y="453" width="0.5917%" height="15" fill="rgb(220,193,23)" fg:x="88" fg:w="3"/><text x="17.6070%" y="463.50"></text></g><g><title>bumpalo::Bump::try_alloc_layout (3 samples, 0.59%)</title><rect x="17.3570%" y="437" width="0.5917%" height="15" fill="rgb(230,90,52)" fg:x="88" fg:w="3"/><text x="17.6070%" y="447.50"></text></g><g><title>bumpalo::Bump::try_alloc_layout_fast (2 samples, 0.39%)</title><rect x="17.5542%" y="421" width="0.3945%" height="15" fill="rgb(252,106,19)" fg:x="89" fg:w="2"/><text x="17.8042%" y="431.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.20%)</title><rect x="17.7515%" y="405" width="0.1972%" height="15" fill="rgb(206,74,20)" fg:x="90" fg:w="1"/><text x="18.0015%" y="415.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.20%)</title><rect x="17.7515%" y="389" width="0.1972%" height="15" fill="rgb(230,138,44)" fg:x="90" fg:w="1"/><text x="18.0015%" y="399.50"></text></g><g><title>core::mem::replace (1 samples, 0.20%)</title><rect x="17.7515%" y="373" width="0.1972%" height="15" fill="rgb(235,182,43)" fg:x="90" fg:w="1"/><text x="18.0015%" y="383.50"></text></g><g><title>core::ptr::write (1 samples, 0.20%)</title><rect x="17.7515%" y="357" width="0.1972%" height="15" fill="rgb(242,16,51)" fg:x="90" fg:w="1"/><text x="18.0015%" y="367.50"></text></g><g><title>bumpalo::Bump::alloc (5 samples, 0.99%)</title><rect x="17.3570%" y="485" width="0.9862%" height="15" fill="rgb(248,9,4)" fg:x="88" fg:w="5"/><text x="17.6070%" y="495.50"></text></g><g><title>bumpalo::Bump::alloc_with (5 samples, 0.99%)</title><rect x="17.3570%" y="469" width="0.9862%" height="15" fill="rgb(210,31,22)" fg:x="88" fg:w="5"/><text x="17.6070%" y="479.50"></text></g><g><title>bumpalo::Bump::alloc_with::inner_writer (2 samples, 0.39%)</title><rect x="17.9487%" y="453" width="0.3945%" height="15" fill="rgb(239,54,39)" fg:x="91" fg:w="2"/><text x="18.1987%" y="463.50"></text></g><g><title>core::ptr::write (2 samples, 0.39%)</title><rect x="17.9487%" y="437" width="0.3945%" height="15" fill="rgb(230,99,41)" fg:x="91" fg:w="2"/><text x="18.1987%" y="447.50"></text></g><g><title>meet_middle::enumerate::Bv&lt;_&gt;::any_eq (1 samples, 0.20%)</title><rect x="18.3432%" y="485" width="0.1972%" height="15" fill="rgb(253,106,12)" fg:x="93" fg:w="1"/><text x="18.5932%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any (1 samples, 0.20%)</title><rect x="18.3432%" y="469" width="0.1972%" height="15" fill="rgb(213,46,41)" fg:x="93" fg:w="1"/><text x="18.5932%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.20%)</title><rect x="18.3432%" y="453" width="0.1972%" height="15" fill="rgb(215,133,35)" fg:x="93" fg:w="1"/><text x="18.5932%" y="463.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.20%)</title><rect x="19.1321%" y="469" width="0.1972%" height="15" fill="rgb(213,28,5)" fg:x="97" fg:w="1"/><text x="19.3821%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.20%)</title><rect x="19.3294%" y="453" width="0.1972%" height="15" fill="rgb(215,77,49)" fg:x="98" fg:w="1"/><text x="19.5794%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.20%)</title><rect x="19.5266%" y="453" width="0.1972%" height="15" fill="rgb(248,100,22)" fg:x="99" fg:w="1"/><text x="19.7766%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.20%)</title><rect x="19.5266%" y="437" width="0.1972%" height="15" fill="rgb(208,67,9)" fg:x="99" fg:w="1"/><text x="19.7766%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.20%)</title><rect x="19.5266%" y="421" width="0.1972%" height="15" fill="rgb(219,133,21)" fg:x="99" fg:w="1"/><text x="19.7766%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.20%)</title><rect x="19.5266%" y="405" width="0.1972%" height="15" fill="rgb(246,46,29)" fg:x="99" fg:w="1"/><text x="19.7766%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.20%)</title><rect x="19.5266%" y="389" width="0.1972%" height="15" fill="rgb(246,185,52)" fg:x="99" fg:w="1"/><text x="19.7766%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.20%)</title><rect x="19.5266%" y="373" width="0.1972%" height="15" fill="rgb(252,136,11)" fg:x="99" fg:w="1"/><text x="19.7766%" y="383.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.20%)</title><rect x="19.5266%" y="357" width="0.1972%" height="15" fill="rgb(219,138,53)" fg:x="99" fg:w="1"/><text x="19.7766%" y="367.50"></text></g><g><title>__rdl_realloc (1 samples, 0.20%)</title><rect x="19.5266%" y="341" width="0.1972%" height="15" fill="rgb(211,51,23)" fg:x="99" fg:w="1"/><text x="19.7766%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.20%)</title><rect x="19.5266%" y="325" width="0.1972%" height="15" fill="rgb(247,221,28)" fg:x="99" fg:w="1"/><text x="19.7766%" y="335.50"></text></g><g><title>std::sys::common::alloc::realloc_fallback (1 samples, 0.20%)</title><rect x="19.5266%" y="309" width="0.1972%" height="15" fill="rgb(251,222,45)" fg:x="99" fg:w="1"/><text x="19.7766%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.20%)</title><rect x="19.5266%" y="293" width="0.1972%" height="15" fill="rgb(217,162,53)" fg:x="99" fg:w="1"/><text x="19.7766%" y="303.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.20%)</title><rect x="19.5266%" y="277" width="0.1972%" height="15" fill="rgb(229,93,14)" fg:x="99" fg:w="1"/><text x="19.7766%" y="287.50"></text></g><g><title>meet_middle::enumerate::op::bv::or (1 samples, 0.20%)</title><rect x="19.7239%" y="453" width="0.1972%" height="15" fill="rgb(209,67,49)" fg:x="100" fg:w="1"/><text x="19.9739%" y="463.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::collect (1 samples, 0.20%)</title><rect x="19.7239%" y="437" width="0.1972%" height="15" fill="rgb(213,87,29)" fg:x="100" fg:w="1"/><text x="19.9739%" y="447.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed (1 samples, 0.20%)</title><rect x="19.7239%" y="421" width="0.1972%" height="15" fill="rgb(205,151,52)" fg:x="100" fg:w="1"/><text x="19.9739%" y="431.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::map (1 samples, 0.20%)</title><rect x="19.7239%" y="405" width="0.1972%" height="15" fill="rgb(253,215,39)" fg:x="100" fg:w="1"/><text x="19.9739%" y="415.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map (1 samples, 0.20%)</title><rect x="19.7239%" y="389" width="0.1972%" height="15" fill="rgb(221,220,41)" fg:x="100" fg:w="1"/><text x="19.9739%" y="399.50"></text></g><g><title>core::array::drain::drain_array_with (1 samples, 0.20%)</title><rect x="19.7239%" y="373" width="0.1972%" height="15" fill="rgb(218,133,21)" fg:x="100" fg:w="1"/><text x="19.9739%" y="383.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map::{{closure}} (1 samples, 0.20%)</title><rect x="19.7239%" y="357" width="0.1972%" height="15" fill="rgb(221,193,43)" fg:x="100" fg:w="1"/><text x="19.9739%" y="367.50"></text></g><g><title>core::array::try_from_trusted_iterator (1 samples, 0.20%)</title><rect x="19.7239%" y="341" width="0.1972%" height="15" fill="rgb(240,128,52)" fg:x="100" fg:w="1"/><text x="19.9739%" y="351.50"></text></g><g><title>core::array::try_from_fn (1 samples, 0.20%)</title><rect x="19.7239%" y="325" width="0.1972%" height="15" fill="rgb(253,114,12)" fg:x="100" fg:w="1"/><text x="19.9739%" y="335.50"></text></g><g><title>core::array::try_from_fn_erased (1 samples, 0.20%)</title><rect x="19.7239%" y="309" width="0.1972%" height="15" fill="rgb(215,223,47)" fg:x="100" fg:w="1"/><text x="19.9739%" y="319.50"></text></g><g><title>core::array::try_from_trusted_iterator::next::{{closure}} (1 samples, 0.20%)</title><rect x="19.7239%" y="293" width="0.1972%" height="15" fill="rgb(248,225,23)" fg:x="100" fg:w="1"/><text x="19.9739%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (1 samples, 0.20%)</title><rect x="19.7239%" y="277" width="0.1972%" height="15" fill="rgb(250,108,0)" fg:x="100" fg:w="1"/><text x="19.9739%" y="287.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_1::{{closure}} (1 samples, 0.20%)</title><rect x="19.7239%" y="261" width="0.1972%" height="15" fill="rgb(228,208,7)" fg:x="100" fg:w="1"/><text x="19.9739%" y="271.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed::{{closure}} (1 samples, 0.20%)</title><rect x="19.7239%" y="245" width="0.1972%" height="15" fill="rgb(244,45,10)" fg:x="100" fg:w="1"/><text x="19.9739%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="19.7239%" y="229" width="0.1972%" height="15" fill="rgb(207,125,25)" fg:x="100" fg:w="1"/><text x="19.9739%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="19.7239%" y="213" width="0.1972%" height="15" fill="rgb(210,195,18)" fg:x="100" fg:w="1"/><text x="19.9739%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.20%)</title><rect x="19.7239%" y="197" width="0.1972%" height="15" fill="rgb(249,80,12)" fg:x="100" fg:w="1"/><text x="19.9739%" y="207.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="19.7239%" y="181" width="0.1972%" height="15" fill="rgb(221,65,9)" fg:x="100" fg:w="1"/><text x="19.9739%" y="191.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="19.7239%" y="165" width="0.1972%" height="15" fill="rgb(235,49,36)" fg:x="100" fg:w="1"/><text x="19.9739%" y="175.50"></text></g><g><title>core::ops::index_range::IndexRange::next_unchecked (1 samples, 0.20%)</title><rect x="19.7239%" y="149" width="0.1972%" height="15" fill="rgb(225,32,20)" fg:x="100" fg:w="1"/><text x="19.9739%" y="159.50"></text></g><g><title>meet_middle::enumerate::op::bv::xor (1 samples, 0.20%)</title><rect x="19.9211%" y="453" width="0.1972%" height="15" fill="rgb(215,141,46)" fg:x="101" fg:w="1"/><text x="20.1711%" y="463.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::collect (1 samples, 0.20%)</title><rect x="19.9211%" y="437" width="0.1972%" height="15" fill="rgb(250,160,47)" fg:x="101" fg:w="1"/><text x="20.1711%" y="447.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed (1 samples, 0.20%)</title><rect x="19.9211%" y="421" width="0.1972%" height="15" fill="rgb(216,222,40)" fg:x="101" fg:w="1"/><text x="20.1711%" y="431.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::map (1 samples, 0.20%)</title><rect x="19.9211%" y="405" width="0.1972%" height="15" fill="rgb(234,217,39)" fg:x="101" fg:w="1"/><text x="20.1711%" y="415.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map (1 samples, 0.20%)</title><rect x="19.9211%" y="389" width="0.1972%" height="15" fill="rgb(207,178,40)" fg:x="101" fg:w="1"/><text x="20.1711%" y="399.50"></text></g><g><title>core::array::drain::drain_array_with (1 samples, 0.20%)</title><rect x="19.9211%" y="373" width="0.1972%" height="15" fill="rgb(221,136,13)" fg:x="101" fg:w="1"/><text x="20.1711%" y="383.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map::{{closure}} (1 samples, 0.20%)</title><rect x="19.9211%" y="357" width="0.1972%" height="15" fill="rgb(249,199,10)" fg:x="101" fg:w="1"/><text x="20.1711%" y="367.50"></text></g><g><title>core::array::try_from_trusted_iterator (1 samples, 0.20%)</title><rect x="19.9211%" y="341" width="0.1972%" height="15" fill="rgb(249,222,13)" fg:x="101" fg:w="1"/><text x="20.1711%" y="351.50"></text></g><g><title>core::array::try_from_fn (1 samples, 0.20%)</title><rect x="19.9211%" y="325" width="0.1972%" height="15" fill="rgb(244,185,38)" fg:x="101" fg:w="1"/><text x="20.1711%" y="335.50"></text></g><g><title>core::array::try_from_fn_erased (1 samples, 0.20%)</title><rect x="19.9211%" y="309" width="0.1972%" height="15" fill="rgb(236,202,9)" fg:x="101" fg:w="1"/><text x="20.1711%" y="319.50"></text></g><g><title>core::array::try_from_trusted_iterator::next::{{closure}} (1 samples, 0.20%)</title><rect x="19.9211%" y="293" width="0.1972%" height="15" fill="rgb(250,229,37)" fg:x="101" fg:w="1"/><text x="20.1711%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (1 samples, 0.20%)</title><rect x="19.9211%" y="277" width="0.1972%" height="15" fill="rgb(206,174,23)" fg:x="101" fg:w="1"/><text x="20.1711%" y="287.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_1::{{closure}} (1 samples, 0.20%)</title><rect x="19.9211%" y="261" width="0.1972%" height="15" fill="rgb(211,33,43)" fg:x="101" fg:w="1"/><text x="20.1711%" y="271.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed::{{closure}} (1 samples, 0.20%)</title><rect x="19.9211%" y="245" width="0.1972%" height="15" fill="rgb(245,58,50)" fg:x="101" fg:w="1"/><text x="20.1711%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="19.9211%" y="229" width="0.1972%" height="15" fill="rgb(244,68,36)" fg:x="101" fg:w="1"/><text x="20.1711%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="19.9211%" y="213" width="0.1972%" height="15" fill="rgb(232,229,15)" fg:x="101" fg:w="1"/><text x="20.1711%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.20%)</title><rect x="19.9211%" y="197" width="0.1972%" height="15" fill="rgb(254,30,23)" fg:x="101" fg:w="1"/><text x="20.1711%" y="207.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="19.9211%" y="181" width="0.1972%" height="15" fill="rgb(235,160,14)" fg:x="101" fg:w="1"/><text x="20.1711%" y="191.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="19.9211%" y="165" width="0.1972%" height="15" fill="rgb(212,155,44)" fg:x="101" fg:w="1"/><text x="20.1711%" y="175.50"></text></g><g><title>core::ops::index_range::IndexRange::next_unchecked (1 samples, 0.20%)</title><rect x="19.9211%" y="149" width="0.1972%" height="15" fill="rgb(226,2,50)" fg:x="101" fg:w="1"/><text x="20.1711%" y="159.50"></text></g><g><title>&lt;meet_middle::enumerate::Bv&lt;_&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.20%)</title><rect x="20.1183%" y="421" width="0.1972%" height="15" fill="rgb(234,177,6)" fg:x="102" fg:w="1"/><text x="20.3683%" y="431.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (1 samples, 0.20%)</title><rect x="20.1183%" y="405" width="0.1972%" height="15" fill="rgb(217,24,9)" fg:x="102" fg:w="1"/><text x="20.3683%" y="415.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (1 samples, 0.20%)</title><rect x="20.1183%" y="389" width="0.1972%" height="15" fill="rgb(220,13,46)" fg:x="102" fg:w="1"/><text x="20.3683%" y="399.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.20%)</title><rect x="20.1183%" y="373" width="0.1972%" height="15" fill="rgb(239,221,27)" fg:x="102" fg:w="1"/><text x="20.3683%" y="383.50"></text></g><g><title>meet_middle::deductive::combine::CombineRules&lt;_&gt;::test (2 samples, 0.39%)</title><rect x="20.3156%" y="421" width="0.3945%" height="15" fill="rgb(222,198,25)" fg:x="103" fg:w="2"/><text x="20.5656%" y="431.50"></text></g><g><title>&lt;meet_middle::enumerate::Bv&lt;_&gt; as core::ops::bit::BitAnd&gt;::bitand (2 samples, 0.39%)</title><rect x="20.3156%" y="405" width="0.3945%" height="15" fill="rgb(211,99,13)" fg:x="103" fg:w="2"/><text x="20.5656%" y="415.50"></text></g><g><title>meet_middle::enumerate::op::bv::and (2 samples, 0.39%)</title><rect x="20.3156%" y="389" width="0.3945%" height="15" fill="rgb(232,111,31)" fg:x="103" fg:w="2"/><text x="20.5656%" y="399.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::collect (2 samples, 0.39%)</title><rect x="20.3156%" y="373" width="0.3945%" height="15" fill="rgb(245,82,37)" fg:x="103" fg:w="2"/><text x="20.5656%" y="383.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed (2 samples, 0.39%)</title><rect x="20.3156%" y="357" width="0.3945%" height="15" fill="rgb(227,149,46)" fg:x="103" fg:w="2"/><text x="20.5656%" y="367.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::map (2 samples, 0.39%)</title><rect x="20.3156%" y="341" width="0.3945%" height="15" fill="rgb(218,36,50)" fg:x="103" fg:w="2"/><text x="20.5656%" y="351.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map (2 samples, 0.39%)</title><rect x="20.3156%" y="325" width="0.3945%" height="15" fill="rgb(226,80,48)" fg:x="103" fg:w="2"/><text x="20.5656%" y="335.50"></text></g><g><title>core::array::drain::drain_array_with (2 samples, 0.39%)</title><rect x="20.3156%" y="309" width="0.3945%" height="15" fill="rgb(238,224,15)" fg:x="103" fg:w="2"/><text x="20.5656%" y="319.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map::{{closure}} (2 samples, 0.39%)</title><rect x="20.3156%" y="293" width="0.3945%" height="15" fill="rgb(241,136,10)" fg:x="103" fg:w="2"/><text x="20.5656%" y="303.50"></text></g><g><title>core::array::try_from_trusted_iterator (2 samples, 0.39%)</title><rect x="20.3156%" y="277" width="0.3945%" height="15" fill="rgb(208,32,45)" fg:x="103" fg:w="2"/><text x="20.5656%" y="287.50"></text></g><g><title>core::array::try_from_fn (2 samples, 0.39%)</title><rect x="20.3156%" y="261" width="0.3945%" height="15" fill="rgb(207,135,9)" fg:x="103" fg:w="2"/><text x="20.5656%" y="271.50"></text></g><g><title>core::array::try_from_fn_erased (2 samples, 0.39%)</title><rect x="20.3156%" y="245" width="0.3945%" height="15" fill="rgb(206,86,44)" fg:x="103" fg:w="2"/><text x="20.5656%" y="255.50"></text></g><g><title>core::array::try_from_trusted_iterator::next::{{closure}} (2 samples, 0.39%)</title><rect x="20.3156%" y="229" width="0.3945%" height="15" fill="rgb(245,177,15)" fg:x="103" fg:w="2"/><text x="20.5656%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (2 samples, 0.39%)</title><rect x="20.3156%" y="213" width="0.3945%" height="15" fill="rgb(206,64,50)" fg:x="103" fg:w="2"/><text x="20.5656%" y="223.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_1::{{closure}} (2 samples, 0.39%)</title><rect x="20.3156%" y="197" width="0.3945%" height="15" fill="rgb(234,36,40)" fg:x="103" fg:w="2"/><text x="20.5656%" y="207.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed::{{closure}} (2 samples, 0.39%)</title><rect x="20.3156%" y="181" width="0.3945%" height="15" fill="rgb(213,64,8)" fg:x="103" fg:w="2"/><text x="20.5656%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.39%)</title><rect x="20.3156%" y="165" width="0.3945%" height="15" fill="rgb(210,75,36)" fg:x="103" fg:w="2"/><text x="20.5656%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.39%)</title><rect x="20.3156%" y="149" width="0.3945%" height="15" fill="rgb(229,88,21)" fg:x="103" fg:w="2"/><text x="20.5656%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (2 samples, 0.39%)</title><rect x="20.3156%" y="133" width="0.3945%" height="15" fill="rgb(252,204,47)" fg:x="103" fg:w="2"/><text x="20.5656%" y="143.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.39%)</title><rect x="20.3156%" y="117" width="0.3945%" height="15" fill="rgb(208,77,27)" fg:x="103" fg:w="2"/><text x="20.5656%" y="127.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.39%)</title><rect x="20.3156%" y="101" width="0.3945%" height="15" fill="rgb(221,76,26)" fg:x="103" fg:w="2"/><text x="20.5656%" y="111.50"></text></g><g><title>core::ops::index_range::IndexRange::next_unchecked (1 samples, 0.20%)</title><rect x="20.5128%" y="85" width="0.1972%" height="15" fill="rgb(225,139,18)" fg:x="104" fg:w="1"/><text x="20.7628%" y="95.50"></text></g><g><title>&lt;meet_middle::enumerate::Bv&lt;_&gt; as core::ops::arith::Sub&gt;::sub (1 samples, 0.20%)</title><rect x="20.7101%" y="405" width="0.1972%" height="15" fill="rgb(230,137,11)" fg:x="105" fg:w="1"/><text x="20.9601%" y="415.50"></text></g><g><title>meet_middle::enumerate::op::bv::sub (1 samples, 0.20%)</title><rect x="20.7101%" y="389" width="0.1972%" height="15" fill="rgb(212,28,1)" fg:x="105" fg:w="1"/><text x="20.9601%" y="399.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::collect (1 samples, 0.20%)</title><rect x="20.7101%" y="373" width="0.1972%" height="15" fill="rgb(248,164,17)" fg:x="105" fg:w="1"/><text x="20.9601%" y="383.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed (1 samples, 0.20%)</title><rect x="20.7101%" y="357" width="0.1972%" height="15" fill="rgb(222,171,42)" fg:x="105" fg:w="1"/><text x="20.9601%" y="367.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::map (1 samples, 0.20%)</title><rect x="20.7101%" y="341" width="0.1972%" height="15" fill="rgb(243,84,45)" fg:x="105" fg:w="1"/><text x="20.9601%" y="351.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map (1 samples, 0.20%)</title><rect x="20.7101%" y="325" width="0.1972%" height="15" fill="rgb(252,49,23)" fg:x="105" fg:w="1"/><text x="20.9601%" y="335.50"></text></g><g><title>core::array::drain::drain_array_with (1 samples, 0.20%)</title><rect x="20.7101%" y="309" width="0.1972%" height="15" fill="rgb(215,19,7)" fg:x="105" fg:w="1"/><text x="20.9601%" y="319.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map::{{closure}} (1 samples, 0.20%)</title><rect x="20.7101%" y="293" width="0.1972%" height="15" fill="rgb(238,81,41)" fg:x="105" fg:w="1"/><text x="20.9601%" y="303.50"></text></g><g><title>core::array::try_from_trusted_iterator (1 samples, 0.20%)</title><rect x="20.7101%" y="277" width="0.1972%" height="15" fill="rgb(210,199,37)" fg:x="105" fg:w="1"/><text x="20.9601%" y="287.50"></text></g><g><title>core::array::try_from_fn (1 samples, 0.20%)</title><rect x="20.7101%" y="261" width="0.1972%" height="15" fill="rgb(244,192,49)" fg:x="105" fg:w="1"/><text x="20.9601%" y="271.50"></text></g><g><title>core::array::try_from_fn_erased (1 samples, 0.20%)</title><rect x="20.7101%" y="245" width="0.1972%" height="15" fill="rgb(226,211,11)" fg:x="105" fg:w="1"/><text x="20.9601%" y="255.50"></text></g><g><title>core::array::try_from_trusted_iterator::next::{{closure}} (1 samples, 0.20%)</title><rect x="20.7101%" y="229" width="0.1972%" height="15" fill="rgb(236,162,54)" fg:x="105" fg:w="1"/><text x="20.9601%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (1 samples, 0.20%)</title><rect x="20.7101%" y="213" width="0.1972%" height="15" fill="rgb(220,229,9)" fg:x="105" fg:w="1"/><text x="20.9601%" y="223.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_1::{{closure}} (1 samples, 0.20%)</title><rect x="20.7101%" y="197" width="0.1972%" height="15" fill="rgb(250,87,22)" fg:x="105" fg:w="1"/><text x="20.9601%" y="207.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed::{{closure}} (1 samples, 0.20%)</title><rect x="20.7101%" y="181" width="0.1972%" height="15" fill="rgb(239,43,17)" fg:x="105" fg:w="1"/><text x="20.9601%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="20.7101%" y="165" width="0.1972%" height="15" fill="rgb(231,177,25)" fg:x="105" fg:w="1"/><text x="20.9601%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="20.7101%" y="149" width="0.1972%" height="15" fill="rgb(219,179,1)" fg:x="105" fg:w="1"/><text x="20.9601%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.20%)</title><rect x="20.7101%" y="133" width="0.1972%" height="15" fill="rgb(238,219,53)" fg:x="105" fg:w="1"/><text x="20.9601%" y="143.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="20.7101%" y="117" width="0.1972%" height="15" fill="rgb(232,167,36)" fg:x="105" fg:w="1"/><text x="20.9601%" y="127.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.20%)</title><rect x="20.7101%" y="101" width="0.1972%" height="15" fill="rgb(244,19,51)" fg:x="105" fg:w="1"/><text x="20.9601%" y="111.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (1 samples, 0.20%)</title><rect x="20.7101%" y="85" width="0.1972%" height="15" fill="rgb(224,6,22)" fg:x="105" fg:w="1"/><text x="20.9601%" y="95.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (1 samples, 0.20%)</title><rect x="20.7101%" y="69" width="0.1972%" height="15" fill="rgb(224,145,5)" fg:x="105" fg:w="1"/><text x="20.9601%" y="79.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (1 samples, 0.20%)</title><rect x="20.7101%" y="53" width="0.1972%" height="15" fill="rgb(234,130,49)" fg:x="105" fg:w="1"/><text x="20.9601%" y="63.50"></text></g><g><title>core::array::drain::drain_array_with (1 samples, 0.20%)</title><rect x="20.7101%" y="37" width="0.1972%" height="15" fill="rgb(254,6,2)" fg:x="105" fg:w="1"/><text x="20.9601%" y="47.50"></text></g><g><title>&lt;meet_middle::enumerate::Bv&lt;_&gt; as core::ops::bit::BitXor&gt;::bitxor (1 samples, 0.20%)</title><rect x="20.9073%" y="405" width="0.1972%" height="15" fill="rgb(208,96,46)" fg:x="106" fg:w="1"/><text x="21.1573%" y="415.50"></text></g><g><title>meet_middle::enumerate::op::bv::xor (1 samples, 0.20%)</title><rect x="20.9073%" y="389" width="0.1972%" height="15" fill="rgb(239,3,39)" fg:x="106" fg:w="1"/><text x="21.1573%" y="399.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::collect (1 samples, 0.20%)</title><rect x="20.9073%" y="373" width="0.1972%" height="15" fill="rgb(233,210,1)" fg:x="106" fg:w="1"/><text x="21.1573%" y="383.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed (1 samples, 0.20%)</title><rect x="20.9073%" y="357" width="0.1972%" height="15" fill="rgb(244,137,37)" fg:x="106" fg:w="1"/><text x="21.1573%" y="367.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::map (1 samples, 0.20%)</title><rect x="20.9073%" y="341" width="0.1972%" height="15" fill="rgb(240,136,2)" fg:x="106" fg:w="1"/><text x="21.1573%" y="351.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map (1 samples, 0.20%)</title><rect x="20.9073%" y="325" width="0.1972%" height="15" fill="rgb(239,18,37)" fg:x="106" fg:w="1"/><text x="21.1573%" y="335.50"></text></g><g><title>core::array::drain::drain_array_with (1 samples, 0.20%)</title><rect x="20.9073%" y="309" width="0.1972%" height="15" fill="rgb(218,185,22)" fg:x="106" fg:w="1"/><text x="21.1573%" y="319.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map::{{closure}} (1 samples, 0.20%)</title><rect x="20.9073%" y="293" width="0.1972%" height="15" fill="rgb(225,218,4)" fg:x="106" fg:w="1"/><text x="21.1573%" y="303.50"></text></g><g><title>core::array::try_from_trusted_iterator (1 samples, 0.20%)</title><rect x="20.9073%" y="277" width="0.1972%" height="15" fill="rgb(230,182,32)" fg:x="106" fg:w="1"/><text x="21.1573%" y="287.50"></text></g><g><title>core::array::try_from_fn (1 samples, 0.20%)</title><rect x="20.9073%" y="261" width="0.1972%" height="15" fill="rgb(242,56,43)" fg:x="106" fg:w="1"/><text x="21.1573%" y="271.50"></text></g><g><title>core::array::try_from_fn_erased (1 samples, 0.20%)</title><rect x="20.9073%" y="245" width="0.1972%" height="15" fill="rgb(233,99,24)" fg:x="106" fg:w="1"/><text x="21.1573%" y="255.50"></text></g><g><title>core::array::try_from_trusted_iterator::next::{{closure}} (1 samples, 0.20%)</title><rect x="20.9073%" y="229" width="0.1972%" height="15" fill="rgb(234,209,42)" fg:x="106" fg:w="1"/><text x="21.1573%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (1 samples, 0.20%)</title><rect x="20.9073%" y="213" width="0.1972%" height="15" fill="rgb(227,7,12)" fg:x="106" fg:w="1"/><text x="21.1573%" y="223.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_1::{{closure}} (1 samples, 0.20%)</title><rect x="20.9073%" y="197" width="0.1972%" height="15" fill="rgb(245,203,43)" fg:x="106" fg:w="1"/><text x="21.1573%" y="207.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed::{{closure}} (1 samples, 0.20%)</title><rect x="20.9073%" y="181" width="0.1972%" height="15" fill="rgb(238,205,33)" fg:x="106" fg:w="1"/><text x="21.1573%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="20.9073%" y="165" width="0.1972%" height="15" fill="rgb(231,56,7)" fg:x="106" fg:w="1"/><text x="21.1573%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="20.9073%" y="149" width="0.1972%" height="15" fill="rgb(244,186,29)" fg:x="106" fg:w="1"/><text x="21.1573%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.20%)</title><rect x="20.9073%" y="133" width="0.1972%" height="15" fill="rgb(234,111,31)" fg:x="106" fg:w="1"/><text x="21.1573%" y="143.50"></text></g><g><title>core::array::drain::drain_array_with (1 samples, 0.20%)</title><rect x="20.9073%" y="117" width="0.1972%" height="15" fill="rgb(241,149,10)" fg:x="106" fg:w="1"/><text x="21.1573%" y="127.50"></text></g><g><title>meet_middle::deductive::reverse::ReverseRule::reverse (3 samples, 0.59%)</title><rect x="20.7101%" y="421" width="0.5917%" height="15" fill="rgb(249,206,44)" fg:x="105" fg:w="3"/><text x="20.9601%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.20%)</title><rect x="21.1045%" y="405" width="0.1972%" height="15" fill="rgb(251,153,30)" fg:x="107" fg:w="1"/><text x="21.3545%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.20%)</title><rect x="21.1045%" y="389" width="0.1972%" height="15" fill="rgb(239,152,38)" fg:x="107" fg:w="1"/><text x="21.3545%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.20%)</title><rect x="21.1045%" y="373" width="0.1972%" height="15" fill="rgb(249,139,47)" fg:x="107" fg:w="1"/><text x="21.3545%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.20%)</title><rect x="21.1045%" y="357" width="0.1972%" height="15" fill="rgb(244,64,35)" fg:x="107" fg:w="1"/><text x="21.3545%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.20%)</title><rect x="21.1045%" y="341" width="0.1972%" height="15" fill="rgb(216,46,15)" fg:x="107" fg:w="1"/><text x="21.3545%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.20%)</title><rect x="21.1045%" y="325" width="0.1972%" height="15" fill="rgb(250,74,19)" fg:x="107" fg:w="1"/><text x="21.3545%" y="335.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.20%)</title><rect x="21.1045%" y="309" width="0.1972%" height="15" fill="rgb(249,42,33)" fg:x="107" fg:w="1"/><text x="21.3545%" y="319.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.20%)</title><rect x="21.1045%" y="293" width="0.1972%" height="15" fill="rgb(242,149,17)" fg:x="107" fg:w="1"/><text x="21.3545%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.20%)</title><rect x="21.1045%" y="277" width="0.1972%" height="15" fill="rgb(244,29,21)" fg:x="107" fg:w="1"/><text x="21.3545%" y="287.50"></text></g><g><title>meet_middle::search::sample::SampleConfig::search_inner::{{closure}} (7 samples, 1.38%)</title><rect x="20.1183%" y="453" width="1.3807%" height="15" fill="rgb(220,130,37)" fg:x="102" fg:w="7"/><text x="20.3683%" y="463.50"></text></g><g><title>meet_middle::search::filter::FilterState&lt;_&gt;::filter (7 samples, 1.38%)</title><rect x="20.1183%" y="437" width="1.3807%" height="15" fill="rgb(211,67,2)" fg:x="102" fg:w="7"/><text x="20.3683%" y="447.50"></text></g><g><title>meet_middle::solutions::Solutions::add_solution (1 samples, 0.20%)</title><rect x="21.3018%" y="421" width="0.1972%" height="15" fill="rgb(235,68,52)" fg:x="108" fg:w="1"/><text x="21.5518%" y="431.50"></text></g><g><title>sdset::SetOperation::into_set_buf (1 samples, 0.20%)</title><rect x="21.3018%" y="405" width="0.1972%" height="15" fill="rgb(246,142,3)" fg:x="108" fg:w="1"/><text x="21.5518%" y="415.50"></text></g><g><title>&lt;sdset::duo::difference::Difference&lt;T&gt; as sdset::SetOperation&lt;T&gt;&gt;::extend_collection (1 samples, 0.20%)</title><rect x="21.3018%" y="389" width="0.1972%" height="15" fill="rgb(241,25,7)" fg:x="108" fg:w="1"/><text x="21.5518%" y="399.50"></text></g><g><title>sdset::duo::difference::Difference&lt;T&gt;::extend_collection (1 samples, 0.20%)</title><rect x="21.3018%" y="373" width="0.1972%" height="15" fill="rgb(242,119,39)" fg:x="108" fg:w="1"/><text x="21.5518%" y="383.50"></text></g><g><title>sdset::exponential_offset_ge (1 samples, 0.20%)</title><rect x="21.3018%" y="357" width="0.1972%" height="15" fill="rgb(241,98,45)" fg:x="108" fg:w="1"/><text x="21.5518%" y="367.50"></text></g><g><title>sdset::exponential_offset_ge_by (1 samples, 0.20%)</title><rect x="21.3018%" y="341" width="0.1972%" height="15" fill="rgb(254,28,30)" fg:x="108" fg:w="1"/><text x="21.5518%" y="351.50"></text></g><g><title>sdset::exponential_search_by (1 samples, 0.20%)</title><rect x="21.3018%" y="325" width="0.1972%" height="15" fill="rgb(241,142,54)" fg:x="108" fg:w="1"/><text x="21.5518%" y="335.50"></text></g><g><title>core::cmp::min (1 samples, 0.20%)</title><rect x="21.3018%" y="309" width="0.1972%" height="15" fill="rgb(222,85,15)" fg:x="108" fg:w="1"/><text x="21.5518%" y="319.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.20%)</title><rect x="21.3018%" y="293" width="0.1972%" height="15" fill="rgb(210,85,47)" fg:x="108" fg:w="1"/><text x="21.5518%" y="303.50"></text></g><g><title>sdset::SetOperation::into_set_buf (1 samples, 0.20%)</title><rect x="21.3018%" y="277" width="0.1972%" height="15" fill="rgb(224,206,25)" fg:x="108" fg:w="1"/><text x="21.5518%" y="287.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.20%)</title><rect x="22.2880%" y="309" width="0.1972%" height="15" fill="rgb(243,201,19)" fg:x="113" fg:w="1"/><text x="22.5380%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.79%)</title><rect x="21.8935%" y="373" width="0.7890%" height="15" fill="rgb(236,59,4)" fg:x="111" fg:w="4"/><text x="22.1435%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.79%)</title><rect x="21.8935%" y="357" width="0.7890%" height="15" fill="rgb(254,179,45)" fg:x="111" fg:w="4"/><text x="22.1435%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.79%)</title><rect x="21.8935%" y="341" width="0.7890%" height="15" fill="rgb(226,14,10)" fg:x="111" fg:w="4"/><text x="22.1435%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.59%)</title><rect x="22.0907%" y="325" width="0.5917%" height="15" fill="rgb(244,27,41)" fg:x="112" fg:w="3"/><text x="22.3407%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.20%)</title><rect x="22.4852%" y="309" width="0.1972%" height="15" fill="rgb(235,35,32)" fg:x="114" fg:w="1"/><text x="22.7352%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.20%)</title><rect x="22.6824%" y="229" width="0.1972%" height="15" fill="rgb(218,68,31)" fg:x="115" fg:w="1"/><text x="22.9324%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.39%)</title><rect x="22.6824%" y="245" width="0.3945%" height="15" fill="rgb(207,120,37)" fg:x="115" fg:w="2"/><text x="22.9324%" y="255.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.20%)</title><rect x="22.8797%" y="229" width="0.1972%" height="15" fill="rgb(227,98,0)" fg:x="116" fg:w="1"/><text x="23.1297%" y="239.50"></text></g><g><title>hashbrown::map::make_hash (7 samples, 1.38%)</title><rect x="21.8935%" y="405" width="1.3807%" height="15" fill="rgb(207,7,3)" fg:x="111" fg:w="7"/><text x="22.1435%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (7 samples, 1.38%)</title><rect x="21.8935%" y="389" width="1.3807%" height="15" fill="rgb(206,98,19)" fg:x="111" fg:w="7"/><text x="22.1435%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.59%)</title><rect x="22.6824%" y="373" width="0.5917%" height="15" fill="rgb(217,5,26)" fg:x="115" fg:w="3"/><text x="22.9324%" y="383.50"></text></g><g><title>&lt;meet_middle::enumerate::Bv&lt;_&gt; as core::hash::Hash&gt;::hash (3 samples, 0.59%)</title><rect x="22.6824%" y="357" width="0.5917%" height="15" fill="rgb(235,190,38)" fg:x="115" fg:w="3"/><text x="22.9324%" y="367.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (3 samples, 0.59%)</title><rect x="22.6824%" y="341" width="0.5917%" height="15" fill="rgb(247,86,24)" fg:x="115" fg:w="3"/><text x="22.9324%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (3 samples, 0.59%)</title><rect x="22.6824%" y="325" width="0.5917%" height="15" fill="rgb(205,101,16)" fg:x="115" fg:w="3"/><text x="22.9324%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash_slice (3 samples, 0.59%)</title><rect x="22.6824%" y="309" width="0.5917%" height="15" fill="rgb(246,168,33)" fg:x="115" fg:w="3"/><text x="22.9324%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.59%)</title><rect x="22.6824%" y="293" width="0.5917%" height="15" fill="rgb(231,114,1)" fg:x="115" fg:w="3"/><text x="22.9324%" y="303.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.59%)</title><rect x="22.6824%" y="277" width="0.5917%" height="15" fill="rgb(207,184,53)" fg:x="115" fg:w="3"/><text x="22.9324%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.59%)</title><rect x="22.6824%" y="261" width="0.5917%" height="15" fill="rgb(224,95,51)" fg:x="115" fg:w="3"/><text x="22.9324%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.20%)</title><rect x="23.0769%" y="245" width="0.1972%" height="15" fill="rgb(212,188,45)" fg:x="117" fg:w="1"/><text x="23.3269%" y="255.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (12 samples, 2.37%)</title><rect x="21.4990%" y="421" width="2.3669%" height="15" fill="rgb(223,154,38)" fg:x="109" fg:w="12"/><text x="21.7490%" y="431.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.59%)</title><rect x="23.2742%" y="405" width="0.5917%" height="15" fill="rgb(251,22,52)" fg:x="118" fg:w="3"/><text x="23.5242%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (3 samples, 0.59%)</title><rect x="23.2742%" y="389" width="0.5917%" height="15" fill="rgb(229,209,22)" fg:x="118" fg:w="3"/><text x="23.5242%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (3 samples, 0.59%)</title><rect x="23.2742%" y="373" width="0.5917%" height="15" fill="rgb(234,138,34)" fg:x="118" fg:w="3"/><text x="23.5242%" y="383.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (3 samples, 0.59%)</title><rect x="23.2742%" y="357" width="0.5917%" height="15" fill="rgb(212,95,11)" fg:x="118" fg:w="3"/><text x="23.5242%" y="367.50"></text></g><g><title>&lt;meet_middle::enumerate::Bv&lt;_&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.59%)</title><rect x="23.2742%" y="341" width="0.5917%" height="15" fill="rgb(240,179,47)" fg:x="118" fg:w="3"/><text x="23.5242%" y="351.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (3 samples, 0.59%)</title><rect x="23.2742%" y="325" width="0.5917%" height="15" fill="rgb(240,163,11)" fg:x="118" fg:w="3"/><text x="23.5242%" y="335.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (3 samples, 0.59%)</title><rect x="23.2742%" y="309" width="0.5917%" height="15" fill="rgb(236,37,12)" fg:x="118" fg:w="3"/><text x="23.5242%" y="319.50"></text></g><g><title>__memcmp_avx2_movbe (3 samples, 0.59%)</title><rect x="23.2742%" y="293" width="0.5917%" height="15" fill="rgb(232,164,16)" fg:x="118" fg:w="3"/><text x="23.5242%" y="303.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (13 samples, 2.56%)</title><rect x="21.4990%" y="437" width="2.5641%" height="15" fill="rgb(244,205,15)" fg:x="109" fg:w="13"/><text x="21.7490%" y="447.50">st..</text></g><g><title>std::collections::hash::map::map_entry (1 samples, 0.20%)</title><rect x="23.8659%" y="421" width="0.1972%" height="15" fill="rgb(223,117,47)" fg:x="121" fg:w="1"/><text x="24.1159%" y="431.50"></text></g><g><title>meet_middle::enumerate::algo::Algo&lt;_&gt;::run_until::{{closure}} (29 samples, 5.72%)</title><rect x="19.3294%" y="469" width="5.7199%" height="15" fill="rgb(244,107,35)" fg:x="98" fg:w="29"/><text x="19.5794%" y="479.50">meet_mi..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::try_insert (18 samples, 3.55%)</title><rect x="21.4990%" y="453" width="3.5503%" height="15" fill="rgb(205,140,8)" fg:x="109" fg:w="18"/><text x="21.7490%" y="463.50">std:..</text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (5 samples, 0.99%)</title><rect x="24.0631%" y="437" width="0.9862%" height="15" fill="rgb(228,84,46)" fg:x="122" fg:w="5"/><text x="24.3131%" y="447.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.99%)</title><rect x="24.0631%" y="421" width="0.9862%" height="15" fill="rgb(254,188,9)" fg:x="122" fg:w="5"/><text x="24.3131%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (5 samples, 0.99%)</title><rect x="24.0631%" y="405" width="0.9862%" height="15" fill="rgb(206,112,54)" fg:x="122" fg:w="5"/><text x="24.3131%" y="415.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (5 samples, 0.99%)</title><rect x="24.0631%" y="389" width="0.9862%" height="15" fill="rgb(216,84,49)" fg:x="122" fg:w="5"/><text x="24.3131%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (5 samples, 0.99%)</title><rect x="24.0631%" y="373" width="0.9862%" height="15" fill="rgb(214,194,35)" fg:x="122" fg:w="5"/><text x="24.3131%" y="383.50"></text></g><g><title>core::ptr::write (5 samples, 0.99%)</title><rect x="24.0631%" y="357" width="0.9862%" height="15" fill="rgb(249,28,3)" fg:x="122" fg:w="5"/><text x="24.3131%" y="367.50"></text></g><g><title>meet_middle::enumerate::op::bv::lshr (1 samples, 0.20%)</title><rect x="25.0493%" y="469" width="0.1972%" height="15" fill="rgb(222,56,52)" fg:x="127" fg:w="1"/><text x="25.2993%" y="479.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::collect (1 samples, 0.20%)</title><rect x="25.0493%" y="453" width="0.1972%" height="15" fill="rgb(245,217,50)" fg:x="127" fg:w="1"/><text x="25.2993%" y="463.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed (1 samples, 0.20%)</title><rect x="25.0493%" y="437" width="0.1972%" height="15" fill="rgb(213,201,24)" fg:x="127" fg:w="1"/><text x="25.2993%" y="447.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::map (1 samples, 0.20%)</title><rect x="25.0493%" y="421" width="0.1972%" height="15" fill="rgb(248,116,28)" fg:x="127" fg:w="1"/><text x="25.2993%" y="431.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map (1 samples, 0.20%)</title><rect x="25.0493%" y="405" width="0.1972%" height="15" fill="rgb(219,72,43)" fg:x="127" fg:w="1"/><text x="25.2993%" y="415.50"></text></g><g><title>core::array::drain::drain_array_with (1 samples, 0.20%)</title><rect x="25.0493%" y="389" width="0.1972%" height="15" fill="rgb(209,138,14)" fg:x="127" fg:w="1"/><text x="25.2993%" y="399.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map::{{closure}} (1 samples, 0.20%)</title><rect x="25.0493%" y="373" width="0.1972%" height="15" fill="rgb(222,18,33)" fg:x="127" fg:w="1"/><text x="25.2993%" y="383.50"></text></g><g><title>core::array::try_from_trusted_iterator (1 samples, 0.20%)</title><rect x="25.0493%" y="357" width="0.1972%" height="15" fill="rgb(213,199,7)" fg:x="127" fg:w="1"/><text x="25.2993%" y="367.50"></text></g><g><title>core::array::try_from_fn (1 samples, 0.20%)</title><rect x="25.0493%" y="341" width="0.1972%" height="15" fill="rgb(250,110,10)" fg:x="127" fg:w="1"/><text x="25.2993%" y="351.50"></text></g><g><title>core::array::try_from_fn_erased (1 samples, 0.20%)</title><rect x="25.0493%" y="325" width="0.1972%" height="15" fill="rgb(248,123,6)" fg:x="127" fg:w="1"/><text x="25.2993%" y="335.50"></text></g><g><title>core::array::try_from_trusted_iterator::next::{{closure}} (1 samples, 0.20%)</title><rect x="25.0493%" y="309" width="0.1972%" height="15" fill="rgb(206,91,31)" fg:x="127" fg:w="1"/><text x="25.2993%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (1 samples, 0.20%)</title><rect x="25.0493%" y="293" width="0.1972%" height="15" fill="rgb(211,154,13)" fg:x="127" fg:w="1"/><text x="25.2993%" y="303.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_1::{{closure}} (1 samples, 0.20%)</title><rect x="25.0493%" y="277" width="0.1972%" height="15" fill="rgb(225,148,7)" fg:x="127" fg:w="1"/><text x="25.2993%" y="287.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed::{{closure}} (1 samples, 0.20%)</title><rect x="25.0493%" y="261" width="0.1972%" height="15" fill="rgb(220,160,43)" fg:x="127" fg:w="1"/><text x="25.2993%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="25.0493%" y="245" width="0.1972%" height="15" fill="rgb(213,52,39)" fg:x="127" fg:w="1"/><text x="25.2993%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="25.0493%" y="229" width="0.1972%" height="15" fill="rgb(243,137,7)" fg:x="127" fg:w="1"/><text x="25.2993%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.20%)</title><rect x="25.0493%" y="213" width="0.1972%" height="15" fill="rgb(230,79,13)" fg:x="127" fg:w="1"/><text x="25.2993%" y="223.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="25.0493%" y="197" width="0.1972%" height="15" fill="rgb(247,105,23)" fg:x="127" fg:w="1"/><text x="25.2993%" y="207.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="25.0493%" y="181" width="0.1972%" height="15" fill="rgb(223,179,41)" fg:x="127" fg:w="1"/><text x="25.2993%" y="191.50"></text></g><g><title>core::ops::index_range::IndexRange::next_unchecked (1 samples, 0.20%)</title><rect x="25.0493%" y="165" width="0.1972%" height="15" fill="rgb(218,9,34)" fg:x="127" fg:w="1"/><text x="25.2993%" y="175.50"></text></g><g><title>meet_middle::enumerate::expr::Expr::for_each_subexpr (35 samples, 6.90%)</title><rect x="18.5404%" y="485" width="6.9034%" height="15" fill="rgb(222,106,8)" fg:x="94" fg:w="35"/><text x="18.7904%" y="495.50">meet_midd..</text></g><g><title>meet_middle::enumerate::op::bv::udiv (1 samples, 0.20%)</title><rect x="25.2465%" y="469" width="0.1972%" height="15" fill="rgb(211,220,0)" fg:x="128" fg:w="1"/><text x="25.4965%" y="479.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::collect (1 samples, 0.20%)</title><rect x="25.2465%" y="453" width="0.1972%" height="15" fill="rgb(229,52,16)" fg:x="128" fg:w="1"/><text x="25.4965%" y="463.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed (1 samples, 0.20%)</title><rect x="25.2465%" y="437" width="0.1972%" height="15" fill="rgb(212,155,18)" fg:x="128" fg:w="1"/><text x="25.4965%" y="447.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::map (1 samples, 0.20%)</title><rect x="25.2465%" y="421" width="0.1972%" height="15" fill="rgb(242,21,14)" fg:x="128" fg:w="1"/><text x="25.4965%" y="431.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map (1 samples, 0.20%)</title><rect x="25.2465%" y="405" width="0.1972%" height="15" fill="rgb(222,19,48)" fg:x="128" fg:w="1"/><text x="25.4965%" y="415.50"></text></g><g><title>core::array::drain::drain_array_with (1 samples, 0.20%)</title><rect x="25.2465%" y="389" width="0.1972%" height="15" fill="rgb(232,45,27)" fg:x="128" fg:w="1"/><text x="25.4965%" y="399.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map::{{closure}} (1 samples, 0.20%)</title><rect x="25.2465%" y="373" width="0.1972%" height="15" fill="rgb(249,103,42)" fg:x="128" fg:w="1"/><text x="25.4965%" y="383.50"></text></g><g><title>core::array::try_from_trusted_iterator (1 samples, 0.20%)</title><rect x="25.2465%" y="357" width="0.1972%" height="15" fill="rgb(246,81,33)" fg:x="128" fg:w="1"/><text x="25.4965%" y="367.50"></text></g><g><title>core::array::try_from_fn (1 samples, 0.20%)</title><rect x="25.2465%" y="341" width="0.1972%" height="15" fill="rgb(252,33,42)" fg:x="128" fg:w="1"/><text x="25.4965%" y="351.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="26.0355%" y="197" width="0.1972%" height="15" fill="rgb(209,212,41)" fg:x="132" fg:w="1"/><text x="26.2855%" y="207.50"></text></g><g><title>core::ops::index_range::IndexRange::next_unchecked (1 samples, 0.20%)</title><rect x="26.0355%" y="181" width="0.1972%" height="15" fill="rgb(207,154,6)" fg:x="132" fg:w="1"/><text x="26.2855%" y="191.50"></text></g><g><title>meet_middle::enumerate::op::bv::and (5 samples, 0.99%)</title><rect x="25.4438%" y="485" width="0.9862%" height="15" fill="rgb(223,64,47)" fg:x="129" fg:w="5"/><text x="25.6938%" y="495.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::collect (5 samples, 0.99%)</title><rect x="25.4438%" y="469" width="0.9862%" height="15" fill="rgb(211,161,38)" fg:x="129" fg:w="5"/><text x="25.6938%" y="479.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed (5 samples, 0.99%)</title><rect x="25.4438%" y="453" width="0.9862%" height="15" fill="rgb(219,138,40)" fg:x="129" fg:w="5"/><text x="25.6938%" y="463.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::map (3 samples, 0.59%)</title><rect x="25.8383%" y="437" width="0.5917%" height="15" fill="rgb(241,228,46)" fg:x="131" fg:w="3"/><text x="26.0883%" y="447.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map (3 samples, 0.59%)</title><rect x="25.8383%" y="421" width="0.5917%" height="15" fill="rgb(223,209,38)" fg:x="131" fg:w="3"/><text x="26.0883%" y="431.50"></text></g><g><title>core::array::drain::drain_array_with (3 samples, 0.59%)</title><rect x="25.8383%" y="405" width="0.5917%" height="15" fill="rgb(236,164,45)" fg:x="131" fg:w="3"/><text x="26.0883%" y="415.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map::{{closure}} (3 samples, 0.59%)</title><rect x="25.8383%" y="389" width="0.5917%" height="15" fill="rgb(231,15,5)" fg:x="131" fg:w="3"/><text x="26.0883%" y="399.50"></text></g><g><title>core::array::try_from_trusted_iterator (3 samples, 0.59%)</title><rect x="25.8383%" y="373" width="0.5917%" height="15" fill="rgb(252,35,15)" fg:x="131" fg:w="3"/><text x="26.0883%" y="383.50"></text></g><g><title>core::array::try_from_fn (3 samples, 0.59%)</title><rect x="25.8383%" y="357" width="0.5917%" height="15" fill="rgb(248,181,18)" fg:x="131" fg:w="3"/><text x="26.0883%" y="367.50"></text></g><g><title>core::array::try_from_fn_erased (2 samples, 0.39%)</title><rect x="26.0355%" y="341" width="0.3945%" height="15" fill="rgb(233,39,42)" fg:x="132" fg:w="2"/><text x="26.2855%" y="351.50"></text></g><g><title>core::array::try_from_trusted_iterator::next::{{closure}} (2 samples, 0.39%)</title><rect x="26.0355%" y="325" width="0.3945%" height="15" fill="rgb(238,110,33)" fg:x="132" fg:w="2"/><text x="26.2855%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (2 samples, 0.39%)</title><rect x="26.0355%" y="309" width="0.3945%" height="15" fill="rgb(233,195,10)" fg:x="132" fg:w="2"/><text x="26.2855%" y="319.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_1::{{closure}} (2 samples, 0.39%)</title><rect x="26.0355%" y="293" width="0.3945%" height="15" fill="rgb(254,105,3)" fg:x="132" fg:w="2"/><text x="26.2855%" y="303.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed::{{closure}} (2 samples, 0.39%)</title><rect x="26.0355%" y="277" width="0.3945%" height="15" fill="rgb(221,225,9)" fg:x="132" fg:w="2"/><text x="26.2855%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.39%)</title><rect x="26.0355%" y="261" width="0.3945%" height="15" fill="rgb(224,227,45)" fg:x="132" fg:w="2"/><text x="26.2855%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.39%)</title><rect x="26.0355%" y="245" width="0.3945%" height="15" fill="rgb(229,198,43)" fg:x="132" fg:w="2"/><text x="26.2855%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (2 samples, 0.39%)</title><rect x="26.0355%" y="229" width="0.3945%" height="15" fill="rgb(206,209,35)" fg:x="132" fg:w="2"/><text x="26.2855%" y="239.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.39%)</title><rect x="26.0355%" y="213" width="0.3945%" height="15" fill="rgb(245,195,53)" fg:x="132" fg:w="2"/><text x="26.2855%" y="223.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.20%)</title><rect x="26.2327%" y="197" width="0.1972%" height="15" fill="rgb(240,92,26)" fg:x="133" fg:w="1"/><text x="26.4827%" y="207.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (1 samples, 0.20%)</title><rect x="26.2327%" y="181" width="0.1972%" height="15" fill="rgb(207,40,23)" fg:x="133" fg:w="1"/><text x="26.4827%" y="191.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (1 samples, 0.20%)</title><rect x="26.2327%" y="165" width="0.1972%" height="15" fill="rgb(223,111,35)" fg:x="133" fg:w="1"/><text x="26.4827%" y="175.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (1 samples, 0.20%)</title><rect x="26.2327%" y="149" width="0.1972%" height="15" fill="rgb(229,147,28)" fg:x="133" fg:w="1"/><text x="26.4827%" y="159.50"></text></g><g><title>core::ptr::read (1 samples, 0.20%)</title><rect x="26.2327%" y="133" width="0.1972%" height="15" fill="rgb(211,29,28)" fg:x="133" fg:w="1"/><text x="26.4827%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="26.4300%" y="245" width="0.1972%" height="15" fill="rgb(228,72,33)" fg:x="134" fg:w="1"/><text x="26.6800%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.20%)</title><rect x="26.4300%" y="229" width="0.1972%" height="15" fill="rgb(205,214,31)" fg:x="134" fg:w="1"/><text x="26.6800%" y="239.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="26.4300%" y="213" width="0.1972%" height="15" fill="rgb(224,111,15)" fg:x="134" fg:w="1"/><text x="26.6800%" y="223.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="26.4300%" y="197" width="0.1972%" height="15" fill="rgb(253,21,26)" fg:x="134" fg:w="1"/><text x="26.6800%" y="207.50"></text></g><g><title>core::ops::index_range::IndexRange::next_unchecked (1 samples, 0.20%)</title><rect x="26.4300%" y="181" width="0.1972%" height="15" fill="rgb(245,139,43)" fg:x="134" fg:w="1"/><text x="26.6800%" y="191.50"></text></g><g><title>meet_middle::enumerate::op::bv::lshr (3 samples, 0.59%)</title><rect x="26.4300%" y="485" width="0.5917%" height="15" fill="rgb(252,170,7)" fg:x="134" fg:w="3"/><text x="26.6800%" y="495.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::collect (3 samples, 0.59%)</title><rect x="26.4300%" y="469" width="0.5917%" height="15" fill="rgb(231,118,14)" fg:x="134" fg:w="3"/><text x="26.6800%" y="479.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed (3 samples, 0.59%)</title><rect x="26.4300%" y="453" width="0.5917%" height="15" fill="rgb(238,83,0)" fg:x="134" fg:w="3"/><text x="26.6800%" y="463.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::map (3 samples, 0.59%)</title><rect x="26.4300%" y="437" width="0.5917%" height="15" fill="rgb(221,39,39)" fg:x="134" fg:w="3"/><text x="26.6800%" y="447.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map (3 samples, 0.59%)</title><rect x="26.4300%" y="421" width="0.5917%" height="15" fill="rgb(222,119,46)" fg:x="134" fg:w="3"/><text x="26.6800%" y="431.50"></text></g><g><title>core::array::drain::drain_array_with (3 samples, 0.59%)</title><rect x="26.4300%" y="405" width="0.5917%" height="15" fill="rgb(222,165,49)" fg:x="134" fg:w="3"/><text x="26.6800%" y="415.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map::{{closure}} (3 samples, 0.59%)</title><rect x="26.4300%" y="389" width="0.5917%" height="15" fill="rgb(219,113,52)" fg:x="134" fg:w="3"/><text x="26.6800%" y="399.50"></text></g><g><title>core::array::try_from_trusted_iterator (3 samples, 0.59%)</title><rect x="26.4300%" y="373" width="0.5917%" height="15" fill="rgb(214,7,15)" fg:x="134" fg:w="3"/><text x="26.6800%" y="383.50"></text></g><g><title>core::array::try_from_fn (3 samples, 0.59%)</title><rect x="26.4300%" y="357" width="0.5917%" height="15" fill="rgb(235,32,4)" fg:x="134" fg:w="3"/><text x="26.6800%" y="367.50"></text></g><g><title>core::array::try_from_fn_erased (3 samples, 0.59%)</title><rect x="26.4300%" y="341" width="0.5917%" height="15" fill="rgb(238,90,54)" fg:x="134" fg:w="3"/><text x="26.6800%" y="351.50"></text></g><g><title>core::array::try_from_trusted_iterator::next::{{closure}} (3 samples, 0.59%)</title><rect x="26.4300%" y="325" width="0.5917%" height="15" fill="rgb(213,208,19)" fg:x="134" fg:w="3"/><text x="26.6800%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (3 samples, 0.59%)</title><rect x="26.4300%" y="309" width="0.5917%" height="15" fill="rgb(233,156,4)" fg:x="134" fg:w="3"/><text x="26.6800%" y="319.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_1::{{closure}} (3 samples, 0.59%)</title><rect x="26.4300%" y="293" width="0.5917%" height="15" fill="rgb(207,194,5)" fg:x="134" fg:w="3"/><text x="26.6800%" y="303.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed::{{closure}} (3 samples, 0.59%)</title><rect x="26.4300%" y="277" width="0.5917%" height="15" fill="rgb(206,111,30)" fg:x="134" fg:w="3"/><text x="26.6800%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.59%)</title><rect x="26.4300%" y="261" width="0.5917%" height="15" fill="rgb(243,70,54)" fg:x="134" fg:w="3"/><text x="26.6800%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.39%)</title><rect x="26.6272%" y="245" width="0.3945%" height="15" fill="rgb(242,28,8)" fg:x="135" fg:w="2"/><text x="26.8772%" y="255.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.39%)</title><rect x="26.6272%" y="229" width="0.3945%" height="15" fill="rgb(219,106,18)" fg:x="135" fg:w="2"/><text x="26.8772%" y="239.50"></text></g><g><title>meet_middle::enumerate::op::bv::lshr::{{closure}} (2 samples, 0.39%)</title><rect x="26.6272%" y="213" width="0.3945%" height="15" fill="rgb(244,222,10)" fg:x="135" fg:w="2"/><text x="26.8772%" y="223.50"></text></g><g><title>meet_middle::enumerate::op::lshr (2 samples, 0.39%)</title><rect x="26.6272%" y="197" width="0.3945%" height="15" fill="rgb(236,179,52)" fg:x="135" fg:w="2"/><text x="26.8772%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="27.2189%" y="245" width="0.1972%" height="15" fill="rgb(213,23,39)" fg:x="138" fg:w="1"/><text x="27.4689%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.20%)</title><rect x="27.2189%" y="229" width="0.1972%" height="15" fill="rgb(238,48,10)" fg:x="138" fg:w="1"/><text x="27.4689%" y="239.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="27.2189%" y="213" width="0.1972%" height="15" fill="rgb(251,196,23)" fg:x="138" fg:w="1"/><text x="27.4689%" y="223.50"></text></g><g><title>meet_middle::enumerate::op::bv::mul (3 samples, 0.59%)</title><rect x="27.0217%" y="485" width="0.5917%" height="15" fill="rgb(250,152,24)" fg:x="137" fg:w="3"/><text x="27.2717%" y="495.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::collect (3 samples, 0.59%)</title><rect x="27.0217%" y="469" width="0.5917%" height="15" fill="rgb(209,150,17)" fg:x="137" fg:w="3"/><text x="27.2717%" y="479.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed (3 samples, 0.59%)</title><rect x="27.0217%" y="453" width="0.5917%" height="15" fill="rgb(234,202,34)" fg:x="137" fg:w="3"/><text x="27.2717%" y="463.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::map (2 samples, 0.39%)</title><rect x="27.2189%" y="437" width="0.3945%" height="15" fill="rgb(253,148,53)" fg:x="138" fg:w="2"/><text x="27.4689%" y="447.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map (2 samples, 0.39%)</title><rect x="27.2189%" y="421" width="0.3945%" height="15" fill="rgb(218,129,16)" fg:x="138" fg:w="2"/><text x="27.4689%" y="431.50"></text></g><g><title>core::array::drain::drain_array_with (2 samples, 0.39%)</title><rect x="27.2189%" y="405" width="0.3945%" height="15" fill="rgb(216,85,19)" fg:x="138" fg:w="2"/><text x="27.4689%" y="415.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map::{{closure}} (2 samples, 0.39%)</title><rect x="27.2189%" y="389" width="0.3945%" height="15" fill="rgb(235,228,7)" fg:x="138" fg:w="2"/><text x="27.4689%" y="399.50"></text></g><g><title>core::array::try_from_trusted_iterator (2 samples, 0.39%)</title><rect x="27.2189%" y="373" width="0.3945%" height="15" fill="rgb(245,175,0)" fg:x="138" fg:w="2"/><text x="27.4689%" y="383.50"></text></g><g><title>core::array::try_from_fn (2 samples, 0.39%)</title><rect x="27.2189%" y="357" width="0.3945%" height="15" fill="rgb(208,168,36)" fg:x="138" fg:w="2"/><text x="27.4689%" y="367.50"></text></g><g><title>core::array::try_from_fn_erased (2 samples, 0.39%)</title><rect x="27.2189%" y="341" width="0.3945%" height="15" fill="rgb(246,171,24)" fg:x="138" fg:w="2"/><text x="27.4689%" y="351.50"></text></g><g><title>core::array::try_from_trusted_iterator::next::{{closure}} (2 samples, 0.39%)</title><rect x="27.2189%" y="325" width="0.3945%" height="15" fill="rgb(215,142,24)" fg:x="138" fg:w="2"/><text x="27.4689%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (2 samples, 0.39%)</title><rect x="27.2189%" y="309" width="0.3945%" height="15" fill="rgb(250,187,7)" fg:x="138" fg:w="2"/><text x="27.4689%" y="319.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_1::{{closure}} (2 samples, 0.39%)</title><rect x="27.2189%" y="293" width="0.3945%" height="15" fill="rgb(228,66,33)" fg:x="138" fg:w="2"/><text x="27.4689%" y="303.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed::{{closure}} (2 samples, 0.39%)</title><rect x="27.2189%" y="277" width="0.3945%" height="15" fill="rgb(234,215,21)" fg:x="138" fg:w="2"/><text x="27.4689%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.39%)</title><rect x="27.2189%" y="261" width="0.3945%" height="15" fill="rgb(222,191,20)" fg:x="138" fg:w="2"/><text x="27.4689%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.20%)</title><rect x="27.4162%" y="245" width="0.1972%" height="15" fill="rgb(245,79,54)" fg:x="139" fg:w="1"/><text x="27.6662%" y="255.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.20%)</title><rect x="27.4162%" y="229" width="0.1972%" height="15" fill="rgb(240,10,37)" fg:x="139" fg:w="1"/><text x="27.6662%" y="239.50"></text></g><g><title>meet_middle::enumerate::op::bv::mul::{{closure}} (1 samples, 0.20%)</title><rect x="27.4162%" y="213" width="0.1972%" height="15" fill="rgb(214,192,32)" fg:x="139" fg:w="1"/><text x="27.6662%" y="223.50"></text></g><g><title>meet_middle::enumerate::op::mul (1 samples, 0.20%)</title><rect x="27.4162%" y="197" width="0.1972%" height="15" fill="rgb(209,36,54)" fg:x="139" fg:w="1"/><text x="27.6662%" y="207.50"></text></g><g><title>core::array::drain::drain_array_with (1 samples, 0.20%)</title><rect x="27.4162%" y="181" width="0.1972%" height="15" fill="rgb(220,10,11)" fg:x="139" fg:w="1"/><text x="27.6662%" y="191.50"></text></g><g><title>meet_middle::enumerate::op::bv::or (1 samples, 0.20%)</title><rect x="27.6134%" y="485" width="0.1972%" height="15" fill="rgb(221,106,17)" fg:x="140" fg:w="1"/><text x="27.8634%" y="495.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::collect (1 samples, 0.20%)</title><rect x="27.6134%" y="469" width="0.1972%" height="15" fill="rgb(251,142,44)" fg:x="140" fg:w="1"/><text x="27.8634%" y="479.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed (1 samples, 0.20%)</title><rect x="27.6134%" y="453" width="0.1972%" height="15" fill="rgb(238,13,15)" fg:x="140" fg:w="1"/><text x="27.8634%" y="463.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::map (1 samples, 0.20%)</title><rect x="27.6134%" y="437" width="0.1972%" height="15" fill="rgb(208,107,27)" fg:x="140" fg:w="1"/><text x="27.8634%" y="447.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map (1 samples, 0.20%)</title><rect x="27.6134%" y="421" width="0.1972%" height="15" fill="rgb(205,136,37)" fg:x="140" fg:w="1"/><text x="27.8634%" y="431.50"></text></g><g><title>meet_middle::enumerate::op::bv::shl (1 samples, 0.20%)</title><rect x="27.8107%" y="485" width="0.1972%" height="15" fill="rgb(250,205,27)" fg:x="141" fg:w="1"/><text x="28.0607%" y="495.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::collect (1 samples, 0.20%)</title><rect x="27.8107%" y="469" width="0.1972%" height="15" fill="rgb(210,80,43)" fg:x="141" fg:w="1"/><text x="28.0607%" y="479.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed (1 samples, 0.20%)</title><rect x="27.8107%" y="453" width="0.1972%" height="15" fill="rgb(247,160,36)" fg:x="141" fg:w="1"/><text x="28.0607%" y="463.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::map (1 samples, 0.20%)</title><rect x="27.8107%" y="437" width="0.1972%" height="15" fill="rgb(234,13,49)" fg:x="141" fg:w="1"/><text x="28.0607%" y="447.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map (1 samples, 0.20%)</title><rect x="27.8107%" y="421" width="0.1972%" height="15" fill="rgb(234,122,0)" fg:x="141" fg:w="1"/><text x="28.0607%" y="431.50"></text></g><g><title>core::array::drain::drain_array_with (1 samples, 0.20%)</title><rect x="27.8107%" y="405" width="0.1972%" height="15" fill="rgb(207,146,38)" fg:x="141" fg:w="1"/><text x="28.0607%" y="415.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map::{{closure}} (1 samples, 0.20%)</title><rect x="27.8107%" y="389" width="0.1972%" height="15" fill="rgb(207,177,25)" fg:x="141" fg:w="1"/><text x="28.0607%" y="399.50"></text></g><g><title>core::array::try_from_trusted_iterator (1 samples, 0.20%)</title><rect x="27.8107%" y="373" width="0.1972%" height="15" fill="rgb(211,178,42)" fg:x="141" fg:w="1"/><text x="28.0607%" y="383.50"></text></g><g><title>core::array::try_from_fn (1 samples, 0.20%)</title><rect x="27.8107%" y="357" width="0.1972%" height="15" fill="rgb(230,69,54)" fg:x="141" fg:w="1"/><text x="28.0607%" y="367.50"></text></g><g><title>core::array::try_from_fn_erased (1 samples, 0.20%)</title><rect x="27.8107%" y="341" width="0.1972%" height="15" fill="rgb(214,135,41)" fg:x="141" fg:w="1"/><text x="28.0607%" y="351.50"></text></g><g><title>core::array::try_from_trusted_iterator::next::{{closure}} (1 samples, 0.20%)</title><rect x="27.8107%" y="325" width="0.1972%" height="15" fill="rgb(237,67,25)" fg:x="141" fg:w="1"/><text x="28.0607%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (1 samples, 0.20%)</title><rect x="27.8107%" y="309" width="0.1972%" height="15" fill="rgb(222,189,50)" fg:x="141" fg:w="1"/><text x="28.0607%" y="319.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_1::{{closure}} (1 samples, 0.20%)</title><rect x="27.8107%" y="293" width="0.1972%" height="15" fill="rgb(245,148,34)" fg:x="141" fg:w="1"/><text x="28.0607%" y="303.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed::{{closure}} (1 samples, 0.20%)</title><rect x="27.8107%" y="277" width="0.1972%" height="15" fill="rgb(222,29,6)" fg:x="141" fg:w="1"/><text x="28.0607%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="27.8107%" y="261" width="0.1972%" height="15" fill="rgb(221,189,43)" fg:x="141" fg:w="1"/><text x="28.0607%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="27.8107%" y="245" width="0.1972%" height="15" fill="rgb(207,36,27)" fg:x="141" fg:w="1"/><text x="28.0607%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.20%)</title><rect x="27.8107%" y="229" width="0.1972%" height="15" fill="rgb(217,90,24)" fg:x="141" fg:w="1"/><text x="28.0607%" y="239.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="27.8107%" y="213" width="0.1972%" height="15" fill="rgb(224,66,35)" fg:x="141" fg:w="1"/><text x="28.0607%" y="223.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.20%)</title><rect x="27.8107%" y="197" width="0.1972%" height="15" fill="rgb(221,13,50)" fg:x="141" fg:w="1"/><text x="28.0607%" y="207.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (1 samples, 0.20%)</title><rect x="27.8107%" y="181" width="0.1972%" height="15" fill="rgb(236,68,49)" fg:x="141" fg:w="1"/><text x="28.0607%" y="191.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (1 samples, 0.20%)</title><rect x="27.8107%" y="165" width="0.1972%" height="15" fill="rgb(229,146,28)" fg:x="141" fg:w="1"/><text x="28.0607%" y="175.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (1 samples, 0.20%)</title><rect x="27.8107%" y="149" width="0.1972%" height="15" fill="rgb(225,31,38)" fg:x="141" fg:w="1"/><text x="28.0607%" y="159.50"></text></g><g><title>core::array::drain::drain_array_with (1 samples, 0.20%)</title><rect x="27.8107%" y="133" width="0.1972%" height="15" fill="rgb(250,208,3)" fg:x="141" fg:w="1"/><text x="28.0607%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.39%)</title><rect x="28.4024%" y="245" width="0.3945%" height="15" fill="rgb(246,54,23)" fg:x="144" fg:w="2"/><text x="28.6524%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (2 samples, 0.39%)</title><rect x="28.4024%" y="229" width="0.3945%" height="15" fill="rgb(243,76,11)" fg:x="144" fg:w="2"/><text x="28.6524%" y="239.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.39%)</title><rect x="28.4024%" y="213" width="0.3945%" height="15" fill="rgb(245,21,50)" fg:x="144" fg:w="2"/><text x="28.6524%" y="223.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.39%)</title><rect x="28.4024%" y="197" width="0.3945%" height="15" fill="rgb(228,9,43)" fg:x="144" fg:w="2"/><text x="28.6524%" y="207.50"></text></g><g><title>core::ops::index_range::IndexRange::next_unchecked (2 samples, 0.39%)</title><rect x="28.4024%" y="181" width="0.3945%" height="15" fill="rgb(208,100,47)" fg:x="144" fg:w="2"/><text x="28.6524%" y="191.50"></text></g><g><title>meet_middle::enumerate::op::bv::udiv (7 samples, 1.38%)</title><rect x="28.0079%" y="485" width="1.3807%" height="15" fill="rgb(232,26,8)" fg:x="142" fg:w="7"/><text x="28.2579%" y="495.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::collect (7 samples, 1.38%)</title><rect x="28.0079%" y="469" width="1.3807%" height="15" fill="rgb(216,166,38)" fg:x="142" fg:w="7"/><text x="28.2579%" y="479.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed (7 samples, 1.38%)</title><rect x="28.0079%" y="453" width="1.3807%" height="15" fill="rgb(251,202,51)" fg:x="142" fg:w="7"/><text x="28.2579%" y="463.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::map (7 samples, 1.38%)</title><rect x="28.0079%" y="437" width="1.3807%" height="15" fill="rgb(254,216,34)" fg:x="142" fg:w="7"/><text x="28.2579%" y="447.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map (6 samples, 1.18%)</title><rect x="28.2051%" y="421" width="1.1834%" height="15" fill="rgb(251,32,27)" fg:x="143" fg:w="6"/><text x="28.4551%" y="431.50"></text></g><g><title>core::array::drain::drain_array_with (6 samples, 1.18%)</title><rect x="28.2051%" y="405" width="1.1834%" height="15" fill="rgb(208,127,28)" fg:x="143" fg:w="6"/><text x="28.4551%" y="415.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map::{{closure}} (6 samples, 1.18%)</title><rect x="28.2051%" y="389" width="1.1834%" height="15" fill="rgb(224,137,22)" fg:x="143" fg:w="6"/><text x="28.4551%" y="399.50"></text></g><g><title>core::array::try_from_trusted_iterator (6 samples, 1.18%)</title><rect x="28.2051%" y="373" width="1.1834%" height="15" fill="rgb(254,70,32)" fg:x="143" fg:w="6"/><text x="28.4551%" y="383.50"></text></g><g><title>core::array::try_from_fn (6 samples, 1.18%)</title><rect x="28.2051%" y="357" width="1.1834%" height="15" fill="rgb(229,75,37)" fg:x="143" fg:w="6"/><text x="28.4551%" y="367.50"></text></g><g><title>core::array::try_from_fn_erased (5 samples, 0.99%)</title><rect x="28.4024%" y="341" width="0.9862%" height="15" fill="rgb(252,64,23)" fg:x="144" fg:w="5"/><text x="28.6524%" y="351.50"></text></g><g><title>core::array::try_from_trusted_iterator::next::{{closure}} (5 samples, 0.99%)</title><rect x="28.4024%" y="325" width="0.9862%" height="15" fill="rgb(232,162,48)" fg:x="144" fg:w="5"/><text x="28.6524%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (5 samples, 0.99%)</title><rect x="28.4024%" y="309" width="0.9862%" height="15" fill="rgb(246,160,12)" fg:x="144" fg:w="5"/><text x="28.6524%" y="319.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_1::{{closure}} (5 samples, 0.99%)</title><rect x="28.4024%" y="293" width="0.9862%" height="15" fill="rgb(247,166,0)" fg:x="144" fg:w="5"/><text x="28.6524%" y="303.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed::{{closure}} (5 samples, 0.99%)</title><rect x="28.4024%" y="277" width="0.9862%" height="15" fill="rgb(249,219,21)" fg:x="144" fg:w="5"/><text x="28.6524%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.99%)</title><rect x="28.4024%" y="261" width="0.9862%" height="15" fill="rgb(205,209,3)" fg:x="144" fg:w="5"/><text x="28.6524%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.59%)</title><rect x="28.7968%" y="245" width="0.5917%" height="15" fill="rgb(243,44,1)" fg:x="146" fg:w="3"/><text x="29.0468%" y="255.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.59%)</title><rect x="28.7968%" y="229" width="0.5917%" height="15" fill="rgb(206,159,16)" fg:x="146" fg:w="3"/><text x="29.0468%" y="239.50"></text></g><g><title>meet_middle::enumerate::op::bv::udiv::{{closure}} (3 samples, 0.59%)</title><rect x="28.7968%" y="213" width="0.5917%" height="15" fill="rgb(244,77,30)" fg:x="146" fg:w="3"/><text x="29.0468%" y="223.50"></text></g><g><title>meet_middle::enumerate::op::udiv (3 samples, 0.59%)</title><rect x="28.7968%" y="197" width="0.5917%" height="15" fill="rgb(218,69,12)" fg:x="146" fg:w="3"/><text x="29.0468%" y="207.50"></text></g><g><title>core::num::&lt;impl u64&gt;::checked_div (3 samples, 0.59%)</title><rect x="28.7968%" y="181" width="0.5917%" height="15" fill="rgb(212,87,7)" fg:x="146" fg:w="3"/><text x="29.0468%" y="191.50"></text></g><g><title>meet_middle::enumerate::op::bv::xor (1 samples, 0.20%)</title><rect x="29.3886%" y="485" width="0.1972%" height="15" fill="rgb(245,114,25)" fg:x="149" fg:w="1"/><text x="29.6386%" y="495.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::collect (1 samples, 0.20%)</title><rect x="29.3886%" y="469" width="0.1972%" height="15" fill="rgb(210,61,42)" fg:x="149" fg:w="1"/><text x="29.6386%" y="479.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed (1 samples, 0.20%)</title><rect x="29.3886%" y="453" width="0.1972%" height="15" fill="rgb(211,52,33)" fg:x="149" fg:w="1"/><text x="29.6386%" y="463.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::map (1 samples, 0.20%)</title><rect x="29.3886%" y="437" width="0.1972%" height="15" fill="rgb(234,58,33)" fg:x="149" fg:w="1"/><text x="29.6386%" y="447.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map (1 samples, 0.20%)</title><rect x="29.3886%" y="421" width="0.1972%" height="15" fill="rgb(220,115,36)" fg:x="149" fg:w="1"/><text x="29.6386%" y="431.50"></text></g><g><title>core::array::drain::drain_array_with (1 samples, 0.20%)</title><rect x="29.3886%" y="405" width="0.1972%" height="15" fill="rgb(243,153,54)" fg:x="149" fg:w="1"/><text x="29.6386%" y="415.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map::{{closure}} (1 samples, 0.20%)</title><rect x="29.3886%" y="389" width="0.1972%" height="15" fill="rgb(251,47,18)" fg:x="149" fg:w="1"/><text x="29.6386%" y="399.50"></text></g><g><title>core::array::try_from_trusted_iterator (1 samples, 0.20%)</title><rect x="29.3886%" y="373" width="0.1972%" height="15" fill="rgb(242,102,42)" fg:x="149" fg:w="1"/><text x="29.6386%" y="383.50"></text></g><g><title>core::array::try_from_fn (1 samples, 0.20%)</title><rect x="29.3886%" y="357" width="0.1972%" height="15" fill="rgb(234,31,38)" fg:x="149" fg:w="1"/><text x="29.6386%" y="367.50"></text></g><g><title>core::array::try_from_fn_erased (1 samples, 0.20%)</title><rect x="29.3886%" y="341" width="0.1972%" height="15" fill="rgb(221,117,51)" fg:x="149" fg:w="1"/><text x="29.6386%" y="351.50"></text></g><g><title>core::array::try_from_trusted_iterator::next::{{closure}} (1 samples, 0.20%)</title><rect x="29.3886%" y="325" width="0.1972%" height="15" fill="rgb(212,20,18)" fg:x="149" fg:w="1"/><text x="29.6386%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (1 samples, 0.20%)</title><rect x="29.3886%" y="309" width="0.1972%" height="15" fill="rgb(245,133,36)" fg:x="149" fg:w="1"/><text x="29.6386%" y="319.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_1::{{closure}} (1 samples, 0.20%)</title><rect x="29.3886%" y="293" width="0.1972%" height="15" fill="rgb(212,6,19)" fg:x="149" fg:w="1"/><text x="29.6386%" y="303.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed::{{closure}} (1 samples, 0.20%)</title><rect x="29.3886%" y="277" width="0.1972%" height="15" fill="rgb(218,1,36)" fg:x="149" fg:w="1"/><text x="29.6386%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="29.3886%" y="261" width="0.1972%" height="15" fill="rgb(246,84,54)" fg:x="149" fg:w="1"/><text x="29.6386%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="29.3886%" y="245" width="0.1972%" height="15" fill="rgb(242,110,6)" fg:x="149" fg:w="1"/><text x="29.6386%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.20%)</title><rect x="29.3886%" y="229" width="0.1972%" height="15" fill="rgb(214,47,5)" fg:x="149" fg:w="1"/><text x="29.6386%" y="239.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="29.3886%" y="213" width="0.1972%" height="15" fill="rgb(218,159,25)" fg:x="149" fg:w="1"/><text x="29.6386%" y="223.50"></text></g><g><title>core::array::drain::drain_array_with (1 samples, 0.20%)</title><rect x="29.3886%" y="197" width="0.1972%" height="15" fill="rgb(215,211,28)" fg:x="149" fg:w="1"/><text x="29.6386%" y="207.50"></text></g><g><title>&lt;meet_middle::enumerate::Bv&lt;_&gt; as core::clone::Clone&gt;::clone (1 samples, 0.20%)</title><rect x="30.5720%" y="437" width="0.1972%" height="15" fill="rgb(238,59,32)" fg:x="155" fg:w="1"/><text x="30.8220%" y="447.50"></text></g><g><title>&lt;meet_middle::enumerate::Bv&lt;_&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.20%)</title><rect x="30.7692%" y="437" width="0.1972%" height="15" fill="rgb(226,82,3)" fg:x="156" fg:w="1"/><text x="31.0192%" y="447.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (1 samples, 0.20%)</title><rect x="30.7692%" y="421" width="0.1972%" height="15" fill="rgb(240,164,32)" fg:x="156" fg:w="1"/><text x="31.0192%" y="431.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (1 samples, 0.20%)</title><rect x="30.7692%" y="405" width="0.1972%" height="15" fill="rgb(232,46,7)" fg:x="156" fg:w="1"/><text x="31.0192%" y="415.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.20%)</title><rect x="30.7692%" y="389" width="0.1972%" height="15" fill="rgb(229,129,53)" fg:x="156" fg:w="1"/><text x="31.0192%" y="399.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 2.37%)</title><rect x="31.7554%" y="133" width="2.3669%" height="15" fill="rgb(234,188,29)" fg:x="161" fg:w="12"/><text x="32.0054%" y="143.50">&lt;c..</text></g><g><title>core::ops::index_range::IndexRange::next_unchecked (11 samples, 2.17%)</title><rect x="31.9527%" y="117" width="2.1696%" height="15" fill="rgb(246,141,4)" fg:x="162" fg:w="11"/><text x="32.2027%" y="127.50">c..</text></g><g><title>core::array::drain::drain_array_with (1 samples, 0.20%)</title><rect x="34.1223%" y="133" width="0.1972%" height="15" fill="rgb(229,23,39)" fg:x="173" fg:w="1"/><text x="34.3723%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 3.75%)</title><rect x="31.5582%" y="181" width="3.7475%" height="15" fill="rgb(206,12,3)" fg:x="160" fg:w="19"/><text x="31.8082%" y="191.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (19 samples, 3.75%)</title><rect x="31.5582%" y="165" width="3.7475%" height="15" fill="rgb(252,226,20)" fg:x="160" fg:w="19"/><text x="31.8082%" y="175.50">&lt;cor..</text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 3.75%)</title><rect x="31.5582%" y="149" width="3.7475%" height="15" fill="rgb(216,123,35)" fg:x="160" fg:w="19"/><text x="31.8082%" y="159.50">&lt;cor..</text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.99%)</title><rect x="34.3195%" y="133" width="0.9862%" height="15" fill="rgb(212,68,40)" fg:x="174" fg:w="5"/><text x="34.5695%" y="143.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (5 samples, 0.99%)</title><rect x="34.3195%" y="117" width="0.9862%" height="15" fill="rgb(254,125,32)" fg:x="174" fg:w="5"/><text x="34.5695%" y="127.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (5 samples, 0.99%)</title><rect x="34.3195%" y="101" width="0.9862%" height="15" fill="rgb(253,97,22)" fg:x="174" fg:w="5"/><text x="34.5695%" y="111.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (5 samples, 0.99%)</title><rect x="34.3195%" y="85" width="0.9862%" height="15" fill="rgb(241,101,14)" fg:x="174" fg:w="5"/><text x="34.5695%" y="95.50"></text></g><g><title>core::array::drain::drain_array_with (5 samples, 0.99%)</title><rect x="34.3195%" y="69" width="0.9862%" height="15" fill="rgb(238,103,29)" fg:x="174" fg:w="5"/><text x="34.5695%" y="79.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::collect (23 samples, 4.54%)</title><rect x="30.9665%" y="405" width="4.5365%" height="15" fill="rgb(233,195,47)" fg:x="157" fg:w="23"/><text x="31.2165%" y="415.50">iter_..</text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed (23 samples, 4.54%)</title><rect x="30.9665%" y="389" width="4.5365%" height="15" fill="rgb(246,218,30)" fg:x="157" fg:w="23"/><text x="31.2165%" y="399.50">&lt;[&lt;I ..</text></g><g><title>core::array::&lt;impl [T: N]&gt;::map (23 samples, 4.54%)</title><rect x="30.9665%" y="373" width="4.5365%" height="15" fill="rgb(219,145,47)" fg:x="157" fg:w="23"/><text x="31.2165%" y="383.50">core:..</text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map (21 samples, 4.14%)</title><rect x="31.3609%" y="357" width="4.1420%" height="15" fill="rgb(243,12,26)" fg:x="159" fg:w="21"/><text x="31.6109%" y="367.50">core:..</text></g><g><title>core::array::drain::drain_array_with (21 samples, 4.14%)</title><rect x="31.3609%" y="341" width="4.1420%" height="15" fill="rgb(214,87,16)" fg:x="159" fg:w="21"/><text x="31.6109%" y="351.50">core:..</text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map::{{closure}} (21 samples, 4.14%)</title><rect x="31.3609%" y="325" width="4.1420%" height="15" fill="rgb(208,99,42)" fg:x="159" fg:w="21"/><text x="31.6109%" y="335.50">core:..</text></g><g><title>core::array::try_from_trusted_iterator (21 samples, 4.14%)</title><rect x="31.3609%" y="309" width="4.1420%" height="15" fill="rgb(253,99,2)" fg:x="159" fg:w="21"/><text x="31.6109%" y="319.50">core:..</text></g><g><title>core::array::try_from_fn (21 samples, 4.14%)</title><rect x="31.3609%" y="293" width="4.1420%" height="15" fill="rgb(220,168,23)" fg:x="159" fg:w="21"/><text x="31.6109%" y="303.50">core:..</text></g><g><title>core::array::try_from_fn_erased (20 samples, 3.94%)</title><rect x="31.5582%" y="277" width="3.9448%" height="15" fill="rgb(242,38,24)" fg:x="160" fg:w="20"/><text x="31.8082%" y="287.50">core..</text></g><g><title>core::array::try_from_trusted_iterator::next::{{closure}} (20 samples, 3.94%)</title><rect x="31.5582%" y="261" width="3.9448%" height="15" fill="rgb(225,182,9)" fg:x="160" fg:w="20"/><text x="31.8082%" y="271.50">core..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (20 samples, 3.94%)</title><rect x="31.5582%" y="245" width="3.9448%" height="15" fill="rgb(243,178,37)" fg:x="160" fg:w="20"/><text x="31.8082%" y="255.50">&lt;cor..</text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_1::{{closure}} (20 samples, 3.94%)</title><rect x="31.5582%" y="229" width="3.9448%" height="15" fill="rgb(232,139,19)" fg:x="160" fg:w="20"/><text x="31.8082%" y="239.50">core..</text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed::{{closure}} (20 samples, 3.94%)</title><rect x="31.5582%" y="213" width="3.9448%" height="15" fill="rgb(225,201,24)" fg:x="160" fg:w="20"/><text x="31.8082%" y="223.50">&lt;[&lt;I..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 3.94%)</title><rect x="31.5582%" y="197" width="3.9448%" height="15" fill="rgb(221,47,46)" fg:x="160" fg:w="20"/><text x="31.8082%" y="207.50">&lt;cor..</text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.20%)</title><rect x="35.3057%" y="181" width="0.1972%" height="15" fill="rgb(249,23,13)" fg:x="179" fg:w="1"/><text x="35.5557%" y="191.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.20%)</title><rect x="35.3057%" y="165" width="0.1972%" height="15" fill="rgb(219,9,5)" fg:x="179" fg:w="1"/><text x="35.5557%" y="175.50"></text></g><g><title>meet_middle::enumerate::op::bv::and::{{closure}} (1 samples, 0.20%)</title><rect x="35.3057%" y="149" width="0.1972%" height="15" fill="rgb(254,171,16)" fg:x="179" fg:w="1"/><text x="35.5557%" y="159.50"></text></g><g><title>meet_middle::enumerate::op::and (1 samples, 0.20%)</title><rect x="35.3057%" y="133" width="0.1972%" height="15" fill="rgb(230,171,20)" fg:x="179" fg:w="1"/><text x="35.5557%" y="143.50"></text></g><g><title>&lt;meet_middle::enumerate::Bv&lt;_&gt; as core::ops::bit::BitAnd&gt;::bitand (24 samples, 4.73%)</title><rect x="30.9665%" y="437" width="4.7337%" height="15" fill="rgb(210,71,41)" fg:x="157" fg:w="24"/><text x="31.2165%" y="447.50">&lt;meet_..</text></g><g><title>meet_middle::enumerate::op::bv::and (24 samples, 4.73%)</title><rect x="30.9665%" y="421" width="4.7337%" height="15" fill="rgb(206,173,20)" fg:x="157" fg:w="24"/><text x="31.2165%" y="431.50">meet_m..</text></g><g><title>meet_middle::enumerate::Bv&lt;_&gt;::into_iter_fixed (1 samples, 0.20%)</title><rect x="35.5030%" y="405" width="0.1972%" height="15" fill="rgb(233,88,34)" fg:x="180" fg:w="1"/><text x="35.7530%" y="415.50"></text></g><g><title>&lt;[T: N] as iter_fixed::into::IntoIteratorFixed&lt;_&gt;&gt;::into_iter_fixed (1 samples, 0.20%)</title><rect x="35.5030%" y="389" width="0.1972%" height="15" fill="rgb(223,209,46)" fg:x="180" fg:w="1"/><text x="35.7530%" y="399.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::from_iter (1 samples, 0.20%)</title><rect x="35.5030%" y="373" width="0.1972%" height="15" fill="rgb(250,43,18)" fg:x="180" fg:w="1"/><text x="35.7530%" y="383.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="35.7002%" y="133" width="0.1972%" height="15" fill="rgb(208,13,10)" fg:x="181" fg:w="1"/><text x="35.9502%" y="143.50"></text></g><g><title>core::ops::index_range::IndexRange::next_unchecked (1 samples, 0.20%)</title><rect x="35.7002%" y="117" width="0.1972%" height="15" fill="rgb(212,200,36)" fg:x="181" fg:w="1"/><text x="35.9502%" y="127.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::collect (4 samples, 0.79%)</title><rect x="35.7002%" y="405" width="0.7890%" height="15" fill="rgb(225,90,30)" fg:x="181" fg:w="4"/><text x="35.9502%" y="415.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed (4 samples, 0.79%)</title><rect x="35.7002%" y="389" width="0.7890%" height="15" fill="rgb(236,182,39)" fg:x="181" fg:w="4"/><text x="35.9502%" y="399.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::map (4 samples, 0.79%)</title><rect x="35.7002%" y="373" width="0.7890%" height="15" fill="rgb(212,144,35)" fg:x="181" fg:w="4"/><text x="35.9502%" y="383.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map (4 samples, 0.79%)</title><rect x="35.7002%" y="357" width="0.7890%" height="15" fill="rgb(228,63,44)" fg:x="181" fg:w="4"/><text x="35.9502%" y="367.50"></text></g><g><title>core::array::drain::drain_array_with (4 samples, 0.79%)</title><rect x="35.7002%" y="341" width="0.7890%" height="15" fill="rgb(228,109,6)" fg:x="181" fg:w="4"/><text x="35.9502%" y="351.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map::{{closure}} (4 samples, 0.79%)</title><rect x="35.7002%" y="325" width="0.7890%" height="15" fill="rgb(238,117,24)" fg:x="181" fg:w="4"/><text x="35.9502%" y="335.50"></text></g><g><title>core::array::try_from_trusted_iterator (4 samples, 0.79%)</title><rect x="35.7002%" y="309" width="0.7890%" height="15" fill="rgb(242,26,26)" fg:x="181" fg:w="4"/><text x="35.9502%" y="319.50"></text></g><g><title>core::array::try_from_fn (4 samples, 0.79%)</title><rect x="35.7002%" y="293" width="0.7890%" height="15" fill="rgb(221,92,48)" fg:x="181" fg:w="4"/><text x="35.9502%" y="303.50"></text></g><g><title>core::array::try_from_fn_erased (4 samples, 0.79%)</title><rect x="35.7002%" y="277" width="0.7890%" height="15" fill="rgb(209,209,32)" fg:x="181" fg:w="4"/><text x="35.9502%" y="287.50"></text></g><g><title>core::array::try_from_trusted_iterator::next::{{closure}} (4 samples, 0.79%)</title><rect x="35.7002%" y="261" width="0.7890%" height="15" fill="rgb(221,70,22)" fg:x="181" fg:w="4"/><text x="35.9502%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (4 samples, 0.79%)</title><rect x="35.7002%" y="245" width="0.7890%" height="15" fill="rgb(248,145,5)" fg:x="181" fg:w="4"/><text x="35.9502%" y="255.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_1::{{closure}} (4 samples, 0.79%)</title><rect x="35.7002%" y="229" width="0.7890%" height="15" fill="rgb(226,116,26)" fg:x="181" fg:w="4"/><text x="35.9502%" y="239.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed::{{closure}} (4 samples, 0.79%)</title><rect x="35.7002%" y="213" width="0.7890%" height="15" fill="rgb(244,5,17)" fg:x="181" fg:w="4"/><text x="35.9502%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.79%)</title><rect x="35.7002%" y="197" width="0.7890%" height="15" fill="rgb(252,159,33)" fg:x="181" fg:w="4"/><text x="35.9502%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.79%)</title><rect x="35.7002%" y="181" width="0.7890%" height="15" fill="rgb(206,71,0)" fg:x="181" fg:w="4"/><text x="35.9502%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (4 samples, 0.79%)</title><rect x="35.7002%" y="165" width="0.7890%" height="15" fill="rgb(233,118,54)" fg:x="181" fg:w="4"/><text x="35.9502%" y="175.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.79%)</title><rect x="35.7002%" y="149" width="0.7890%" height="15" fill="rgb(234,83,48)" fg:x="181" fg:w="4"/><text x="35.9502%" y="159.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.59%)</title><rect x="35.8974%" y="133" width="0.5917%" height="15" fill="rgb(228,3,54)" fg:x="182" fg:w="3"/><text x="36.1474%" y="143.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (3 samples, 0.59%)</title><rect x="35.8974%" y="117" width="0.5917%" height="15" fill="rgb(226,155,13)" fg:x="182" fg:w="3"/><text x="36.1474%" y="127.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (3 samples, 0.59%)</title><rect x="35.8974%" y="101" width="0.5917%" height="15" fill="rgb(241,28,37)" fg:x="182" fg:w="3"/><text x="36.1474%" y="111.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (3 samples, 0.59%)</title><rect x="35.8974%" y="85" width="0.5917%" height="15" fill="rgb(233,93,10)" fg:x="182" fg:w="3"/><text x="36.1474%" y="95.50"></text></g><g><title>core::array::drain::drain_array_with (3 samples, 0.59%)</title><rect x="35.8974%" y="69" width="0.5917%" height="15" fill="rgb(225,113,19)" fg:x="182" fg:w="3"/><text x="36.1474%" y="79.50"></text></g><g><title>&lt;meet_middle::enumerate::Bv&lt;_&gt; as core::ops::bit::BitXor&gt;::bitxor (5 samples, 0.99%)</title><rect x="35.7002%" y="437" width="0.9862%" height="15" fill="rgb(241,2,18)" fg:x="181" fg:w="5"/><text x="35.9502%" y="447.50"></text></g><g><title>meet_middle::enumerate::op::bv::xor (5 samples, 0.99%)</title><rect x="35.7002%" y="421" width="0.9862%" height="15" fill="rgb(228,207,21)" fg:x="181" fg:w="5"/><text x="35.9502%" y="431.50"></text></g><g><title>meet_middle::enumerate::Bv&lt;_&gt;::into_iter_fixed (1 samples, 0.20%)</title><rect x="36.4892%" y="405" width="0.1972%" height="15" fill="rgb(213,211,35)" fg:x="185" fg:w="1"/><text x="36.7392%" y="415.50"></text></g><g><title>&lt;[T: N] as iter_fixed::into::IntoIteratorFixed&lt;_&gt;&gt;::into_iter_fixed (1 samples, 0.20%)</title><rect x="36.4892%" y="389" width="0.1972%" height="15" fill="rgb(209,83,10)" fg:x="185" fg:w="1"/><text x="36.7392%" y="399.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::from_iter (1 samples, 0.20%)</title><rect x="36.4892%" y="373" width="0.1972%" height="15" fill="rgb(209,164,1)" fg:x="185" fg:w="1"/><text x="36.7392%" y="383.50"></text></g><g><title>bumpalo::Bump::alloc (2 samples, 0.39%)</title><rect x="36.6864%" y="437" width="0.3945%" height="15" fill="rgb(213,184,43)" fg:x="186" fg:w="2"/><text x="36.9364%" y="447.50"></text></g><g><title>bumpalo::Bump::alloc_with (2 samples, 0.39%)</title><rect x="36.6864%" y="421" width="0.3945%" height="15" fill="rgb(231,61,34)" fg:x="186" fg:w="2"/><text x="36.9364%" y="431.50"></text></g><g><title>bumpalo::Bump::alloc_layout (2 samples, 0.39%)</title><rect x="36.6864%" y="405" width="0.3945%" height="15" fill="rgb(235,75,3)" fg:x="186" fg:w="2"/><text x="36.9364%" y="415.50"></text></g><g><title>bumpalo::Bump::try_alloc_layout (2 samples, 0.39%)</title><rect x="36.6864%" y="389" width="0.3945%" height="15" fill="rgb(220,106,47)" fg:x="186" fg:w="2"/><text x="36.9364%" y="399.50"></text></g><g><title>bumpalo::Bump::alloc_layout_slow (2 samples, 0.39%)</title><rect x="36.6864%" y="373" width="0.3945%" height="15" fill="rgb(210,196,33)" fg:x="186" fg:w="2"/><text x="36.9364%" y="383.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.20%)</title><rect x="36.8836%" y="357" width="0.1972%" height="15" fill="rgb(229,154,42)" fg:x="187" fg:w="1"/><text x="37.1336%" y="367.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="37.2781%" y="133" width="0.1972%" height="15" fill="rgb(228,114,26)" fg:x="189" fg:w="1"/><text x="37.5281%" y="143.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.20%)</title><rect x="37.2781%" y="117" width="0.1972%" height="15" fill="rgb(208,144,1)" fg:x="189" fg:w="1"/><text x="37.5281%" y="127.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (1 samples, 0.20%)</title><rect x="37.2781%" y="101" width="0.1972%" height="15" fill="rgb(239,112,37)" fg:x="189" fg:w="1"/><text x="37.5281%" y="111.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (1 samples, 0.20%)</title><rect x="37.2781%" y="85" width="0.1972%" height="15" fill="rgb(210,96,50)" fg:x="189" fg:w="1"/><text x="37.5281%" y="95.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (1 samples, 0.20%)</title><rect x="37.2781%" y="69" width="0.1972%" height="15" fill="rgb(222,178,2)" fg:x="189" fg:w="1"/><text x="37.5281%" y="79.50"></text></g><g><title>core::array::drain::drain_array_with (1 samples, 0.20%)</title><rect x="37.2781%" y="53" width="0.1972%" height="15" fill="rgb(226,74,18)" fg:x="189" fg:w="1"/><text x="37.5281%" y="63.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::collect (3 samples, 0.59%)</title><rect x="37.0809%" y="389" width="0.5917%" height="15" fill="rgb(225,67,54)" fg:x="188" fg:w="3"/><text x="37.3309%" y="399.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed (3 samples, 0.59%)</title><rect x="37.0809%" y="373" width="0.5917%" height="15" fill="rgb(251,92,32)" fg:x="188" fg:w="3"/><text x="37.3309%" y="383.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::map (3 samples, 0.59%)</title><rect x="37.0809%" y="357" width="0.5917%" height="15" fill="rgb(228,149,22)" fg:x="188" fg:w="3"/><text x="37.3309%" y="367.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map (3 samples, 0.59%)</title><rect x="37.0809%" y="341" width="0.5917%" height="15" fill="rgb(243,54,13)" fg:x="188" fg:w="3"/><text x="37.3309%" y="351.50"></text></g><g><title>core::array::drain::drain_array_with (3 samples, 0.59%)</title><rect x="37.0809%" y="325" width="0.5917%" height="15" fill="rgb(243,180,28)" fg:x="188" fg:w="3"/><text x="37.3309%" y="335.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map::{{closure}} (3 samples, 0.59%)</title><rect x="37.0809%" y="309" width="0.5917%" height="15" fill="rgb(208,167,24)" fg:x="188" fg:w="3"/><text x="37.3309%" y="319.50"></text></g><g><title>core::array::try_from_trusted_iterator (3 samples, 0.59%)</title><rect x="37.0809%" y="293" width="0.5917%" height="15" fill="rgb(245,73,45)" fg:x="188" fg:w="3"/><text x="37.3309%" y="303.50"></text></g><g><title>core::array::try_from_fn (3 samples, 0.59%)</title><rect x="37.0809%" y="277" width="0.5917%" height="15" fill="rgb(237,203,48)" fg:x="188" fg:w="3"/><text x="37.3309%" y="287.50"></text></g><g><title>core::array::try_from_fn_erased (2 samples, 0.39%)</title><rect x="37.2781%" y="261" width="0.3945%" height="15" fill="rgb(211,197,16)" fg:x="189" fg:w="2"/><text x="37.5281%" y="271.50"></text></g><g><title>core::array::try_from_trusted_iterator::next::{{closure}} (2 samples, 0.39%)</title><rect x="37.2781%" y="245" width="0.3945%" height="15" fill="rgb(243,99,51)" fg:x="189" fg:w="2"/><text x="37.5281%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (2 samples, 0.39%)</title><rect x="37.2781%" y="229" width="0.3945%" height="15" fill="rgb(215,123,29)" fg:x="189" fg:w="2"/><text x="37.5281%" y="239.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_1::{{closure}} (2 samples, 0.39%)</title><rect x="37.2781%" y="213" width="0.3945%" height="15" fill="rgb(239,186,37)" fg:x="189" fg:w="2"/><text x="37.5281%" y="223.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed::{{closure}} (2 samples, 0.39%)</title><rect x="37.2781%" y="197" width="0.3945%" height="15" fill="rgb(252,136,39)" fg:x="189" fg:w="2"/><text x="37.5281%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.39%)</title><rect x="37.2781%" y="181" width="0.3945%" height="15" fill="rgb(223,213,32)" fg:x="189" fg:w="2"/><text x="37.5281%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.39%)</title><rect x="37.2781%" y="165" width="0.3945%" height="15" fill="rgb(233,115,5)" fg:x="189" fg:w="2"/><text x="37.5281%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (2 samples, 0.39%)</title><rect x="37.2781%" y="149" width="0.3945%" height="15" fill="rgb(207,226,44)" fg:x="189" fg:w="2"/><text x="37.5281%" y="159.50"></text></g><g><title>core::array::drain::drain_array_with (1 samples, 0.20%)</title><rect x="37.4753%" y="133" width="0.1972%" height="15" fill="rgb(208,126,0)" fg:x="190" fg:w="1"/><text x="37.7253%" y="143.50"></text></g><g><title>&lt;meet_middle::enumerate::Bv&lt;_&gt; as core::ops::bit::BitAnd&gt;::bitand (4 samples, 0.79%)</title><rect x="37.0809%" y="421" width="0.7890%" height="15" fill="rgb(244,66,21)" fg:x="188" fg:w="4"/><text x="37.3309%" y="431.50"></text></g><g><title>meet_middle::enumerate::op::bv::and (4 samples, 0.79%)</title><rect x="37.0809%" y="405" width="0.7890%" height="15" fill="rgb(222,97,12)" fg:x="188" fg:w="4"/><text x="37.3309%" y="415.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::zip (1 samples, 0.20%)</title><rect x="37.6726%" y="389" width="0.1972%" height="15" fill="rgb(219,213,19)" fg:x="191" fg:w="1"/><text x="37.9226%" y="399.50"></text></g><g><title>meet_middle::deductive::combine::CombineRules&lt;_&gt;::collect_expr (5 samples, 0.99%)</title><rect x="37.0809%" y="437" width="0.9862%" height="15" fill="rgb(252,169,30)" fg:x="188" fg:w="5"/><text x="37.3309%" y="447.50"></text></g><g><title>bumpalo::Bump::alloc (1 samples, 0.20%)</title><rect x="37.8698%" y="421" width="0.1972%" height="15" fill="rgb(206,32,51)" fg:x="192" fg:w="1"/><text x="38.1198%" y="431.50"></text></g><g><title>bumpalo::Bump::alloc_with (1 samples, 0.20%)</title><rect x="37.8698%" y="405" width="0.1972%" height="15" fill="rgb(250,172,42)" fg:x="192" fg:w="1"/><text x="38.1198%" y="415.50"></text></g><g><title>bumpalo::Bump::alloc_layout (1 samples, 0.20%)</title><rect x="37.8698%" y="389" width="0.1972%" height="15" fill="rgb(209,34,43)" fg:x="192" fg:w="1"/><text x="38.1198%" y="399.50"></text></g><g><title>bumpalo::Bump::try_alloc_layout (1 samples, 0.20%)</title><rect x="37.8698%" y="373" width="0.1972%" height="15" fill="rgb(223,11,35)" fg:x="192" fg:w="1"/><text x="38.1198%" y="383.50"></text></g><g><title>bumpalo::Bump::try_alloc_layout_fast (1 samples, 0.20%)</title><rect x="37.8698%" y="357" width="0.1972%" height="15" fill="rgb(251,219,26)" fg:x="192" fg:w="1"/><text x="38.1198%" y="367.50"></text></g><g><title>&lt;u32 as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (1 samples, 0.20%)</title><rect x="38.0671%" y="341" width="0.1972%" height="15" fill="rgb(231,119,3)" fg:x="193" fg:w="1"/><text x="38.3171%" y="351.50"></text></g><g><title>meet_middle::deductive::combine::CombineRules&lt;_&gt;::test (50 samples, 9.86%)</title><rect x="30.1775%" y="453" width="9.8619%" height="15" fill="rgb(216,97,11)" fg:x="153" fg:w="50"/><text x="30.4275%" y="463.50">meet_middle::d..</text></g><g><title>meet_middle::enumerate::Bv&lt;_&gt;::count (10 samples, 1.97%)</title><rect x="38.0671%" y="437" width="1.9724%" height="15" fill="rgb(223,59,9)" fg:x="193" fg:w="10"/><text x="38.3171%" y="447.50">m..</text></g><g><title>core::iter::traits::iterator::Iterator::sum (10 samples, 1.97%)</title><rect x="38.0671%" y="421" width="1.9724%" height="15" fill="rgb(233,93,31)" fg:x="193" fg:w="10"/><text x="38.3171%" y="431.50">c..</text></g><g><title>&lt;u32 as core::iter::traits::accum::Sum&gt;::sum (10 samples, 1.97%)</title><rect x="38.0671%" y="405" width="1.9724%" height="15" fill="rgb(239,81,33)" fg:x="193" fg:w="10"/><text x="38.3171%" y="415.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 1.97%)</title><rect x="38.0671%" y="389" width="1.9724%" height="15" fill="rgb(213,120,34)" fg:x="193" fg:w="10"/><text x="38.3171%" y="399.50">&lt;..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 1.97%)</title><rect x="38.0671%" y="373" width="1.9724%" height="15" fill="rgb(243,49,53)" fg:x="193" fg:w="10"/><text x="38.3171%" y="383.50">&lt;..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (10 samples, 1.97%)</title><rect x="38.0671%" y="357" width="1.9724%" height="15" fill="rgb(247,216,33)" fg:x="193" fg:w="10"/><text x="38.3171%" y="367.50">c..</text></g><g><title>meet_middle::enumerate::Bv&lt;_&gt;::count::{{closure}} (9 samples, 1.78%)</title><rect x="38.2643%" y="341" width="1.7751%" height="15" fill="rgb(226,26,14)" fg:x="194" fg:w="9"/><text x="38.5143%" y="351.50">m..</text></g><g><title>core::num::&lt;impl u64&gt;::count_ones (9 samples, 1.78%)</title><rect x="38.2643%" y="325" width="1.7751%" height="15" fill="rgb(215,49,53)" fg:x="194" fg:w="9"/><text x="38.5143%" y="335.50">c..</text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="40.4339%" y="149" width="0.1972%" height="15" fill="rgb(245,162,40)" fg:x="205" fg:w="1"/><text x="40.6839%" y="159.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="40.4339%" y="133" width="0.1972%" height="15" fill="rgb(229,68,17)" fg:x="205" fg:w="1"/><text x="40.6839%" y="143.50"></text></g><g><title>core::ops::index_range::IndexRange::next_unchecked (1 samples, 0.20%)</title><rect x="40.4339%" y="117" width="0.1972%" height="15" fill="rgb(213,182,10)" fg:x="205" fg:w="1"/><text x="40.6839%" y="127.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::collect (4 samples, 0.79%)</title><rect x="40.0394%" y="405" width="0.7890%" height="15" fill="rgb(245,125,30)" fg:x="203" fg:w="4"/><text x="40.2894%" y="415.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed (4 samples, 0.79%)</title><rect x="40.0394%" y="389" width="0.7890%" height="15" fill="rgb(232,202,2)" fg:x="203" fg:w="4"/><text x="40.2894%" y="399.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::map (4 samples, 0.79%)</title><rect x="40.0394%" y="373" width="0.7890%" height="15" fill="rgb(237,140,51)" fg:x="203" fg:w="4"/><text x="40.2894%" y="383.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map (2 samples, 0.39%)</title><rect x="40.4339%" y="357" width="0.3945%" height="15" fill="rgb(236,157,25)" fg:x="205" fg:w="2"/><text x="40.6839%" y="367.50"></text></g><g><title>core::array::drain::drain_array_with (2 samples, 0.39%)</title><rect x="40.4339%" y="341" width="0.3945%" height="15" fill="rgb(219,209,0)" fg:x="205" fg:w="2"/><text x="40.6839%" y="351.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map::{{closure}} (2 samples, 0.39%)</title><rect x="40.4339%" y="325" width="0.3945%" height="15" fill="rgb(240,116,54)" fg:x="205" fg:w="2"/><text x="40.6839%" y="335.50"></text></g><g><title>core::array::try_from_trusted_iterator (2 samples, 0.39%)</title><rect x="40.4339%" y="309" width="0.3945%" height="15" fill="rgb(216,10,36)" fg:x="205" fg:w="2"/><text x="40.6839%" y="319.50"></text></g><g><title>core::array::try_from_fn (2 samples, 0.39%)</title><rect x="40.4339%" y="293" width="0.3945%" height="15" fill="rgb(222,72,44)" fg:x="205" fg:w="2"/><text x="40.6839%" y="303.50"></text></g><g><title>core::array::try_from_fn_erased (2 samples, 0.39%)</title><rect x="40.4339%" y="277" width="0.3945%" height="15" fill="rgb(232,159,9)" fg:x="205" fg:w="2"/><text x="40.6839%" y="287.50"></text></g><g><title>core::array::try_from_trusted_iterator::next::{{closure}} (2 samples, 0.39%)</title><rect x="40.4339%" y="261" width="0.3945%" height="15" fill="rgb(210,39,32)" fg:x="205" fg:w="2"/><text x="40.6839%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (2 samples, 0.39%)</title><rect x="40.4339%" y="245" width="0.3945%" height="15" fill="rgb(216,194,45)" fg:x="205" fg:w="2"/><text x="40.6839%" y="255.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_1::{{closure}} (2 samples, 0.39%)</title><rect x="40.4339%" y="229" width="0.3945%" height="15" fill="rgb(218,18,35)" fg:x="205" fg:w="2"/><text x="40.6839%" y="239.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed::{{closure}} (2 samples, 0.39%)</title><rect x="40.4339%" y="213" width="0.3945%" height="15" fill="rgb(207,83,51)" fg:x="205" fg:w="2"/><text x="40.6839%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.39%)</title><rect x="40.4339%" y="197" width="0.3945%" height="15" fill="rgb(225,63,43)" fg:x="205" fg:w="2"/><text x="40.6839%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.39%)</title><rect x="40.4339%" y="181" width="0.3945%" height="15" fill="rgb(207,57,36)" fg:x="205" fg:w="2"/><text x="40.6839%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (2 samples, 0.39%)</title><rect x="40.4339%" y="165" width="0.3945%" height="15" fill="rgb(216,99,33)" fg:x="205" fg:w="2"/><text x="40.6839%" y="175.50"></text></g><g><title>core::array::drain::drain_array_with (1 samples, 0.20%)</title><rect x="40.6312%" y="149" width="0.1972%" height="15" fill="rgb(225,42,16)" fg:x="206" fg:w="1"/><text x="40.8812%" y="159.50"></text></g><g><title>&lt;meet_middle::enumerate::Bv&lt;_&gt; as core::ops::arith::Sub&gt;::sub (7 samples, 1.38%)</title><rect x="40.0394%" y="437" width="1.3807%" height="15" fill="rgb(220,201,45)" fg:x="203" fg:w="7"/><text x="40.2894%" y="447.50"></text></g><g><title>meet_middle::enumerate::op::bv::sub (7 samples, 1.38%)</title><rect x="40.0394%" y="421" width="1.3807%" height="15" fill="rgb(225,33,4)" fg:x="203" fg:w="7"/><text x="40.2894%" y="431.50"></text></g><g><title>meet_middle::enumerate::Bv&lt;_&gt;::into_iter_fixed (3 samples, 0.59%)</title><rect x="40.8284%" y="405" width="0.5917%" height="15" fill="rgb(224,33,50)" fg:x="207" fg:w="3"/><text x="41.0784%" y="415.50"></text></g><g><title>&lt;[T: N] as iter_fixed::into::IntoIteratorFixed&lt;_&gt;&gt;::into_iter_fixed (3 samples, 0.59%)</title><rect x="40.8284%" y="389" width="0.5917%" height="15" fill="rgb(246,198,51)" fg:x="207" fg:w="3"/><text x="41.0784%" y="399.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::from_iter (3 samples, 0.59%)</title><rect x="40.8284%" y="373" width="0.5917%" height="15" fill="rgb(205,22,4)" fg:x="207" fg:w="3"/><text x="41.0784%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.99%)</title><rect x="41.4201%" y="181" width="0.9862%" height="15" fill="rgb(206,3,8)" fg:x="210" fg:w="5"/><text x="41.6701%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (5 samples, 0.99%)</title><rect x="41.4201%" y="165" width="0.9862%" height="15" fill="rgb(251,23,15)" fg:x="210" fg:w="5"/><text x="41.6701%" y="175.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.99%)</title><rect x="41.4201%" y="149" width="0.9862%" height="15" fill="rgb(252,88,28)" fg:x="210" fg:w="5"/><text x="41.6701%" y="159.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.99%)</title><rect x="41.4201%" y="133" width="0.9862%" height="15" fill="rgb(212,127,14)" fg:x="210" fg:w="5"/><text x="41.6701%" y="143.50"></text></g><g><title>core::ops::index_range::IndexRange::next_unchecked (5 samples, 0.99%)</title><rect x="41.4201%" y="117" width="0.9862%" height="15" fill="rgb(247,145,37)" fg:x="210" fg:w="5"/><text x="41.6701%" y="127.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::collect (6 samples, 1.18%)</title><rect x="41.4201%" y="405" width="1.1834%" height="15" fill="rgb(209,117,53)" fg:x="210" fg:w="6"/><text x="41.6701%" y="415.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed (6 samples, 1.18%)</title><rect x="41.4201%" y="389" width="1.1834%" height="15" fill="rgb(212,90,42)" fg:x="210" fg:w="6"/><text x="41.6701%" y="399.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::map (6 samples, 1.18%)</title><rect x="41.4201%" y="373" width="1.1834%" height="15" fill="rgb(218,164,37)" fg:x="210" fg:w="6"/><text x="41.6701%" y="383.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map (6 samples, 1.18%)</title><rect x="41.4201%" y="357" width="1.1834%" height="15" fill="rgb(246,65,34)" fg:x="210" fg:w="6"/><text x="41.6701%" y="367.50"></text></g><g><title>core::array::drain::drain_array_with (6 samples, 1.18%)</title><rect x="41.4201%" y="341" width="1.1834%" height="15" fill="rgb(231,100,33)" fg:x="210" fg:w="6"/><text x="41.6701%" y="351.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map::{{closure}} (6 samples, 1.18%)</title><rect x="41.4201%" y="325" width="1.1834%" height="15" fill="rgb(228,126,14)" fg:x="210" fg:w="6"/><text x="41.6701%" y="335.50"></text></g><g><title>core::array::try_from_trusted_iterator (6 samples, 1.18%)</title><rect x="41.4201%" y="309" width="1.1834%" height="15" fill="rgb(215,173,21)" fg:x="210" fg:w="6"/><text x="41.6701%" y="319.50"></text></g><g><title>core::array::try_from_fn (6 samples, 1.18%)</title><rect x="41.4201%" y="293" width="1.1834%" height="15" fill="rgb(210,6,40)" fg:x="210" fg:w="6"/><text x="41.6701%" y="303.50"></text></g><g><title>core::array::try_from_fn_erased (6 samples, 1.18%)</title><rect x="41.4201%" y="277" width="1.1834%" height="15" fill="rgb(212,48,18)" fg:x="210" fg:w="6"/><text x="41.6701%" y="287.50"></text></g><g><title>core::array::try_from_trusted_iterator::next::{{closure}} (6 samples, 1.18%)</title><rect x="41.4201%" y="261" width="1.1834%" height="15" fill="rgb(230,214,11)" fg:x="210" fg:w="6"/><text x="41.6701%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (6 samples, 1.18%)</title><rect x="41.4201%" y="245" width="1.1834%" height="15" fill="rgb(254,105,39)" fg:x="210" fg:w="6"/><text x="41.6701%" y="255.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_1::{{closure}} (6 samples, 1.18%)</title><rect x="41.4201%" y="229" width="1.1834%" height="15" fill="rgb(245,158,5)" fg:x="210" fg:w="6"/><text x="41.6701%" y="239.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed::{{closure}} (6 samples, 1.18%)</title><rect x="41.4201%" y="213" width="1.1834%" height="15" fill="rgb(249,208,11)" fg:x="210" fg:w="6"/><text x="41.6701%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 1.18%)</title><rect x="41.4201%" y="197" width="1.1834%" height="15" fill="rgb(210,39,28)" fg:x="210" fg:w="6"/><text x="41.6701%" y="207.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.20%)</title><rect x="42.4063%" y="181" width="0.1972%" height="15" fill="rgb(211,56,53)" fg:x="215" fg:w="1"/><text x="42.6563%" y="191.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.20%)</title><rect x="42.4063%" y="165" width="0.1972%" height="15" fill="rgb(226,201,30)" fg:x="215" fg:w="1"/><text x="42.6563%" y="175.50"></text></g><g><title>meet_middle::enumerate::op::bv::xor::{{closure}} (1 samples, 0.20%)</title><rect x="42.4063%" y="149" width="0.1972%" height="15" fill="rgb(239,101,34)" fg:x="215" fg:w="1"/><text x="42.6563%" y="159.50"></text></g><g><title>meet_middle::enumerate::op::xor (1 samples, 0.20%)</title><rect x="42.4063%" y="133" width="0.1972%" height="15" fill="rgb(226,209,5)" fg:x="215" fg:w="1"/><text x="42.6563%" y="143.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::zip (1 samples, 0.20%)</title><rect x="42.6036%" y="405" width="0.1972%" height="15" fill="rgb(250,105,47)" fg:x="216" fg:w="1"/><text x="42.8536%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (1 samples, 0.20%)</title><rect x="42.6036%" y="389" width="0.1972%" height="15" fill="rgb(230,72,3)" fg:x="216" fg:w="1"/><text x="42.8536%" y="399.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (1 samples, 0.20%)</title><rect x="42.6036%" y="373" width="0.1972%" height="15" fill="rgb(232,218,39)" fg:x="216" fg:w="1"/><text x="42.8536%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (1 samples, 0.20%)</title><rect x="42.6036%" y="357" width="0.1972%" height="15" fill="rgb(248,166,6)" fg:x="216" fg:w="1"/><text x="42.8536%" y="367.50"></text></g><g><title>&lt;meet_middle::enumerate::Bv&lt;_&gt; as core::ops::bit::BitXor&gt;::bitxor (8 samples, 1.58%)</title><rect x="41.4201%" y="437" width="1.5779%" height="15" fill="rgb(247,89,20)" fg:x="210" fg:w="8"/><text x="41.6701%" y="447.50"></text></g><g><title>meet_middle::enumerate::op::bv::xor (8 samples, 1.58%)</title><rect x="41.4201%" y="421" width="1.5779%" height="15" fill="rgb(248,130,54)" fg:x="210" fg:w="8"/><text x="41.6701%" y="431.50"></text></g><g><title>meet_middle::enumerate::Bv&lt;_&gt;::into_iter_fixed (1 samples, 0.20%)</title><rect x="42.8008%" y="405" width="0.1972%" height="15" fill="rgb(234,196,4)" fg:x="217" fg:w="1"/><text x="43.0508%" y="415.50"></text></g><g><title>&lt;[T: N] as iter_fixed::into::IntoIteratorFixed&lt;_&gt;&gt;::into_iter_fixed (1 samples, 0.20%)</title><rect x="42.8008%" y="389" width="0.1972%" height="15" fill="rgb(250,143,31)" fg:x="217" fg:w="1"/><text x="43.0508%" y="399.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::from_iter (1 samples, 0.20%)</title><rect x="42.8008%" y="373" width="0.1972%" height="15" fill="rgb(211,110,34)" fg:x="217" fg:w="1"/><text x="43.0508%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.39%)</title><rect x="43.3925%" y="293" width="0.3945%" height="15" fill="rgb(215,124,48)" fg:x="220" fg:w="2"/><text x="43.6425%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (7 samples, 1.38%)</title><rect x="42.9980%" y="357" width="1.3807%" height="15" fill="rgb(216,46,13)" fg:x="218" fg:w="7"/><text x="43.2480%" y="367.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (7 samples, 1.38%)</title><rect x="42.9980%" y="341" width="1.3807%" height="15" fill="rgb(205,184,25)" fg:x="218" fg:w="7"/><text x="43.2480%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (7 samples, 1.38%)</title><rect x="42.9980%" y="325" width="1.3807%" height="15" fill="rgb(228,1,10)" fg:x="218" fg:w="7"/><text x="43.2480%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (6 samples, 1.18%)</title><rect x="43.1953%" y="309" width="1.1834%" height="15" fill="rgb(213,116,27)" fg:x="219" fg:w="6"/><text x="43.4453%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.59%)</title><rect x="43.7870%" y="293" width="0.5917%" height="15" fill="rgb(241,95,50)" fg:x="222" fg:w="3"/><text x="44.0370%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.39%)</title><rect x="44.3787%" y="357" width="0.3945%" height="15" fill="rgb(238,48,32)" fg:x="225" fg:w="2"/><text x="44.6287%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.20%)</title><rect x="44.7732%" y="213" width="0.1972%" height="15" fill="rgb(235,113,49)" fg:x="227" fg:w="1"/><text x="45.0232%" y="223.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (2 samples, 0.39%)</title><rect x="44.7732%" y="293" width="0.3945%" height="15" fill="rgb(205,127,43)" fg:x="227" fg:w="2"/><text x="45.0232%" y="303.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.39%)</title><rect x="44.7732%" y="277" width="0.3945%" height="15" fill="rgb(250,162,2)" fg:x="227" fg:w="2"/><text x="45.0232%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.39%)</title><rect x="44.7732%" y="261" width="0.3945%" height="15" fill="rgb(220,13,41)" fg:x="227" fg:w="2"/><text x="45.0232%" y="271.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.39%)</title><rect x="44.7732%" y="245" width="0.3945%" height="15" fill="rgb(249,221,25)" fg:x="227" fg:w="2"/><text x="45.0232%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.39%)</title><rect x="44.7732%" y="229" width="0.3945%" height="15" fill="rgb(215,208,19)" fg:x="227" fg:w="2"/><text x="45.0232%" y="239.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.20%)</title><rect x="44.9704%" y="213" width="0.1972%" height="15" fill="rgb(236,175,2)" fg:x="228" fg:w="1"/><text x="45.2204%" y="223.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.59%)</title><rect x="45.5621%" y="213" width="0.5917%" height="15" fill="rgb(241,52,2)" fg:x="231" fg:w="3"/><text x="45.8121%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.99%)</title><rect x="45.5621%" y="229" width="0.9862%" height="15" fill="rgb(248,140,14)" fg:x="231" fg:w="5"/><text x="45.8121%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.39%)</title><rect x="46.1538%" y="213" width="0.3945%" height="15" fill="rgb(253,22,42)" fg:x="234" fg:w="2"/><text x="46.4038%" y="223.50"></text></g><g><title>hashbrown::map::make_hash (19 samples, 3.75%)</title><rect x="42.9980%" y="389" width="3.7475%" height="15" fill="rgb(234,61,47)" fg:x="218" fg:w="19"/><text x="43.2480%" y="399.50">hash..</text></g><g><title>core::hash::BuildHasher::hash_one (19 samples, 3.75%)</title><rect x="42.9980%" y="373" width="3.7475%" height="15" fill="rgb(208,226,15)" fg:x="218" fg:w="19"/><text x="43.2480%" y="383.50">core..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (10 samples, 1.97%)</title><rect x="44.7732%" y="357" width="1.9724%" height="15" fill="rgb(217,221,4)" fg:x="227" fg:w="10"/><text x="45.0232%" y="367.50">c..</text></g><g><title>&lt;meet_middle::enumerate::Bv&lt;_&gt; as core::hash::Hash&gt;::hash (10 samples, 1.97%)</title><rect x="44.7732%" y="341" width="1.9724%" height="15" fill="rgb(212,174,34)" fg:x="227" fg:w="10"/><text x="45.0232%" y="351.50">&lt;..</text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (10 samples, 1.97%)</title><rect x="44.7732%" y="325" width="1.9724%" height="15" fill="rgb(253,83,4)" fg:x="227" fg:w="10"/><text x="45.0232%" y="335.50">c..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (10 samples, 1.97%)</title><rect x="44.7732%" y="309" width="1.9724%" height="15" fill="rgb(250,195,49)" fg:x="227" fg:w="10"/><text x="45.0232%" y="319.50">c..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash_slice (8 samples, 1.58%)</title><rect x="45.1677%" y="293" width="1.5779%" height="15" fill="rgb(241,192,25)" fg:x="229" fg:w="8"/><text x="45.4177%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 1.58%)</title><rect x="45.1677%" y="277" width="1.5779%" height="15" fill="rgb(208,124,10)" fg:x="229" fg:w="8"/><text x="45.4177%" y="287.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (8 samples, 1.58%)</title><rect x="45.1677%" y="261" width="1.5779%" height="15" fill="rgb(222,33,0)" fg:x="229" fg:w="8"/><text x="45.4177%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 1.58%)</title><rect x="45.1677%" y="245" width="1.5779%" height="15" fill="rgb(234,209,28)" fg:x="229" fg:w="8"/><text x="45.4177%" y="255.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.20%)</title><rect x="46.5483%" y="229" width="0.1972%" height="15" fill="rgb(224,11,23)" fg:x="236" fg:w="1"/><text x="46.7983%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.20%)</title><rect x="46.7456%" y="341" width="0.1972%" height="15" fill="rgb(232,99,1)" fg:x="237" fg:w="1"/><text x="46.9956%" y="351.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.20%)</title><rect x="46.7456%" y="325" width="0.1972%" height="15" fill="rgb(237,95,45)" fg:x="237" fg:w="1"/><text x="46.9956%" y="335.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.20%)</title><rect x="46.7456%" y="309" width="0.1972%" height="15" fill="rgb(208,109,11)" fg:x="237" fg:w="1"/><text x="46.9956%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.20%)</title><rect x="46.7456%" y="293" width="0.1972%" height="15" fill="rgb(216,190,48)" fg:x="237" fg:w="1"/><text x="46.9956%" y="303.50"></text></g><g><title>&lt;meet_middle::enumerate::Bv&lt;_&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.20%)</title><rect x="46.7456%" y="277" width="0.1972%" height="15" fill="rgb(251,171,36)" fg:x="237" fg:w="1"/><text x="46.9956%" y="287.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (1 samples, 0.20%)</title><rect x="46.7456%" y="261" width="0.1972%" height="15" fill="rgb(230,62,22)" fg:x="237" fg:w="1"/><text x="46.9956%" y="271.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (1 samples, 0.20%)</title><rect x="46.7456%" y="245" width="0.1972%" height="15" fill="rgb(225,114,35)" fg:x="237" fg:w="1"/><text x="46.9956%" y="255.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.20%)</title><rect x="46.7456%" y="229" width="0.1972%" height="15" fill="rgb(215,118,42)" fg:x="237" fg:w="1"/><text x="46.9956%" y="239.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (20 samples, 3.94%)</title><rect x="46.9428%" y="341" width="3.9448%" height="15" fill="rgb(243,119,21)" fg:x="238" fg:w="20"/><text x="47.1928%" y="351.50">hash..</text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (20 samples, 3.94%)</title><rect x="46.9428%" y="325" width="3.9448%" height="15" fill="rgb(252,177,53)" fg:x="238" fg:w="20"/><text x="47.1928%" y="335.50">core..</text></g><g><title>core::intrinsics::copy_nonoverlapping (20 samples, 3.94%)</title><rect x="46.9428%" y="309" width="3.9448%" height="15" fill="rgb(237,209,29)" fg:x="238" fg:w="20"/><text x="47.1928%" y="319.50">core..</text></g><g><title>meet_middle::deductive::reverse::ReverseRule::reverse (56 samples, 11.05%)</title><rect x="40.0394%" y="453" width="11.0454%" height="15" fill="rgb(212,65,23)" fg:x="203" fg:w="56"/><text x="40.2894%" y="463.50">meet_middle::ded..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (41 samples, 8.09%)</title><rect x="42.9980%" y="437" width="8.0868%" height="15" fill="rgb(230,222,46)" fg:x="218" fg:w="41"/><text x="43.2480%" y="447.50">std::collec..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (41 samples, 8.09%)</title><rect x="42.9980%" y="421" width="8.0868%" height="15" fill="rgb(215,135,32)" fg:x="218" fg:w="41"/><text x="43.2480%" y="431.50">hashbrown::..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (41 samples, 8.09%)</title><rect x="42.9980%" y="405" width="8.0868%" height="15" fill="rgb(246,101,22)" fg:x="218" fg:w="41"/><text x="43.2480%" y="415.50">hashbrown::..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (22 samples, 4.34%)</title><rect x="46.7456%" y="389" width="4.3393%" height="15" fill="rgb(206,107,13)" fg:x="237" fg:w="22"/><text x="46.9956%" y="399.50">hashb..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (22 samples, 4.34%)</title><rect x="46.7456%" y="373" width="4.3393%" height="15" fill="rgb(250,100,44)" fg:x="237" fg:w="22"/><text x="46.9956%" y="383.50">hashb..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (22 samples, 4.34%)</title><rect x="46.7456%" y="357" width="4.3393%" height="15" fill="rgb(231,147,38)" fg:x="237" fg:w="22"/><text x="46.9956%" y="367.50">hashb..</text></g><g><title>hashbrown::raw::sse2::Group::match_empty (1 samples, 0.20%)</title><rect x="50.8876%" y="341" width="0.1972%" height="15" fill="rgb(229,8,40)" fg:x="258" fg:w="1"/><text x="51.1376%" y="351.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.20%)</title><rect x="50.8876%" y="325" width="0.1972%" height="15" fill="rgb(221,135,30)" fg:x="258" fg:w="1"/><text x="51.1376%" y="335.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.20%)</title><rect x="50.8876%" y="309" width="0.1972%" height="15" fill="rgb(249,193,18)" fg:x="258" fg:w="1"/><text x="51.1376%" y="319.50"></text></g><g><title>meet_middle::enumerate::Bv&lt;_&gt;::any_eq (1 samples, 0.20%)</title><rect x="51.0848%" y="453" width="0.1972%" height="15" fill="rgb(209,133,39)" fg:x="259" fg:w="1"/><text x="51.3348%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any (1 samples, 0.20%)</title><rect x="51.0848%" y="437" width="0.1972%" height="15" fill="rgb(232,100,14)" fg:x="259" fg:w="1"/><text x="51.3348%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.20%)</title><rect x="51.0848%" y="421" width="0.1972%" height="15" fill="rgb(224,185,1)" fg:x="259" fg:w="1"/><text x="51.3348%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any::check::{{closure}} (1 samples, 0.20%)</title><rect x="51.0848%" y="405" width="0.1972%" height="15" fill="rgb(223,139,8)" fg:x="259" fg:w="1"/><text x="51.3348%" y="415.50"></text></g><g><title>meet_middle::enumerate::Bv&lt;_&gt;::any_eq::{{closure}} (1 samples, 0.20%)</title><rect x="51.0848%" y="389" width="0.1972%" height="15" fill="rgb(232,213,38)" fg:x="259" fg:w="1"/><text x="51.3348%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.20%)</title><rect x="51.0848%" y="373" width="0.1972%" height="15" fill="rgb(207,94,22)" fg:x="259" fg:w="1"/><text x="51.3348%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::eq (1 samples, 0.20%)</title><rect x="51.0848%" y="357" width="0.1972%" height="15" fill="rgb(219,183,54)" fg:x="259" fg:w="1"/><text x="51.3348%" y="367.50"></text></g><g><title>meet_middle::search::sample::SampleConfig::search_inner::{{closure}} (2 samples, 0.39%)</title><rect x="51.2821%" y="453" width="0.3945%" height="15" fill="rgb(216,185,54)" fg:x="260" fg:w="2"/><text x="51.5321%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;sdset::set::SetBuf&lt;usize&gt;&gt; (1 samples, 0.20%)</title><rect x="51.6765%" y="437" width="0.1972%" height="15" fill="rgb(254,217,39)" fg:x="262" fg:w="1"/><text x="51.9265%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (1 samples, 0.20%)</title><rect x="51.6765%" y="421" width="0.1972%" height="15" fill="rgb(240,178,23)" fg:x="262" fg:w="1"/><text x="51.9265%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (1 samples, 0.20%)</title><rect x="51.6765%" y="405" width="0.1972%" height="15" fill="rgb(218,11,47)" fg:x="262" fg:w="1"/><text x="51.9265%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.20%)</title><rect x="51.6765%" y="389" width="0.1972%" height="15" fill="rgb(218,51,51)" fg:x="262" fg:w="1"/><text x="51.9265%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.20%)</title><rect x="51.6765%" y="373" width="0.1972%" height="15" fill="rgb(238,126,27)" fg:x="262" fg:w="1"/><text x="51.9265%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.20%)</title><rect x="51.6765%" y="357" width="0.1972%" height="15" fill="rgb(249,202,22)" fg:x="262" fg:w="1"/><text x="51.9265%" y="367.50"></text></g><g><title>_int_free (1 samples, 0.20%)</title><rect x="51.6765%" y="341" width="0.1972%" height="15" fill="rgb(254,195,49)" fg:x="262" fg:w="1"/><text x="51.9265%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 3.16%)</title><rect x="51.8738%" y="325" width="3.1558%" height="15" fill="rgb(208,123,14)" fg:x="263" fg:w="16"/><text x="52.1238%" y="335.50">&lt;co..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 3.16%)</title><rect x="51.8738%" y="309" width="3.1558%" height="15" fill="rgb(224,200,8)" fg:x="263" fg:w="16"/><text x="52.1238%" y="319.50">&lt;co..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 3.16%)</title><rect x="51.8738%" y="293" width="3.1558%" height="15" fill="rgb(217,61,36)" fg:x="263" fg:w="16"/><text x="52.1238%" y="303.50">&lt;co..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (16 samples, 3.16%)</title><rect x="51.8738%" y="277" width="3.1558%" height="15" fill="rgb(206,35,45)" fg:x="263" fg:w="16"/><text x="52.1238%" y="287.50">&lt;co..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 3.16%)</title><rect x="51.8738%" y="261" width="3.1558%" height="15" fill="rgb(217,65,33)" fg:x="263" fg:w="16"/><text x="52.1238%" y="271.50">&lt;co..</text></g><g><title>core::option::Option&lt;T&gt;::map (16 samples, 3.16%)</title><rect x="51.8738%" y="245" width="3.1558%" height="15" fill="rgb(222,158,48)" fg:x="263" fg:w="16"/><text x="52.1238%" y="255.50">cor..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (16 samples, 3.16%)</title><rect x="51.8738%" y="229" width="3.1558%" height="15" fill="rgb(254,2,54)" fg:x="263" fg:w="16"/><text x="52.1238%" y="239.50">cor..</text></g><g><title>meet_middle::parse::constraint::pbe::PbeConstraint::test::{{closure}} (15 samples, 2.96%)</title><rect x="52.0710%" y="213" width="2.9586%" height="15" fill="rgb(250,143,38)" fg:x="264" fg:w="15"/><text x="52.3210%" y="223.50">mee..</text></g><g><title>meet_middle::enumerate::expr::Expr::eval (15 samples, 2.96%)</title><rect x="52.0710%" y="197" width="2.9586%" height="15" fill="rgb(248,25,0)" fg:x="264" fg:w="15"/><text x="52.3210%" y="207.50">mee..</text></g><g><title>meet_middle::enumerate::expr::Expr::eval (15 samples, 2.96%)</title><rect x="52.0710%" y="181" width="2.9586%" height="15" fill="rgb(206,152,27)" fg:x="264" fg:w="15"/><text x="52.3210%" y="191.50">mee..</text></g><g><title>meet_middle::enumerate::expr::Expr::eval (11 samples, 2.17%)</title><rect x="52.8600%" y="165" width="2.1696%" height="15" fill="rgb(240,77,30)" fg:x="268" fg:w="11"/><text x="53.1100%" y="175.50">m..</text></g><g><title>meet_middle::enumerate::expr::Expr::eval (8 samples, 1.58%)</title><rect x="53.4517%" y="149" width="1.5779%" height="15" fill="rgb(231,5,3)" fg:x="271" fg:w="8"/><text x="53.7017%" y="159.50"></text></g><g><title>meet_middle::enumerate::expr::Expr::eval (5 samples, 0.99%)</title><rect x="54.0434%" y="133" width="0.9862%" height="15" fill="rgb(207,226,32)" fg:x="274" fg:w="5"/><text x="54.2934%" y="143.50"></text></g><g><title>meet_middle::enumerate::expr::Expr::eval (4 samples, 0.79%)</title><rect x="54.2406%" y="117" width="0.7890%" height="15" fill="rgb(222,207,47)" fg:x="275" fg:w="4"/><text x="54.4906%" y="127.50"></text></g><g><title>meet_middle::enumerate::expr::Expr::eval (3 samples, 0.59%)</title><rect x="54.4379%" y="101" width="0.5917%" height="15" fill="rgb(229,115,45)" fg:x="276" fg:w="3"/><text x="54.6879%" y="111.50"></text></g><g><title>meet_middle::enumerate::expr::Expr::eval (3 samples, 0.59%)</title><rect x="54.4379%" y="85" width="0.5917%" height="15" fill="rgb(224,191,6)" fg:x="276" fg:w="3"/><text x="54.6879%" y="95.50"></text></g><g><title>meet_middle::enumerate::expr::Expr::eval (1 samples, 0.20%)</title><rect x="54.8323%" y="69" width="0.1972%" height="15" fill="rgb(230,227,24)" fg:x="278" fg:w="1"/><text x="55.0823%" y="79.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.20%)</title><rect x="55.0296%" y="325" width="0.1972%" height="15" fill="rgb(228,80,19)" fg:x="279" fg:w="1"/><text x="55.2796%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.20%)</title><rect x="55.0296%" y="309" width="0.1972%" height="15" fill="rgb(247,229,0)" fg:x="279" fg:w="1"/><text x="55.2796%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.20%)</title><rect x="55.0296%" y="293" width="0.1972%" height="15" fill="rgb(237,194,15)" fg:x="279" fg:w="1"/><text x="55.2796%" y="303.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.20%)</title><rect x="55.4241%" y="165" width="0.1972%" height="15" fill="rgb(219,203,20)" fg:x="281" fg:w="1"/><text x="55.6741%" y="175.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.99%)</title><rect x="55.2268%" y="197" width="0.9862%" height="15" fill="rgb(234,128,8)" fg:x="280" fg:w="5"/><text x="55.4768%" y="207.50"></text></g><g><title>_int_realloc (4 samples, 0.79%)</title><rect x="55.4241%" y="181" width="0.7890%" height="15" fill="rgb(248,202,8)" fg:x="281" fg:w="4"/><text x="55.6741%" y="191.50"></text></g><g><title>_int_malloc (3 samples, 0.59%)</title><rect x="55.6213%" y="165" width="0.5917%" height="15" fill="rgb(206,104,37)" fg:x="282" fg:w="3"/><text x="55.8713%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (23 samples, 4.54%)</title><rect x="51.8738%" y="357" width="4.5365%" height="15" fill="rgb(223,8,27)" fg:x="263" fg:w="23"/><text x="52.1238%" y="367.50">&lt;allo..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (23 samples, 4.54%)</title><rect x="51.8738%" y="341" width="4.5365%" height="15" fill="rgb(216,217,28)" fg:x="263" fg:w="23"/><text x="52.1238%" y="351.50">alloc..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 1.18%)</title><rect x="55.2268%" y="325" width="1.1834%" height="15" fill="rgb(249,199,1)" fg:x="280" fg:w="6"/><text x="55.4768%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 1.18%)</title><rect x="55.2268%" y="309" width="1.1834%" height="15" fill="rgb(240,85,17)" fg:x="280" fg:w="6"/><text x="55.4768%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 1.18%)</title><rect x="55.2268%" y="293" width="1.1834%" height="15" fill="rgb(206,108,45)" fg:x="280" fg:w="6"/><text x="55.4768%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 1.18%)</title><rect x="55.2268%" y="277" width="1.1834%" height="15" fill="rgb(245,210,41)" fg:x="280" fg:w="6"/><text x="55.4768%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 1.18%)</title><rect x="55.2268%" y="261" width="1.1834%" height="15" fill="rgb(206,13,37)" fg:x="280" fg:w="6"/><text x="55.4768%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 1.18%)</title><rect x="55.2268%" y="245" width="1.1834%" height="15" fill="rgb(250,61,18)" fg:x="280" fg:w="6"/><text x="55.4768%" y="255.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 1.18%)</title><rect x="55.2268%" y="229" width="1.1834%" height="15" fill="rgb(235,172,48)" fg:x="280" fg:w="6"/><text x="55.4768%" y="239.50"></text></g><g><title>alloc::alloc::realloc (6 samples, 1.18%)</title><rect x="55.2268%" y="213" width="1.1834%" height="15" fill="rgb(249,201,17)" fg:x="280" fg:w="6"/><text x="55.4768%" y="223.50"></text></g><g><title>__rdl_realloc (1 samples, 0.20%)</title><rect x="56.2130%" y="197" width="0.1972%" height="15" fill="rgb(219,208,6)" fg:x="285" fg:w="1"/><text x="56.4630%" y="207.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.20%)</title><rect x="56.2130%" y="181" width="0.1972%" height="15" fill="rgb(248,31,23)" fg:x="285" fg:w="1"/><text x="56.4630%" y="191.50"></text></g><g><title>meet_middle::parse::constraint::pbe::PbeConstraint::test (28 samples, 5.52%)</title><rect x="51.8738%" y="437" width="5.5227%" height="15" fill="rgb(245,15,42)" fg:x="263" fg:w="28"/><text x="52.1238%" y="447.50">meet_mi..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (28 samples, 5.52%)</title><rect x="51.8738%" y="421" width="5.5227%" height="15" fill="rgb(222,217,39)" fg:x="263" fg:w="28"/><text x="52.1238%" y="431.50">core::i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (28 samples, 5.52%)</title><rect x="51.8738%" y="405" width="5.5227%" height="15" fill="rgb(210,219,27)" fg:x="263" fg:w="28"/><text x="52.1238%" y="415.50">&lt;alloc:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (28 samples, 5.52%)</title><rect x="51.8738%" y="389" width="5.5227%" height="15" fill="rgb(252,166,36)" fg:x="263" fg:w="28"/><text x="52.1238%" y="399.50">&lt;alloc:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (28 samples, 5.52%)</title><rect x="51.8738%" y="373" width="5.5227%" height="15" fill="rgb(245,132,34)" fg:x="263" fg:w="28"/><text x="52.1238%" y="383.50">&lt;alloc:..</text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.99%)</title><rect x="56.4103%" y="357" width="0.9862%" height="15" fill="rgb(236,54,3)" fg:x="286" fg:w="5"/><text x="56.6603%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.99%)</title><rect x="56.4103%" y="341" width="0.9862%" height="15" fill="rgb(241,173,43)" fg:x="286" fg:w="5"/><text x="56.6603%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.79%)</title><rect x="56.6075%" y="325" width="0.7890%" height="15" fill="rgb(215,190,9)" fg:x="287" fg:w="4"/><text x="56.8575%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (4 samples, 0.79%)</title><rect x="56.6075%" y="309" width="0.7890%" height="15" fill="rgb(242,101,16)" fg:x="287" fg:w="4"/><text x="56.8575%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.79%)</title><rect x="56.6075%" y="293" width="0.7890%" height="15" fill="rgb(223,190,21)" fg:x="287" fg:w="4"/><text x="56.8575%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.79%)</title><rect x="56.6075%" y="277" width="0.7890%" height="15" fill="rgb(215,228,25)" fg:x="287" fg:w="4"/><text x="56.8575%" y="287.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.79%)</title><rect x="56.6075%" y="261" width="0.7890%" height="15" fill="rgb(225,36,22)" fg:x="287" fg:w="4"/><text x="56.8575%" y="271.50"></text></g><g><title>meet_middle::parse::constraint::pbe::PbeConstraint::test::{{closure}} (4 samples, 0.79%)</title><rect x="56.6075%" y="245" width="0.7890%" height="15" fill="rgb(251,106,46)" fg:x="287" fg:w="4"/><text x="56.8575%" y="255.50"></text></g><g><title>meet_middle::enumerate::expr::Expr::eval (4 samples, 0.79%)</title><rect x="56.6075%" y="229" width="0.7890%" height="15" fill="rgb(208,90,1)" fg:x="287" fg:w="4"/><text x="56.8575%" y="239.50"></text></g><g><title>meet_middle::enumerate::expr::Expr::eval (4 samples, 0.79%)</title><rect x="56.6075%" y="213" width="0.7890%" height="15" fill="rgb(243,10,4)" fg:x="287" fg:w="4"/><text x="56.8575%" y="223.50"></text></g><g><title>meet_middle::enumerate::expr::Expr::eval (4 samples, 0.79%)</title><rect x="56.6075%" y="197" width="0.7890%" height="15" fill="rgb(212,137,27)" fg:x="287" fg:w="4"/><text x="56.8575%" y="207.50"></text></g><g><title>meet_middle::enumerate::expr::Expr::eval (4 samples, 0.79%)</title><rect x="56.6075%" y="181" width="0.7890%" height="15" fill="rgb(231,220,49)" fg:x="287" fg:w="4"/><text x="56.8575%" y="191.50"></text></g><g><title>meet_middle::enumerate::expr::Expr::eval (4 samples, 0.79%)</title><rect x="56.6075%" y="165" width="0.7890%" height="15" fill="rgb(237,96,20)" fg:x="287" fg:w="4"/><text x="56.8575%" y="175.50"></text></g><g><title>meet_middle::enumerate::expr::Expr::eval (4 samples, 0.79%)</title><rect x="56.6075%" y="149" width="0.7890%" height="15" fill="rgb(239,229,30)" fg:x="287" fg:w="4"/><text x="56.8575%" y="159.50"></text></g><g><title>meet_middle::enumerate::expr::Expr::eval (2 samples, 0.39%)</title><rect x="57.0020%" y="133" width="0.3945%" height="15" fill="rgb(219,65,33)" fg:x="289" fg:w="2"/><text x="57.2520%" y="143.50"></text></g><g><title>sdset::SetOperation::into_set_buf (1 samples, 0.20%)</title><rect x="57.3964%" y="373" width="0.1972%" height="15" fill="rgb(243,134,7)" fg:x="291" fg:w="1"/><text x="57.6464%" y="383.50"></text></g><g><title>core::cmp::min (1 samples, 0.20%)</title><rect x="57.7909%" y="341" width="0.1972%" height="15" fill="rgb(216,177,54)" fg:x="293" fg:w="1"/><text x="58.0409%" y="351.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.20%)</title><rect x="57.7909%" y="325" width="0.1972%" height="15" fill="rgb(211,160,20)" fg:x="293" fg:w="1"/><text x="58.0409%" y="335.50"></text></g><g><title>sdset::SetOperation::into_set_buf (1 samples, 0.20%)</title><rect x="57.7909%" y="309" width="0.1972%" height="15" fill="rgb(239,85,39)" fg:x="293" fg:w="1"/><text x="58.0409%" y="319.50"></text></g><g><title>meet_middle::search::filter::FilterState&lt;_&gt;::filter (146 samples, 28.80%)</title><rect x="29.7830%" y="469" width="28.7968%" height="15" fill="rgb(232,125,22)" fg:x="151" fg:w="146"/><text x="30.0330%" y="479.50">meet_middle::search::filter::FilterState&lt;_&gt;::f..</text></g><g><title>meet_middle::solutions::Solutions::add_solution (35 samples, 6.90%)</title><rect x="51.6765%" y="453" width="6.9034%" height="15" fill="rgb(244,57,34)" fg:x="262" fg:w="35"/><text x="51.9265%" y="463.50">meet_midd..</text></g><g><title>sdset::SetOperation::into_set_buf (6 samples, 1.18%)</title><rect x="57.3964%" y="437" width="1.1834%" height="15" fill="rgb(214,203,32)" fg:x="291" fg:w="6"/><text x="57.6464%" y="447.50"></text></g><g><title>&lt;sdset::duo::difference::Difference&lt;T&gt; as sdset::SetOperation&lt;T&gt;&gt;::extend_collection (6 samples, 1.18%)</title><rect x="57.3964%" y="421" width="1.1834%" height="15" fill="rgb(207,58,43)" fg:x="291" fg:w="6"/><text x="57.6464%" y="431.50"></text></g><g><title>sdset::duo::difference::Difference&lt;T&gt;::extend_collection (6 samples, 1.18%)</title><rect x="57.3964%" y="405" width="1.1834%" height="15" fill="rgb(215,193,15)" fg:x="291" fg:w="6"/><text x="57.6464%" y="415.50"></text></g><g><title>sdset::exponential_offset_ge (6 samples, 1.18%)</title><rect x="57.3964%" y="389" width="1.1834%" height="15" fill="rgb(232,15,44)" fg:x="291" fg:w="6"/><text x="57.6464%" y="399.50"></text></g><g><title>sdset::exponential_offset_ge_by (5 samples, 0.99%)</title><rect x="57.5937%" y="373" width="0.9862%" height="15" fill="rgb(212,3,48)" fg:x="292" fg:w="5"/><text x="57.8437%" y="383.50"></text></g><g><title>sdset::exponential_search_by (5 samples, 0.99%)</title><rect x="57.5937%" y="357" width="0.9862%" height="15" fill="rgb(218,128,7)" fg:x="292" fg:w="5"/><text x="57.8437%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (3 samples, 0.59%)</title><rect x="57.9882%" y="341" width="0.5917%" height="15" fill="rgb(226,216,39)" fg:x="294" fg:w="3"/><text x="58.2382%" y="351.50"></text></g><g><title>sdset::exponential_offset_ge::{{closure}} (2 samples, 0.39%)</title><rect x="58.1854%" y="325" width="0.3945%" height="15" fill="rgb(243,47,51)" fg:x="295" fg:w="2"/><text x="58.4354%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (2 samples, 0.39%)</title><rect x="58.1854%" y="309" width="0.3945%" height="15" fill="rgb(241,183,40)" fg:x="295" fg:w="2"/><text x="58.4354%" y="319.50"></text></g><g><title>meet_middle::search::sample::SampleConfig::search_inner::{{closure}} (148 samples, 29.19%)</title><rect x="29.5858%" y="485" width="29.1913%" height="15" fill="rgb(231,217,32)" fg:x="150" fg:w="148"/><text x="29.8358%" y="495.50">meet_middle::search::sample::SampleConfig::sear..</text></g><g><title>meet_middle::search::sample::SampleConfig::search_inner::{{closure}} (1 samples, 0.20%)</title><rect x="58.5799%" y="469" width="0.1972%" height="15" fill="rgb(229,61,38)" fg:x="297" fg:w="1"/><text x="58.8299%" y="479.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.20%)</title><rect x="60.3550%" y="437" width="0.1972%" height="15" fill="rgb(225,210,5)" fg:x="306" fg:w="1"/><text x="60.6050%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.20%)</title><rect x="60.5523%" y="405" width="0.1972%" height="15" fill="rgb(231,79,45)" fg:x="307" fg:w="1"/><text x="60.8023%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.20%)</title><rect x="60.5523%" y="389" width="0.1972%" height="15" fill="rgb(224,100,7)" fg:x="307" fg:w="1"/><text x="60.8023%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.20%)</title><rect x="60.5523%" y="373" width="0.1972%" height="15" fill="rgb(241,198,18)" fg:x="307" fg:w="1"/><text x="60.8023%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.20%)</title><rect x="60.5523%" y="357" width="0.1972%" height="15" fill="rgb(252,97,53)" fg:x="307" fg:w="1"/><text x="60.8023%" y="367.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (3 samples, 0.59%)</title><rect x="60.7495%" y="341" width="0.5917%" height="15" fill="rgb(220,88,7)" fg:x="308" fg:w="3"/><text x="60.9995%" y="351.50"></text></g><g><title>core::hash::Hasher::write_usize (3 samples, 0.59%)</title><rect x="60.7495%" y="325" width="0.5917%" height="15" fill="rgb(213,176,14)" fg:x="308" fg:w="3"/><text x="60.9995%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.59%)</title><rect x="60.7495%" y="309" width="0.5917%" height="15" fill="rgb(246,73,7)" fg:x="308" fg:w="3"/><text x="60.9995%" y="319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.59%)</title><rect x="60.7495%" y="293" width="0.5917%" height="15" fill="rgb(245,64,36)" fg:x="308" fg:w="3"/><text x="60.9995%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.59%)</title><rect x="60.7495%" y="277" width="0.5917%" height="15" fill="rgb(245,80,10)" fg:x="308" fg:w="3"/><text x="60.9995%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.39%)</title><rect x="60.9467%" y="261" width="0.3945%" height="15" fill="rgb(232,107,50)" fg:x="309" fg:w="2"/><text x="61.1967%" y="271.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.20%)</title><rect x="61.1440%" y="245" width="0.1972%" height="15" fill="rgb(253,3,0)" fg:x="310" fg:w="1"/><text x="61.3940%" y="255.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.79%)</title><rect x="63.3136%" y="261" width="0.7890%" height="15" fill="rgb(212,99,53)" fg:x="321" fg:w="4"/><text x="63.5636%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (16 samples, 3.16%)</title><rect x="61.9329%" y="277" width="3.1558%" height="15" fill="rgb(249,111,54)" fg:x="314" fg:w="16"/><text x="62.1829%" y="287.50">&lt;co..</text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (5 samples, 0.99%)</title><rect x="64.1026%" y="261" width="0.9862%" height="15" fill="rgb(249,55,30)" fg:x="325" fg:w="5"/><text x="64.3526%" y="271.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.20%)</title><rect x="65.0888%" y="277" width="0.1972%" height="15" fill="rgb(237,47,42)" fg:x="330" fg:w="1"/><text x="65.3388%" y="287.50"></text></g><g><title>hashbrown::map::make_hash (25 samples, 4.93%)</title><rect x="60.5523%" y="437" width="4.9310%" height="15" fill="rgb(211,20,18)" fg:x="307" fg:w="25"/><text x="60.8023%" y="447.50">hashbr..</text></g><g><title>core::hash::BuildHasher::hash_one (25 samples, 4.93%)</title><rect x="60.5523%" y="421" width="4.9310%" height="15" fill="rgb(231,203,46)" fg:x="307" fg:w="25"/><text x="60.8023%" y="431.50">core::..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (24 samples, 4.73%)</title><rect x="60.7495%" y="405" width="4.7337%" height="15" fill="rgb(237,142,3)" fg:x="308" fg:w="24"/><text x="60.9995%" y="415.50">core::..</text></g><g><title>&lt;meet_middle::enumerate::Bv&lt;_&gt; as core::hash::Hash&gt;::hash (24 samples, 4.73%)</title><rect x="60.7495%" y="389" width="4.7337%" height="15" fill="rgb(241,107,1)" fg:x="308" fg:w="24"/><text x="60.9995%" y="399.50">&lt;meet_..</text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (24 samples, 4.73%)</title><rect x="60.7495%" y="373" width="4.7337%" height="15" fill="rgb(229,83,13)" fg:x="308" fg:w="24"/><text x="60.9995%" y="383.50">core::..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (24 samples, 4.73%)</title><rect x="60.7495%" y="357" width="4.7337%" height="15" fill="rgb(241,91,40)" fg:x="308" fg:w="24"/><text x="60.9995%" y="367.50">core::..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash_slice (21 samples, 4.14%)</title><rect x="61.3412%" y="341" width="4.1420%" height="15" fill="rgb(225,3,45)" fg:x="311" fg:w="21"/><text x="61.5912%" y="351.50">core:..</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (21 samples, 4.14%)</title><rect x="61.3412%" y="325" width="4.1420%" height="15" fill="rgb(244,223,14)" fg:x="311" fg:w="21"/><text x="61.5912%" y="335.50">&lt;std:..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (21 samples, 4.14%)</title><rect x="61.3412%" y="309" width="4.1420%" height="15" fill="rgb(224,124,37)" fg:x="311" fg:w="21"/><text x="61.5912%" y="319.50">&lt;core..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (21 samples, 4.14%)</title><rect x="61.3412%" y="293" width="4.1420%" height="15" fill="rgb(251,171,30)" fg:x="311" fg:w="21"/><text x="61.5912%" y="303.50">&lt;core..</text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.20%)</title><rect x="65.2860%" y="277" width="0.1972%" height="15" fill="rgb(236,46,54)" fg:x="331" fg:w="1"/><text x="65.5360%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (25 samples, 4.93%)</title><rect x="65.6805%" y="405" width="4.9310%" height="15" fill="rgb(245,213,5)" fg:x="333" fg:w="25"/><text x="65.9305%" y="415.50">hashbr..</text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (25 samples, 4.93%)</title><rect x="65.6805%" y="389" width="4.9310%" height="15" fill="rgb(230,144,27)" fg:x="333" fg:w="25"/><text x="65.9305%" y="399.50">hashbr..</text></g><g><title>&lt;meet_middle::enumerate::Bv&lt;_&gt; as core::cmp::PartialEq&gt;::eq (25 samples, 4.93%)</title><rect x="65.6805%" y="373" width="4.9310%" height="15" fill="rgb(220,86,6)" fg:x="333" fg:w="25"/><text x="65.9305%" y="383.50">&lt;meet_..</text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (25 samples, 4.93%)</title><rect x="65.6805%" y="357" width="4.9310%" height="15" fill="rgb(240,20,13)" fg:x="333" fg:w="25"/><text x="65.9305%" y="367.50">core::..</text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (25 samples, 4.93%)</title><rect x="65.6805%" y="341" width="4.9310%" height="15" fill="rgb(217,89,34)" fg:x="333" fg:w="25"/><text x="65.9305%" y="351.50">&lt;T as ..</text></g><g><title>__memcmp_avx2_movbe (25 samples, 4.93%)</title><rect x="65.6805%" y="325" width="4.9310%" height="15" fill="rgb(229,13,5)" fg:x="333" fg:w="25"/><text x="65.9305%" y="335.50">__memc..</text></g><g><title>hashbrown::raw::h2 (2 samples, 0.39%)</title><rect x="70.6114%" y="405" width="0.3945%" height="15" fill="rgb(244,67,35)" fg:x="358" fg:w="2"/><text x="70.8614%" y="415.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (74 samples, 14.60%)</title><rect x="58.9744%" y="453" width="14.5957%" height="15" fill="rgb(221,40,2)" fg:x="299" fg:w="74"/><text x="59.2244%" y="463.50">hashbrown::rustc_entry..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (41 samples, 8.09%)</title><rect x="65.4832%" y="437" width="8.0868%" height="15" fill="rgb(237,157,21)" fg:x="332" fg:w="41"/><text x="65.7332%" y="447.50">hashbrown::..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (40 samples, 7.89%)</title><rect x="65.6805%" y="421" width="7.8895%" height="15" fill="rgb(222,94,11)" fg:x="333" fg:w="40"/><text x="65.9305%" y="431.50">hashbrown::..</text></g><g><title>hashbrown::raw::sse2::Group::load (13 samples, 2.56%)</title><rect x="71.0059%" y="405" width="2.5641%" height="15" fill="rgb(249,113,6)" fg:x="360" fg:w="13"/><text x="71.2559%" y="415.50">ha..</text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (13 samples, 2.56%)</title><rect x="71.0059%" y="389" width="2.5641%" height="15" fill="rgb(238,137,36)" fg:x="360" fg:w="13"/><text x="71.2559%" y="399.50">co..</text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 2.56%)</title><rect x="71.0059%" y="373" width="2.5641%" height="15" fill="rgb(210,102,26)" fg:x="360" fg:w="13"/><text x="71.2559%" y="383.50">co..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (78 samples, 15.38%)</title><rect x="58.7771%" y="469" width="15.3846%" height="15" fill="rgb(218,30,30)" fg:x="298" fg:w="78"/><text x="59.0271%" y="479.50">std::collections::hash::..</text></g><g><title>std::collections::hash::map::map_entry (3 samples, 0.59%)</title><rect x="73.5700%" y="453" width="0.5917%" height="15" fill="rgb(214,67,26)" fg:x="373" fg:w="3"/><text x="73.8200%" y="463.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (42 samples, 8.28%)</title><rect x="74.1617%" y="421" width="8.2840%" height="15" fill="rgb(251,9,53)" fg:x="376" fg:w="42"/><text x="74.4117%" y="431.50">hashbrown::r..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (42 samples, 8.28%)</title><rect x="74.1617%" y="405" width="8.2840%" height="15" fill="rgb(228,204,25)" fg:x="376" fg:w="42"/><text x="74.4117%" y="415.50">core::ptr::m..</text></g><g><title>core::ptr::write (42 samples, 8.28%)</title><rect x="74.1617%" y="389" width="8.2840%" height="15" fill="rgb(207,153,8)" fg:x="376" fg:w="42"/><text x="74.4117%" y="399.50">core::ptr::w..</text></g><g><title>meet_middle::enumerate::algo::Algo&lt;_&gt;::run_until (354 samples, 69.82%)</title><rect x="12.8205%" y="501" width="69.8225%" height="15" fill="rgb(242,9,16)" fg:x="65" fg:w="354"/><text x="13.0705%" y="511.50">meet_middle::enumerate::algo::Algo&lt;_&gt;::run_until</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::try_insert (121 samples, 23.87%)</title><rect x="58.7771%" y="485" width="23.8659%" height="15" fill="rgb(217,211,10)" fg:x="298" fg:w="121"/><text x="59.0271%" y="495.50">std::collections::hash::map::HashMap&lt;K..</text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (43 samples, 8.48%)</title><rect x="74.1617%" y="469" width="8.4813%" height="15" fill="rgb(219,228,52)" fg:x="376" fg:w="43"/><text x="74.4117%" y="479.50">std::collect..</text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (43 samples, 8.48%)</title><rect x="74.1617%" y="453" width="8.4813%" height="15" fill="rgb(231,92,29)" fg:x="376" fg:w="43"/><text x="74.4117%" y="463.50">hashbrown::r..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (43 samples, 8.48%)</title><rect x="74.1617%" y="437" width="8.4813%" height="15" fill="rgb(232,8,23)" fg:x="376" fg:w="43"/><text x="74.4117%" y="447.50">hashbrown::r..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (1 samples, 0.20%)</title><rect x="82.4458%" y="421" width="0.1972%" height="15" fill="rgb(216,211,34)" fg:x="418" fg:w="1"/><text x="82.6958%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.20%)</title><rect x="82.4458%" y="405" width="0.1972%" height="15" fill="rgb(236,151,0)" fg:x="418" fg:w="1"/><text x="82.6958%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (1 samples, 0.20%)</title><rect x="82.4458%" y="389" width="0.1972%" height="15" fill="rgb(209,168,3)" fg:x="418" fg:w="1"/><text x="82.6958%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_bucket_full (1 samples, 0.20%)</title><rect x="82.4458%" y="373" width="0.1972%" height="15" fill="rgb(208,129,28)" fg:x="418" fg:w="1"/><text x="82.6958%" y="383.50"></text></g><g><title>_start (360 samples, 71.01%)</title><rect x="11.8343%" y="837" width="71.0059%" height="15" fill="rgb(229,78,22)" fg:x="60" fg:w="360"/><text x="12.0843%" y="847.50">_start</text></g><g><title>__libc_start_main (360 samples, 71.01%)</title><rect x="11.8343%" y="821" width="71.0059%" height="15" fill="rgb(228,187,13)" fg:x="60" fg:w="360"/><text x="12.0843%" y="831.50">__libc_start_main</text></g><g><title>main (360 samples, 71.01%)</title><rect x="11.8343%" y="805" width="71.0059%" height="15" fill="rgb(240,119,24)" fg:x="60" fg:w="360"/><text x="12.0843%" y="815.50">main</text></g><g><title>std::rt::lang_start_internal (360 samples, 71.01%)</title><rect x="11.8343%" y="789" width="71.0059%" height="15" fill="rgb(209,194,42)" fg:x="60" fg:w="360"/><text x="12.0843%" y="799.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (360 samples, 71.01%)</title><rect x="11.8343%" y="773" width="71.0059%" height="15" fill="rgb(247,200,46)" fg:x="60" fg:w="360"/><text x="12.0843%" y="783.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (360 samples, 71.01%)</title><rect x="11.8343%" y="757" width="71.0059%" height="15" fill="rgb(218,76,16)" fg:x="60" fg:w="360"/><text x="12.0843%" y="767.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (360 samples, 71.01%)</title><rect x="11.8343%" y="741" width="71.0059%" height="15" fill="rgb(225,21,48)" fg:x="60" fg:w="360"/><text x="12.0843%" y="751.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (360 samples, 71.01%)</title><rect x="11.8343%" y="725" width="71.0059%" height="15" fill="rgb(239,223,50)" fg:x="60" fg:w="360"/><text x="12.0843%" y="735.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (360 samples, 71.01%)</title><rect x="11.8343%" y="709" width="71.0059%" height="15" fill="rgb(244,45,21)" fg:x="60" fg:w="360"/><text x="12.0843%" y="719.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (360 samples, 71.01%)</title><rect x="11.8343%" y="693" width="71.0059%" height="15" fill="rgb(232,33,43)" fg:x="60" fg:w="360"/><text x="12.0843%" y="703.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (360 samples, 71.01%)</title><rect x="11.8343%" y="677" width="71.0059%" height="15" fill="rgb(209,8,3)" fg:x="60" fg:w="360"/><text x="12.0843%" y="687.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (360 samples, 71.01%)</title><rect x="11.8343%" y="661" width="71.0059%" height="15" fill="rgb(214,25,53)" fg:x="60" fg:w="360"/><text x="12.0843%" y="671.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (360 samples, 71.01%)</title><rect x="11.8343%" y="645" width="71.0059%" height="15" fill="rgb(254,186,54)" fg:x="60" fg:w="360"/><text x="12.0843%" y="655.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (360 samples, 71.01%)</title><rect x="11.8343%" y="629" width="71.0059%" height="15" fill="rgb(208,174,49)" fg:x="60" fg:w="360"/><text x="12.0843%" y="639.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (360 samples, 71.01%)</title><rect x="11.8343%" y="613" width="71.0059%" height="15" fill="rgb(233,191,51)" fg:x="60" fg:w="360"/><text x="12.0843%" y="623.50">core::ops::function::FnOnce::call_once</text></g><g><title>meet_middle::main (360 samples, 71.01%)</title><rect x="11.8343%" y="597" width="71.0059%" height="15" fill="rgb(222,134,10)" fg:x="60" fg:w="360"/><text x="12.0843%" y="607.50">meet_middle::main</text></g><g><title>meet_middle::main_inner (360 samples, 71.01%)</title><rect x="11.8343%" y="581" width="71.0059%" height="15" fill="rgb(230,226,20)" fg:x="60" fg:w="360"/><text x="12.0843%" y="591.50">meet_middle::main_inner</text></g><g><title>meet_middle::search::search::SearchConfig::cegis_loop (359 samples, 70.81%)</title><rect x="12.0316%" y="565" width="70.8087%" height="15" fill="rgb(251,111,25)" fg:x="61" fg:w="359"/><text x="12.2816%" y="575.50">meet_middle::search::search::SearchConfig::cegis_loop</text></g><g><title>meet_middle::search::search::SearchConfig::search (359 samples, 70.81%)</title><rect x="12.0316%" y="549" width="70.8087%" height="15" fill="rgb(224,40,46)" fg:x="61" fg:w="359"/><text x="12.2816%" y="559.50">meet_middle::search::search::SearchConfig::search</text></g><g><title>meet_middle::search::sample::SampleConfig::search (359 samples, 70.81%)</title><rect x="12.0316%" y="533" width="70.8087%" height="15" fill="rgb(236,108,47)" fg:x="61" fg:w="359"/><text x="12.2816%" y="543.50">meet_middle::search::sample::SampleConfig::search</text></g><g><title>meet_middle::search::sample::SampleConfig::search_inner (359 samples, 70.81%)</title><rect x="12.0316%" y="517" width="70.8087%" height="15" fill="rgb(234,93,0)" fg:x="61" fg:w="359"/><text x="12.2816%" y="527.50">meet_middle::search::sample::SampleConfig::search_inner</text></g><g><title>meet_middle::enumerate::expr::Expr::for_each_subexpr (1 samples, 0.20%)</title><rect x="82.6430%" y="501" width="0.1972%" height="15" fill="rgb(224,213,32)" fg:x="419" fg:w="1"/><text x="82.8930%" y="511.50"></text></g><g><title>core::array::drain::drain_array_with (3 samples, 0.59%)</title><rect x="82.8402%" y="837" width="0.5917%" height="15" fill="rgb(251,11,48)" fg:x="420" fg:w="3"/><text x="83.0902%" y="847.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map::{{closure}} (2 samples, 0.39%)</title><rect x="83.0375%" y="821" width="0.3945%" height="15" fill="rgb(236,173,5)" fg:x="421" fg:w="2"/><text x="83.2875%" y="831.50"></text></g><g><title>core::array::try_from_trusted_iterator (2 samples, 0.39%)</title><rect x="83.0375%" y="805" width="0.3945%" height="15" fill="rgb(230,95,12)" fg:x="421" fg:w="2"/><text x="83.2875%" y="815.50"></text></g><g><title>core::array::try_from_fn (2 samples, 0.39%)</title><rect x="83.0375%" y="789" width="0.3945%" height="15" fill="rgb(232,209,1)" fg:x="421" fg:w="2"/><text x="83.2875%" y="799.50"></text></g><g><title>core::array::try_from_fn_erased (2 samples, 0.39%)</title><rect x="83.0375%" y="773" width="0.3945%" height="15" fill="rgb(232,6,1)" fg:x="421" fg:w="2"/><text x="83.2875%" y="783.50"></text></g><g><title>core::array::try_from_trusted_iterator::next::{{closure}} (2 samples, 0.39%)</title><rect x="83.0375%" y="757" width="0.3945%" height="15" fill="rgb(210,224,50)" fg:x="421" fg:w="2"/><text x="83.2875%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (2 samples, 0.39%)</title><rect x="83.0375%" y="741" width="0.3945%" height="15" fill="rgb(228,127,35)" fg:x="421" fg:w="2"/><text x="83.2875%" y="751.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_1::{{closure}} (2 samples, 0.39%)</title><rect x="83.0375%" y="725" width="0.3945%" height="15" fill="rgb(245,102,45)" fg:x="421" fg:w="2"/><text x="83.2875%" y="735.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed::{{closure}} (2 samples, 0.39%)</title><rect x="83.0375%" y="709" width="0.3945%" height="15" fill="rgb(214,1,49)" fg:x="421" fg:w="2"/><text x="83.2875%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.39%)</title><rect x="83.0375%" y="693" width="0.3945%" height="15" fill="rgb(226,163,40)" fg:x="421" fg:w="2"/><text x="83.2875%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.39%)</title><rect x="83.0375%" y="677" width="0.3945%" height="15" fill="rgb(239,212,28)" fg:x="421" fg:w="2"/><text x="83.2875%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (2 samples, 0.39%)</title><rect x="83.0375%" y="661" width="0.3945%" height="15" fill="rgb(220,20,13)" fg:x="421" fg:w="2"/><text x="83.2875%" y="671.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.39%)</title><rect x="83.0375%" y="645" width="0.3945%" height="15" fill="rgb(210,164,35)" fg:x="421" fg:w="2"/><text x="83.2875%" y="655.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.39%)</title><rect x="83.0375%" y="629" width="0.3945%" height="15" fill="rgb(248,109,41)" fg:x="421" fg:w="2"/><text x="83.2875%" y="639.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (2 samples, 0.39%)</title><rect x="83.0375%" y="613" width="0.3945%" height="15" fill="rgb(238,23,50)" fg:x="421" fg:w="2"/><text x="83.2875%" y="623.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (2 samples, 0.39%)</title><rect x="83.0375%" y="597" width="0.3945%" height="15" fill="rgb(211,48,49)" fg:x="421" fg:w="2"/><text x="83.2875%" y="607.50"></text></g><g><title>core::ops::index_range::IndexRange::len (2 samples, 0.39%)</title><rect x="83.0375%" y="581" width="0.3945%" height="15" fill="rgb(223,36,21)" fg:x="421" fg:w="2"/><text x="83.2875%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.20%)</title><rect x="83.4320%" y="837" width="0.1972%" height="15" fill="rgb(207,123,46)" fg:x="423" fg:w="1"/><text x="83.6820%" y="847.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (3 samples, 0.59%)</title><rect x="83.6292%" y="837" width="0.5917%" height="15" fill="rgb(240,218,32)" fg:x="424" fg:w="3"/><text x="83.8792%" y="847.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.20%)</title><rect x="84.0237%" y="821" width="0.1972%" height="15" fill="rgb(252,5,43)" fg:x="426" fg:w="1"/><text x="84.2737%" y="831.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.20%)</title><rect x="84.2209%" y="837" width="0.1972%" height="15" fill="rgb(252,84,19)" fg:x="427" fg:w="1"/><text x="84.4709%" y="847.50"></text></g><g><title>meet_middle::enumerate::op::bv::and (3 samples, 0.59%)</title><rect x="84.6154%" y="757" width="0.5917%" height="15" fill="rgb(243,152,39)" fg:x="429" fg:w="3"/><text x="84.8654%" y="767.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::collect (3 samples, 0.59%)</title><rect x="84.6154%" y="741" width="0.5917%" height="15" fill="rgb(234,160,15)" fg:x="429" fg:w="3"/><text x="84.8654%" y="751.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed (3 samples, 0.59%)</title><rect x="84.6154%" y="725" width="0.5917%" height="15" fill="rgb(237,34,20)" fg:x="429" fg:w="3"/><text x="84.8654%" y="735.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::map (2 samples, 0.39%)</title><rect x="84.8126%" y="709" width="0.3945%" height="15" fill="rgb(229,97,13)" fg:x="430" fg:w="2"/><text x="85.0626%" y="719.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map (2 samples, 0.39%)</title><rect x="84.8126%" y="693" width="0.3945%" height="15" fill="rgb(234,71,50)" fg:x="430" fg:w="2"/><text x="85.0626%" y="703.50"></text></g><g><title>core::array::drain::drain_array_with (1 samples, 0.20%)</title><rect x="85.0099%" y="677" width="0.1972%" height="15" fill="rgb(253,155,4)" fg:x="431" fg:w="1"/><text x="85.2599%" y="687.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map::{{closure}} (1 samples, 0.20%)</title><rect x="85.0099%" y="661" width="0.1972%" height="15" fill="rgb(222,185,37)" fg:x="431" fg:w="1"/><text x="85.2599%" y="671.50"></text></g><g><title>core::array::try_from_trusted_iterator (1 samples, 0.20%)</title><rect x="85.0099%" y="645" width="0.1972%" height="15" fill="rgb(251,177,13)" fg:x="431" fg:w="1"/><text x="85.2599%" y="655.50"></text></g><g><title>core::array::try_from_fn (1 samples, 0.20%)</title><rect x="85.0099%" y="629" width="0.1972%" height="15" fill="rgb(250,179,40)" fg:x="431" fg:w="1"/><text x="85.2599%" y="639.50"></text></g><g><title>meet_middle::enumerate::op::bv::mul (1 samples, 0.20%)</title><rect x="85.2071%" y="757" width="0.1972%" height="15" fill="rgb(242,44,2)" fg:x="432" fg:w="1"/><text x="85.4571%" y="767.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::collect (1 samples, 0.20%)</title><rect x="85.2071%" y="741" width="0.1972%" height="15" fill="rgb(216,177,13)" fg:x="432" fg:w="1"/><text x="85.4571%" y="751.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed (1 samples, 0.20%)</title><rect x="85.2071%" y="725" width="0.1972%" height="15" fill="rgb(216,106,43)" fg:x="432" fg:w="1"/><text x="85.4571%" y="735.50"></text></g><g><title>meet_middle::enumerate::op::bv::or (1 samples, 0.20%)</title><rect x="85.4043%" y="757" width="0.1972%" height="15" fill="rgb(216,183,2)" fg:x="433" fg:w="1"/><text x="85.6543%" y="767.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::collect (1 samples, 0.20%)</title><rect x="85.4043%" y="741" width="0.1972%" height="15" fill="rgb(249,75,3)" fg:x="433" fg:w="1"/><text x="85.6543%" y="751.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed (1 samples, 0.20%)</title><rect x="85.4043%" y="725" width="0.1972%" height="15" fill="rgb(219,67,39)" fg:x="433" fg:w="1"/><text x="85.6543%" y="735.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::map (1 samples, 0.20%)</title><rect x="85.4043%" y="709" width="0.1972%" height="15" fill="rgb(253,228,2)" fg:x="433" fg:w="1"/><text x="85.6543%" y="719.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map (1 samples, 0.20%)</title><rect x="85.4043%" y="693" width="0.1972%" height="15" fill="rgb(235,138,27)" fg:x="433" fg:w="1"/><text x="85.6543%" y="703.50"></text></g><g><title>core::array::drain::drain_array_with (1 samples, 0.20%)</title><rect x="85.4043%" y="677" width="0.1972%" height="15" fill="rgb(236,97,51)" fg:x="433" fg:w="1"/><text x="85.6543%" y="687.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map::{{closure}} (1 samples, 0.20%)</title><rect x="85.4043%" y="661" width="0.1972%" height="15" fill="rgb(240,80,30)" fg:x="433" fg:w="1"/><text x="85.6543%" y="671.50"></text></g><g><title>core::array::try_from_trusted_iterator (1 samples, 0.20%)</title><rect x="85.4043%" y="645" width="0.1972%" height="15" fill="rgb(230,178,19)" fg:x="433" fg:w="1"/><text x="85.6543%" y="655.50"></text></g><g><title>core::array::try_from_fn (1 samples, 0.20%)</title><rect x="85.4043%" y="629" width="0.1972%" height="15" fill="rgb(210,190,27)" fg:x="433" fg:w="1"/><text x="85.6543%" y="639.50"></text></g><g><title>core::array::try_from_fn_erased (1 samples, 0.20%)</title><rect x="85.4043%" y="613" width="0.1972%" height="15" fill="rgb(222,107,31)" fg:x="433" fg:w="1"/><text x="85.6543%" y="623.50"></text></g><g><title>core::array::try_from_trusted_iterator::next::{{closure}} (1 samples, 0.20%)</title><rect x="85.4043%" y="597" width="0.1972%" height="15" fill="rgb(216,127,34)" fg:x="433" fg:w="1"/><text x="85.6543%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (1 samples, 0.20%)</title><rect x="85.4043%" y="581" width="0.1972%" height="15" fill="rgb(234,116,52)" fg:x="433" fg:w="1"/><text x="85.6543%" y="591.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_1::{{closure}} (1 samples, 0.20%)</title><rect x="85.4043%" y="565" width="0.1972%" height="15" fill="rgb(222,124,15)" fg:x="433" fg:w="1"/><text x="85.6543%" y="575.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed::{{closure}} (1 samples, 0.20%)</title><rect x="85.4043%" y="549" width="0.1972%" height="15" fill="rgb(231,179,28)" fg:x="433" fg:w="1"/><text x="85.6543%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="85.4043%" y="533" width="0.1972%" height="15" fill="rgb(226,93,45)" fg:x="433" fg:w="1"/><text x="85.6543%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="85.4043%" y="517" width="0.1972%" height="15" fill="rgb(215,8,51)" fg:x="433" fg:w="1"/><text x="85.6543%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.20%)</title><rect x="85.4043%" y="501" width="0.1972%" height="15" fill="rgb(223,106,5)" fg:x="433" fg:w="1"/><text x="85.6543%" y="511.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="85.4043%" y="485" width="0.1972%" height="15" fill="rgb(250,191,5)" fg:x="433" fg:w="1"/><text x="85.6543%" y="495.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="85.4043%" y="469" width="0.1972%" height="15" fill="rgb(242,132,44)" fg:x="433" fg:w="1"/><text x="85.6543%" y="479.50"></text></g><g><title>core::ops::index_range::IndexRange::next_unchecked (1 samples, 0.20%)</title><rect x="85.4043%" y="453" width="0.1972%" height="15" fill="rgb(251,152,29)" fg:x="433" fg:w="1"/><text x="85.6543%" y="463.50"></text></g><g><title>meet_middle::enumerate::op::bv::sub (1 samples, 0.20%)</title><rect x="85.6016%" y="757" width="0.1972%" height="15" fill="rgb(218,179,5)" fg:x="434" fg:w="1"/><text x="85.8516%" y="767.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::collect (1 samples, 0.20%)</title><rect x="85.6016%" y="741" width="0.1972%" height="15" fill="rgb(227,67,19)" fg:x="434" fg:w="1"/><text x="85.8516%" y="751.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed (1 samples, 0.20%)</title><rect x="85.6016%" y="725" width="0.1972%" height="15" fill="rgb(233,119,31)" fg:x="434" fg:w="1"/><text x="85.8516%" y="735.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::map (1 samples, 0.20%)</title><rect x="85.6016%" y="709" width="0.1972%" height="15" fill="rgb(241,120,22)" fg:x="434" fg:w="1"/><text x="85.8516%" y="719.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map (1 samples, 0.20%)</title><rect x="85.6016%" y="693" width="0.1972%" height="15" fill="rgb(224,102,30)" fg:x="434" fg:w="1"/><text x="85.8516%" y="703.50"></text></g><g><title>core::array::drain::drain_array_with (1 samples, 0.20%)</title><rect x="85.6016%" y="677" width="0.1972%" height="15" fill="rgb(210,164,37)" fg:x="434" fg:w="1"/><text x="85.8516%" y="687.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map::{{closure}} (1 samples, 0.20%)</title><rect x="85.6016%" y="661" width="0.1972%" height="15" fill="rgb(226,191,16)" fg:x="434" fg:w="1"/><text x="85.8516%" y="671.50"></text></g><g><title>core::array::try_from_trusted_iterator (1 samples, 0.20%)</title><rect x="85.6016%" y="645" width="0.1972%" height="15" fill="rgb(214,40,45)" fg:x="434" fg:w="1"/><text x="85.8516%" y="655.50"></text></g><g><title>core::array::try_from_fn (1 samples, 0.20%)</title><rect x="85.6016%" y="629" width="0.1972%" height="15" fill="rgb(244,29,26)" fg:x="434" fg:w="1"/><text x="85.8516%" y="639.50"></text></g><g><title>core::array::try_from_fn_erased (1 samples, 0.20%)</title><rect x="85.6016%" y="613" width="0.1972%" height="15" fill="rgb(216,16,5)" fg:x="434" fg:w="1"/><text x="85.8516%" y="623.50"></text></g><g><title>core::array::try_from_trusted_iterator::next::{{closure}} (1 samples, 0.20%)</title><rect x="85.6016%" y="597" width="0.1972%" height="15" fill="rgb(249,76,35)" fg:x="434" fg:w="1"/><text x="85.8516%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (1 samples, 0.20%)</title><rect x="85.6016%" y="581" width="0.1972%" height="15" fill="rgb(207,11,44)" fg:x="434" fg:w="1"/><text x="85.8516%" y="591.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_1::{{closure}} (1 samples, 0.20%)</title><rect x="85.6016%" y="565" width="0.1972%" height="15" fill="rgb(228,190,49)" fg:x="434" fg:w="1"/><text x="85.8516%" y="575.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed::{{closure}} (1 samples, 0.20%)</title><rect x="85.6016%" y="549" width="0.1972%" height="15" fill="rgb(214,173,12)" fg:x="434" fg:w="1"/><text x="85.8516%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="85.6016%" y="533" width="0.1972%" height="15" fill="rgb(218,26,35)" fg:x="434" fg:w="1"/><text x="85.8516%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="85.6016%" y="517" width="0.1972%" height="15" fill="rgb(220,200,19)" fg:x="434" fg:w="1"/><text x="85.8516%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.20%)</title><rect x="85.6016%" y="501" width="0.1972%" height="15" fill="rgb(239,95,49)" fg:x="434" fg:w="1"/><text x="85.8516%" y="511.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="85.6016%" y="485" width="0.1972%" height="15" fill="rgb(235,85,53)" fg:x="434" fg:w="1"/><text x="85.8516%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.20%)</title><rect x="85.6016%" y="469" width="0.1972%" height="15" fill="rgb(233,133,31)" fg:x="434" fg:w="1"/><text x="85.8516%" y="479.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (1 samples, 0.20%)</title><rect x="85.6016%" y="453" width="0.1972%" height="15" fill="rgb(218,25,20)" fg:x="434" fg:w="1"/><text x="85.8516%" y="463.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (1 samples, 0.20%)</title><rect x="85.6016%" y="437" width="0.1972%" height="15" fill="rgb(252,210,38)" fg:x="434" fg:w="1"/><text x="85.8516%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (1 samples, 0.20%)</title><rect x="85.6016%" y="421" width="0.1972%" height="15" fill="rgb(242,134,21)" fg:x="434" fg:w="1"/><text x="85.8516%" y="431.50"></text></g><g><title>core::array::drain::drain_array_with (1 samples, 0.20%)</title><rect x="85.6016%" y="405" width="0.1972%" height="15" fill="rgb(213,28,48)" fg:x="434" fg:w="1"/><text x="85.8516%" y="415.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.39%)</title><rect x="85.7988%" y="709" width="0.3945%" height="15" fill="rgb(250,196,2)" fg:x="435" fg:w="2"/><text x="86.0488%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.39%)</title><rect x="85.7988%" y="693" width="0.3945%" height="15" fill="rgb(227,5,17)" fg:x="435" fg:w="2"/><text x="86.0488%" y="703.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.39%)</title><rect x="85.7988%" y="677" width="0.3945%" height="15" fill="rgb(221,226,24)" fg:x="435" fg:w="2"/><text x="86.0488%" y="687.50"></text></g><g><title>&lt;meet_middle::enumerate::Bv&lt;_&gt; as core::hash::Hash&gt;::hash (2 samples, 0.39%)</title><rect x="85.7988%" y="661" width="0.3945%" height="15" fill="rgb(211,5,48)" fg:x="435" fg:w="2"/><text x="86.0488%" y="671.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (2 samples, 0.39%)</title><rect x="85.7988%" y="645" width="0.3945%" height="15" fill="rgb(219,150,6)" fg:x="435" fg:w="2"/><text x="86.0488%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (2 samples, 0.39%)</title><rect x="85.7988%" y="629" width="0.3945%" height="15" fill="rgb(251,46,16)" fg:x="435" fg:w="2"/><text x="86.0488%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash_slice (2 samples, 0.39%)</title><rect x="85.7988%" y="613" width="0.3945%" height="15" fill="rgb(220,204,40)" fg:x="435" fg:w="2"/><text x="86.0488%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.39%)</title><rect x="85.7988%" y="597" width="0.3945%" height="15" fill="rgb(211,85,2)" fg:x="435" fg:w="2"/><text x="86.0488%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.39%)</title><rect x="85.7988%" y="581" width="0.3945%" height="15" fill="rgb(229,17,7)" fg:x="435" fg:w="2"/><text x="86.0488%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.39%)</title><rect x="85.7988%" y="565" width="0.3945%" height="15" fill="rgb(239,72,28)" fg:x="435" fg:w="2"/><text x="86.0488%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.39%)</title><rect x="85.7988%" y="549" width="0.3945%" height="15" fill="rgb(230,47,54)" fg:x="435" fg:w="2"/><text x="86.0488%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.20%)</title><rect x="85.9961%" y="533" width="0.1972%" height="15" fill="rgb(214,50,8)" fg:x="436" fg:w="1"/><text x="86.2461%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2 samples, 0.39%)</title><rect x="86.1933%" y="677" width="0.3945%" height="15" fill="rgb(216,198,43)" fg:x="437" fg:w="2"/><text x="86.4433%" y="687.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (2 samples, 0.39%)</title><rect x="86.1933%" y="661" width="0.3945%" height="15" fill="rgb(234,20,35)" fg:x="437" fg:w="2"/><text x="86.4433%" y="671.50"></text></g><g><title>&lt;meet_middle::enumerate::Bv&lt;_&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.39%)</title><rect x="86.1933%" y="645" width="0.3945%" height="15" fill="rgb(254,45,19)" fg:x="437" fg:w="2"/><text x="86.4433%" y="655.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (2 samples, 0.39%)</title><rect x="86.1933%" y="629" width="0.3945%" height="15" fill="rgb(219,14,44)" fg:x="437" fg:w="2"/><text x="86.4433%" y="639.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (2 samples, 0.39%)</title><rect x="86.1933%" y="613" width="0.3945%" height="15" fill="rgb(217,220,26)" fg:x="437" fg:w="2"/><text x="86.4433%" y="623.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.39%)</title><rect x="86.1933%" y="597" width="0.3945%" height="15" fill="rgb(213,158,28)" fg:x="437" fg:w="2"/><text x="86.4433%" y="607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (5 samples, 0.99%)</title><rect x="85.7988%" y="741" width="0.9862%" height="15" fill="rgb(252,51,52)" fg:x="435" fg:w="5"/><text x="86.0488%" y="751.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (5 samples, 0.99%)</title><rect x="85.7988%" y="725" width="0.9862%" height="15" fill="rgb(246,89,16)" fg:x="435" fg:w="5"/><text x="86.0488%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.59%)</title><rect x="86.1933%" y="709" width="0.5917%" height="15" fill="rgb(216,158,49)" fg:x="437" fg:w="3"/><text x="86.4433%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (3 samples, 0.59%)</title><rect x="86.1933%" y="693" width="0.5917%" height="15" fill="rgb(236,107,19)" fg:x="437" fg:w="3"/><text x="86.4433%" y="703.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.20%)</title><rect x="86.5878%" y="677" width="0.1972%" height="15" fill="rgb(228,185,30)" fg:x="439" fg:w="1"/><text x="86.8378%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.20%)</title><rect x="86.5878%" y="661" width="0.1972%" height="15" fill="rgb(246,134,8)" fg:x="439" fg:w="1"/><text x="86.8378%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.20%)</title><rect x="86.5878%" y="645" width="0.1972%" height="15" fill="rgb(214,143,50)" fg:x="439" fg:w="1"/><text x="86.8378%" y="655.50"></text></g><g><title>meet_middle::enumerate::algo::Algo&lt;_&gt;::run_until::{{closure}} (13 samples, 2.56%)</title><rect x="84.4181%" y="773" width="2.5641%" height="15" fill="rgb(228,75,8)" fg:x="428" fg:w="13"/><text x="84.6681%" y="783.50">me..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::try_insert (6 samples, 1.18%)</title><rect x="85.7988%" y="757" width="1.1834%" height="15" fill="rgb(207,175,4)" fg:x="435" fg:w="6"/><text x="86.0488%" y="767.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (1 samples, 0.20%)</title><rect x="86.7850%" y="741" width="0.1972%" height="15" fill="rgb(205,108,24)" fg:x="440" fg:w="1"/><text x="87.0350%" y="751.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.20%)</title><rect x="86.7850%" y="725" width="0.1972%" height="15" fill="rgb(244,120,49)" fg:x="440" fg:w="1"/><text x="87.0350%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (1 samples, 0.20%)</title><rect x="86.7850%" y="709" width="0.1972%" height="15" fill="rgb(223,47,38)" fg:x="440" fg:w="1"/><text x="87.0350%" y="719.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1 samples, 0.20%)</title><rect x="86.7850%" y="693" width="0.1972%" height="15" fill="rgb(229,179,11)" fg:x="440" fg:w="1"/><text x="87.0350%" y="703.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.20%)</title><rect x="86.7850%" y="677" width="0.1972%" height="15" fill="rgb(231,122,1)" fg:x="440" fg:w="1"/><text x="87.0350%" y="687.50"></text></g><g><title>core::ptr::write (1 samples, 0.20%)</title><rect x="86.7850%" y="661" width="0.1972%" height="15" fill="rgb(245,119,9)" fg:x="440" fg:w="1"/><text x="87.0350%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.20%)</title><rect x="86.9822%" y="725" width="0.1972%" height="15" fill="rgb(241,163,25)" fg:x="441" fg:w="1"/><text x="87.2322%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="87.1795%" y="533" width="0.1972%" height="15" fill="rgb(217,214,3)" fg:x="442" fg:w="1"/><text x="87.4295%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.20%)</title><rect x="87.1795%" y="517" width="0.1972%" height="15" fill="rgb(240,86,28)" fg:x="442" fg:w="1"/><text x="87.4295%" y="527.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="87.1795%" y="501" width="0.1972%" height="15" fill="rgb(215,47,9)" fg:x="442" fg:w="1"/><text x="87.4295%" y="511.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="87.1795%" y="485" width="0.1972%" height="15" fill="rgb(252,25,45)" fg:x="442" fg:w="1"/><text x="87.4295%" y="495.50"></text></g><g><title>core::ops::index_range::IndexRange::next_unchecked (1 samples, 0.20%)</title><rect x="87.1795%" y="469" width="0.1972%" height="15" fill="rgb(251,164,9)" fg:x="442" fg:w="1"/><text x="87.4295%" y="479.50"></text></g><g><title>meet_middle::enumerate::op::bv::lshr (3 samples, 0.59%)</title><rect x="86.9822%" y="773" width="0.5917%" height="15" fill="rgb(233,194,0)" fg:x="441" fg:w="3"/><text x="87.2322%" y="783.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::collect (3 samples, 0.59%)</title><rect x="86.9822%" y="757" width="0.5917%" height="15" fill="rgb(249,111,24)" fg:x="441" fg:w="3"/><text x="87.2322%" y="767.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed (3 samples, 0.59%)</title><rect x="86.9822%" y="741" width="0.5917%" height="15" fill="rgb(250,223,3)" fg:x="441" fg:w="3"/><text x="87.2322%" y="751.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::map (2 samples, 0.39%)</title><rect x="87.1795%" y="725" width="0.3945%" height="15" fill="rgb(236,178,37)" fg:x="442" fg:w="2"/><text x="87.4295%" y="735.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map (2 samples, 0.39%)</title><rect x="87.1795%" y="709" width="0.3945%" height="15" fill="rgb(241,158,50)" fg:x="442" fg:w="2"/><text x="87.4295%" y="719.50"></text></g><g><title>core::array::drain::drain_array_with (2 samples, 0.39%)</title><rect x="87.1795%" y="693" width="0.3945%" height="15" fill="rgb(213,121,41)" fg:x="442" fg:w="2"/><text x="87.4295%" y="703.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map::{{closure}} (2 samples, 0.39%)</title><rect x="87.1795%" y="677" width="0.3945%" height="15" fill="rgb(240,92,3)" fg:x="442" fg:w="2"/><text x="87.4295%" y="687.50"></text></g><g><title>core::array::try_from_trusted_iterator (2 samples, 0.39%)</title><rect x="87.1795%" y="661" width="0.3945%" height="15" fill="rgb(205,123,3)" fg:x="442" fg:w="2"/><text x="87.4295%" y="671.50"></text></g><g><title>core::array::try_from_fn (2 samples, 0.39%)</title><rect x="87.1795%" y="645" width="0.3945%" height="15" fill="rgb(205,97,47)" fg:x="442" fg:w="2"/><text x="87.4295%" y="655.50"></text></g><g><title>core::array::try_from_fn_erased (2 samples, 0.39%)</title><rect x="87.1795%" y="629" width="0.3945%" height="15" fill="rgb(247,152,14)" fg:x="442" fg:w="2"/><text x="87.4295%" y="639.50"></text></g><g><title>core::array::try_from_trusted_iterator::next::{{closure}} (2 samples, 0.39%)</title><rect x="87.1795%" y="613" width="0.3945%" height="15" fill="rgb(248,195,53)" fg:x="442" fg:w="2"/><text x="87.4295%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (2 samples, 0.39%)</title><rect x="87.1795%" y="597" width="0.3945%" height="15" fill="rgb(226,201,16)" fg:x="442" fg:w="2"/><text x="87.4295%" y="607.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_1::{{closure}} (2 samples, 0.39%)</title><rect x="87.1795%" y="581" width="0.3945%" height="15" fill="rgb(205,98,0)" fg:x="442" fg:w="2"/><text x="87.4295%" y="591.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed::{{closure}} (2 samples, 0.39%)</title><rect x="87.1795%" y="565" width="0.3945%" height="15" fill="rgb(214,191,48)" fg:x="442" fg:w="2"/><text x="87.4295%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.39%)</title><rect x="87.1795%" y="549" width="0.3945%" height="15" fill="rgb(237,112,39)" fg:x="442" fg:w="2"/><text x="87.4295%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.20%)</title><rect x="87.3767%" y="533" width="0.1972%" height="15" fill="rgb(247,203,27)" fg:x="443" fg:w="1"/><text x="87.6267%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.20%)</title><rect x="87.3767%" y="517" width="0.1972%" height="15" fill="rgb(235,124,28)" fg:x="443" fg:w="1"/><text x="87.6267%" y="527.50"></text></g><g><title>meet_middle::enumerate::op::bv::lshr::{{closure}} (1 samples, 0.20%)</title><rect x="87.3767%" y="501" width="0.1972%" height="15" fill="rgb(208,207,46)" fg:x="443" fg:w="1"/><text x="87.6267%" y="511.50"></text></g><g><title>meet_middle::enumerate::op::lshr (1 samples, 0.20%)</title><rect x="87.3767%" y="485" width="0.1972%" height="15" fill="rgb(234,176,4)" fg:x="443" fg:w="1"/><text x="87.6267%" y="495.50"></text></g><g><title>meet_middle::enumerate::algo::Algo&lt;_&gt;::run_until (17 samples, 3.35%)</title><rect x="84.4181%" y="837" width="3.3531%" height="15" fill="rgb(230,133,28)" fg:x="428" fg:w="17"/><text x="84.6681%" y="847.50">mee..</text></g><g><title>meet_middle::enumerate::expr::Expr::for_each_subexpr (17 samples, 3.35%)</title><rect x="84.4181%" y="821" width="3.3531%" height="15" fill="rgb(211,137,40)" fg:x="428" fg:w="17"/><text x="84.6681%" y="831.50">mee..</text></g><g><title>meet_middle::enumerate::expr::Expr::for_each_subexpr (17 samples, 3.35%)</title><rect x="84.4181%" y="805" width="3.3531%" height="15" fill="rgb(254,35,13)" fg:x="428" fg:w="17"/><text x="84.6681%" y="815.50">mee..</text></g><g><title>meet_middle::enumerate::expr::Expr::for_each_subexpr (17 samples, 3.35%)</title><rect x="84.4181%" y="789" width="3.3531%" height="15" fill="rgb(225,49,51)" fg:x="428" fg:w="17"/><text x="84.6681%" y="799.50">mee..</text></g><g><title>meet_middle::enumerate::op::bv::udiv (1 samples, 0.20%)</title><rect x="87.5740%" y="773" width="0.1972%" height="15" fill="rgb(251,10,15)" fg:x="444" fg:w="1"/><text x="87.8240%" y="783.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::collect (1 samples, 0.20%)</title><rect x="87.5740%" y="757" width="0.1972%" height="15" fill="rgb(228,207,15)" fg:x="444" fg:w="1"/><text x="87.8240%" y="767.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed (1 samples, 0.20%)</title><rect x="87.5740%" y="741" width="0.1972%" height="15" fill="rgb(241,99,19)" fg:x="444" fg:w="1"/><text x="87.8240%" y="751.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::map (1 samples, 0.20%)</title><rect x="87.5740%" y="725" width="0.1972%" height="15" fill="rgb(207,104,49)" fg:x="444" fg:w="1"/><text x="87.8240%" y="735.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map (1 samples, 0.20%)</title><rect x="87.5740%" y="709" width="0.1972%" height="15" fill="rgb(234,99,18)" fg:x="444" fg:w="1"/><text x="87.8240%" y="719.50"></text></g><g><title>core::array::drain::drain_array_with (1 samples, 0.20%)</title><rect x="87.5740%" y="693" width="0.1972%" height="15" fill="rgb(213,191,49)" fg:x="444" fg:w="1"/><text x="87.8240%" y="703.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map::{{closure}} (1 samples, 0.20%)</title><rect x="87.5740%" y="677" width="0.1972%" height="15" fill="rgb(210,226,19)" fg:x="444" fg:w="1"/><text x="87.8240%" y="687.50"></text></g><g><title>core::array::try_from_trusted_iterator (1 samples, 0.20%)</title><rect x="87.5740%" y="661" width="0.1972%" height="15" fill="rgb(229,97,18)" fg:x="444" fg:w="1"/><text x="87.8240%" y="671.50"></text></g><g><title>core::array::try_from_fn (1 samples, 0.20%)</title><rect x="87.5740%" y="645" width="0.1972%" height="15" fill="rgb(211,167,15)" fg:x="444" fg:w="1"/><text x="87.8240%" y="655.50"></text></g><g><title>core::array::try_from_fn_erased (1 samples, 0.20%)</title><rect x="87.5740%" y="629" width="0.1972%" height="15" fill="rgb(210,169,34)" fg:x="444" fg:w="1"/><text x="87.8240%" y="639.50"></text></g><g><title>core::array::try_from_trusted_iterator::next::{{closure}} (1 samples, 0.20%)</title><rect x="87.5740%" y="613" width="0.1972%" height="15" fill="rgb(241,121,31)" fg:x="444" fg:w="1"/><text x="87.8240%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (1 samples, 0.20%)</title><rect x="87.5740%" y="597" width="0.1972%" height="15" fill="rgb(232,40,11)" fg:x="444" fg:w="1"/><text x="87.8240%" y="607.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_1::{{closure}} (1 samples, 0.20%)</title><rect x="87.5740%" y="581" width="0.1972%" height="15" fill="rgb(205,86,26)" fg:x="444" fg:w="1"/><text x="87.8240%" y="591.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed::{{closure}} (1 samples, 0.20%)</title><rect x="87.5740%" y="565" width="0.1972%" height="15" fill="rgb(231,126,28)" fg:x="444" fg:w="1"/><text x="87.8240%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="87.5740%" y="549" width="0.1972%" height="15" fill="rgb(219,221,18)" fg:x="444" fg:w="1"/><text x="87.8240%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.20%)</title><rect x="87.5740%" y="533" width="0.1972%" height="15" fill="rgb(211,40,0)" fg:x="444" fg:w="1"/><text x="87.8240%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.20%)</title><rect x="87.5740%" y="517" width="0.1972%" height="15" fill="rgb(239,85,43)" fg:x="444" fg:w="1"/><text x="87.8240%" y="527.50"></text></g><g><title>meet_middle::enumerate::op::bv::udiv::{{closure}} (1 samples, 0.20%)</title><rect x="87.5740%" y="501" width="0.1972%" height="15" fill="rgb(231,55,21)" fg:x="444" fg:w="1"/><text x="87.8240%" y="511.50"></text></g><g><title>meet_middle::enumerate::op::udiv (1 samples, 0.20%)</title><rect x="87.5740%" y="485" width="0.1972%" height="15" fill="rgb(225,184,43)" fg:x="444" fg:w="1"/><text x="87.8240%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::checked_div (1 samples, 0.20%)</title><rect x="87.5740%" y="469" width="0.1972%" height="15" fill="rgb(251,158,41)" fg:x="444" fg:w="1"/><text x="87.8240%" y="479.50"></text></g><g><title>meet_middle::enumerate::expr::Expr::eval (1 samples, 0.20%)</title><rect x="87.7712%" y="837" width="0.1972%" height="15" fill="rgb(234,159,37)" fg:x="445" fg:w="1"/><text x="88.0212%" y="847.50"></text></g><g><title>&lt;core::result::Result&lt;T,F&gt; as core::ops::try_trait::FromResidual&lt;core::result::Result&lt;core::convert::Infallible,E&gt;&gt;&gt;::from_residual (1 samples, 0.20%)</title><rect x="87.7712%" y="821" width="0.1972%" height="15" fill="rgb(216,204,22)" fg:x="445" fg:w="1"/><text x="88.0212%" y="831.50"></text></g><g><title>&lt;T as core::convert::From&lt;T&gt;&gt;::from (1 samples, 0.20%)</title><rect x="87.7712%" y="805" width="0.1972%" height="15" fill="rgb(214,17,3)" fg:x="445" fg:w="1"/><text x="88.0212%" y="815.50"></text></g><g><title>&lt;meet_middle::enumerate::Bv&lt;_&gt; as core::ops::bit::BitAnd&gt;::bitand (1 samples, 0.20%)</title><rect x="87.9684%" y="725" width="0.1972%" height="15" fill="rgb(212,111,17)" fg:x="446" fg:w="1"/><text x="88.2184%" y="735.50"></text></g><g><title>meet_middle::enumerate::op::bv::and (1 samples, 0.20%)</title><rect x="87.9684%" y="709" width="0.1972%" height="15" fill="rgb(221,157,24)" fg:x="446" fg:w="1"/><text x="88.2184%" y="719.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::collect (1 samples, 0.20%)</title><rect x="87.9684%" y="693" width="0.1972%" height="15" fill="rgb(252,16,13)" fg:x="446" fg:w="1"/><text x="88.2184%" y="703.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed (1 samples, 0.20%)</title><rect x="87.9684%" y="677" width="0.1972%" height="15" fill="rgb(221,62,2)" fg:x="446" fg:w="1"/><text x="88.2184%" y="687.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::map (1 samples, 0.20%)</title><rect x="87.9684%" y="661" width="0.1972%" height="15" fill="rgb(247,87,22)" fg:x="446" fg:w="1"/><text x="88.2184%" y="671.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map (1 samples, 0.20%)</title><rect x="87.9684%" y="645" width="0.1972%" height="15" fill="rgb(215,73,9)" fg:x="446" fg:w="1"/><text x="88.2184%" y="655.50"></text></g><g><title>core::array::drain::drain_array_with (1 samples, 0.20%)</title><rect x="87.9684%" y="629" width="0.1972%" height="15" fill="rgb(207,175,33)" fg:x="446" fg:w="1"/><text x="88.2184%" y="639.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map::{{closure}} (1 samples, 0.20%)</title><rect x="87.9684%" y="613" width="0.1972%" height="15" fill="rgb(243,129,54)" fg:x="446" fg:w="1"/><text x="88.2184%" y="623.50"></text></g><g><title>core::array::try_from_trusted_iterator (1 samples, 0.20%)</title><rect x="87.9684%" y="597" width="0.1972%" height="15" fill="rgb(227,119,45)" fg:x="446" fg:w="1"/><text x="88.2184%" y="607.50"></text></g><g><title>core::array::try_from_fn (1 samples, 0.20%)</title><rect x="87.9684%" y="581" width="0.1972%" height="15" fill="rgb(205,109,36)" fg:x="446" fg:w="1"/><text x="88.2184%" y="591.50"></text></g><g><title>core::array::try_from_fn_erased (1 samples, 0.20%)</title><rect x="87.9684%" y="565" width="0.1972%" height="15" fill="rgb(205,6,39)" fg:x="446" fg:w="1"/><text x="88.2184%" y="575.50"></text></g><g><title>core::array::try_from_trusted_iterator::next::{{closure}} (1 samples, 0.20%)</title><rect x="87.9684%" y="549" width="0.1972%" height="15" fill="rgb(221,32,16)" fg:x="446" fg:w="1"/><text x="88.2184%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (1 samples, 0.20%)</title><rect x="87.9684%" y="533" width="0.1972%" height="15" fill="rgb(228,144,50)" fg:x="446" fg:w="1"/><text x="88.2184%" y="543.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_1::{{closure}} (1 samples, 0.20%)</title><rect x="87.9684%" y="517" width="0.1972%" height="15" fill="rgb(229,201,53)" fg:x="446" fg:w="1"/><text x="88.2184%" y="527.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed::{{closure}} (1 samples, 0.20%)</title><rect x="87.9684%" y="501" width="0.1972%" height="15" fill="rgb(249,153,27)" fg:x="446" fg:w="1"/><text x="88.2184%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="87.9684%" y="485" width="0.1972%" height="15" fill="rgb(227,106,25)" fg:x="446" fg:w="1"/><text x="88.2184%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="87.9684%" y="469" width="0.1972%" height="15" fill="rgb(230,65,29)" fg:x="446" fg:w="1"/><text x="88.2184%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.20%)</title><rect x="87.9684%" y="453" width="0.1972%" height="15" fill="rgb(221,57,46)" fg:x="446" fg:w="1"/><text x="88.2184%" y="463.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="87.9684%" y="437" width="0.1972%" height="15" fill="rgb(229,161,17)" fg:x="446" fg:w="1"/><text x="88.2184%" y="447.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="87.9684%" y="421" width="0.1972%" height="15" fill="rgb(222,213,11)" fg:x="446" fg:w="1"/><text x="88.2184%" y="431.50"></text></g><g><title>core::ops::index_range::IndexRange::next_unchecked (1 samples, 0.20%)</title><rect x="87.9684%" y="405" width="0.1972%" height="15" fill="rgb(235,35,13)" fg:x="446" fg:w="1"/><text x="88.2184%" y="415.50"></text></g><g><title>&lt;meet_middle::enumerate::Bv&lt;_&gt; as core::ops::bit::BitXor&gt;::bitxor (1 samples, 0.20%)</title><rect x="88.1657%" y="725" width="0.1972%" height="15" fill="rgb(233,158,34)" fg:x="447" fg:w="1"/><text x="88.4157%" y="735.50"></text></g><g><title>meet_middle::enumerate::op::bv::xor (1 samples, 0.20%)</title><rect x="88.1657%" y="709" width="0.1972%" height="15" fill="rgb(215,151,48)" fg:x="447" fg:w="1"/><text x="88.4157%" y="719.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::collect (1 samples, 0.20%)</title><rect x="88.1657%" y="693" width="0.1972%" height="15" fill="rgb(229,84,14)" fg:x="447" fg:w="1"/><text x="88.4157%" y="703.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed (1 samples, 0.20%)</title><rect x="88.1657%" y="677" width="0.1972%" height="15" fill="rgb(229,68,14)" fg:x="447" fg:w="1"/><text x="88.4157%" y="687.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::map (1 samples, 0.20%)</title><rect x="88.1657%" y="661" width="0.1972%" height="15" fill="rgb(243,106,26)" fg:x="447" fg:w="1"/><text x="88.4157%" y="671.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map (1 samples, 0.20%)</title><rect x="88.1657%" y="645" width="0.1972%" height="15" fill="rgb(206,45,38)" fg:x="447" fg:w="1"/><text x="88.4157%" y="655.50"></text></g><g><title>core::array::drain::drain_array_with (1 samples, 0.20%)</title><rect x="88.1657%" y="629" width="0.1972%" height="15" fill="rgb(226,6,15)" fg:x="447" fg:w="1"/><text x="88.4157%" y="639.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map::{{closure}} (1 samples, 0.20%)</title><rect x="88.1657%" y="613" width="0.1972%" height="15" fill="rgb(232,22,54)" fg:x="447" fg:w="1"/><text x="88.4157%" y="623.50"></text></g><g><title>core::array::try_from_trusted_iterator (1 samples, 0.20%)</title><rect x="88.1657%" y="597" width="0.1972%" height="15" fill="rgb(229,222,32)" fg:x="447" fg:w="1"/><text x="88.4157%" y="607.50"></text></g><g><title>core::array::try_from_fn (1 samples, 0.20%)</title><rect x="88.1657%" y="581" width="0.1972%" height="15" fill="rgb(228,62,29)" fg:x="447" fg:w="1"/><text x="88.4157%" y="591.50"></text></g><g><title>core::array::try_from_fn_erased (1 samples, 0.20%)</title><rect x="88.1657%" y="565" width="0.1972%" height="15" fill="rgb(251,103,34)" fg:x="447" fg:w="1"/><text x="88.4157%" y="575.50"></text></g><g><title>core::array::try_from_trusted_iterator::next::{{closure}} (1 samples, 0.20%)</title><rect x="88.1657%" y="549" width="0.1972%" height="15" fill="rgb(233,12,30)" fg:x="447" fg:w="1"/><text x="88.4157%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (1 samples, 0.20%)</title><rect x="88.1657%" y="533" width="0.1972%" height="15" fill="rgb(238,52,0)" fg:x="447" fg:w="1"/><text x="88.4157%" y="543.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_1::{{closure}} (1 samples, 0.20%)</title><rect x="88.1657%" y="517" width="0.1972%" height="15" fill="rgb(223,98,5)" fg:x="447" fg:w="1"/><text x="88.4157%" y="527.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed::{{closure}} (1 samples, 0.20%)</title><rect x="88.1657%" y="501" width="0.1972%" height="15" fill="rgb(228,75,37)" fg:x="447" fg:w="1"/><text x="88.4157%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="88.1657%" y="485" width="0.1972%" height="15" fill="rgb(205,115,49)" fg:x="447" fg:w="1"/><text x="88.4157%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="88.1657%" y="469" width="0.1972%" height="15" fill="rgb(250,154,43)" fg:x="447" fg:w="1"/><text x="88.4157%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.20%)</title><rect x="88.1657%" y="453" width="0.1972%" height="15" fill="rgb(226,43,29)" fg:x="447" fg:w="1"/><text x="88.4157%" y="463.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="88.1657%" y="437" width="0.1972%" height="15" fill="rgb(249,228,39)" fg:x="447" fg:w="1"/><text x="88.4157%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.20%)</title><rect x="88.1657%" y="421" width="0.1972%" height="15" fill="rgb(216,79,43)" fg:x="447" fg:w="1"/><text x="88.4157%" y="431.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (1 samples, 0.20%)</title><rect x="88.1657%" y="405" width="0.1972%" height="15" fill="rgb(228,95,12)" fg:x="447" fg:w="1"/><text x="88.4157%" y="415.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (1 samples, 0.20%)</title><rect x="88.1657%" y="389" width="0.1972%" height="15" fill="rgb(249,221,15)" fg:x="447" fg:w="1"/><text x="88.4157%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (1 samples, 0.20%)</title><rect x="88.1657%" y="373" width="0.1972%" height="15" fill="rgb(233,34,13)" fg:x="447" fg:w="1"/><text x="88.4157%" y="383.50"></text></g><g><title>core::array::drain::drain_array_with (1 samples, 0.20%)</title><rect x="88.1657%" y="357" width="0.1972%" height="15" fill="rgb(214,103,39)" fg:x="447" fg:w="1"/><text x="88.4157%" y="367.50"></text></g><g><title>meet_middle::deductive::combine::CombineRules&lt;_&gt;::test (3 samples, 0.59%)</title><rect x="87.9684%" y="741" width="0.5917%" height="15" fill="rgb(251,126,39)" fg:x="446" fg:w="3"/><text x="88.2184%" y="751.50"></text></g><g><title>meet_middle::enumerate::Bv&lt;_&gt;::count (1 samples, 0.20%)</title><rect x="88.3629%" y="725" width="0.1972%" height="15" fill="rgb(214,216,36)" fg:x="448" fg:w="1"/><text x="88.6129%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.20%)</title><rect x="88.3629%" y="709" width="0.1972%" height="15" fill="rgb(220,221,8)" fg:x="448" fg:w="1"/><text x="88.6129%" y="719.50"></text></g><g><title>&lt;u32 as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.20%)</title><rect x="88.3629%" y="693" width="0.1972%" height="15" fill="rgb(240,216,3)" fg:x="448" fg:w="1"/><text x="88.6129%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.20%)</title><rect x="88.3629%" y="677" width="0.1972%" height="15" fill="rgb(232,218,17)" fg:x="448" fg:w="1"/><text x="88.6129%" y="687.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.20%)</title><rect x="88.3629%" y="661" width="0.1972%" height="15" fill="rgb(229,163,45)" fg:x="448" fg:w="1"/><text x="88.6129%" y="671.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.20%)</title><rect x="88.3629%" y="645" width="0.1972%" height="15" fill="rgb(231,110,42)" fg:x="448" fg:w="1"/><text x="88.6129%" y="655.50"></text></g><g><title>meet_middle::enumerate::Bv&lt;_&gt;::count::{{closure}} (1 samples, 0.20%)</title><rect x="88.3629%" y="629" width="0.1972%" height="15" fill="rgb(208,170,48)" fg:x="448" fg:w="1"/><text x="88.6129%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::count_ones (1 samples, 0.20%)</title><rect x="88.3629%" y="613" width="0.1972%" height="15" fill="rgb(239,116,25)" fg:x="448" fg:w="1"/><text x="88.6129%" y="623.50"></text></g><g><title>&lt;meet_middle::enumerate::Bv&lt;_&gt; as core::ops::arith::Sub&gt;::sub (1 samples, 0.20%)</title><rect x="88.5602%" y="725" width="0.1972%" height="15" fill="rgb(219,200,50)" fg:x="449" fg:w="1"/><text x="88.8102%" y="735.50"></text></g><g><title>meet_middle::enumerate::op::bv::sub (1 samples, 0.20%)</title><rect x="88.5602%" y="709" width="0.1972%" height="15" fill="rgb(245,200,0)" fg:x="449" fg:w="1"/><text x="88.8102%" y="719.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::collect (1 samples, 0.20%)</title><rect x="88.5602%" y="693" width="0.1972%" height="15" fill="rgb(245,119,33)" fg:x="449" fg:w="1"/><text x="88.8102%" y="703.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed (1 samples, 0.20%)</title><rect x="88.5602%" y="677" width="0.1972%" height="15" fill="rgb(231,125,12)" fg:x="449" fg:w="1"/><text x="88.8102%" y="687.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::map (1 samples, 0.20%)</title><rect x="88.5602%" y="661" width="0.1972%" height="15" fill="rgb(216,96,41)" fg:x="449" fg:w="1"/><text x="88.8102%" y="671.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map (1 samples, 0.20%)</title><rect x="88.5602%" y="645" width="0.1972%" height="15" fill="rgb(248,43,45)" fg:x="449" fg:w="1"/><text x="88.8102%" y="655.50"></text></g><g><title>core::array::drain::drain_array_with (1 samples, 0.20%)</title><rect x="88.5602%" y="629" width="0.1972%" height="15" fill="rgb(217,222,7)" fg:x="449" fg:w="1"/><text x="88.8102%" y="639.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map::{{closure}} (1 samples, 0.20%)</title><rect x="88.5602%" y="613" width="0.1972%" height="15" fill="rgb(233,28,6)" fg:x="449" fg:w="1"/><text x="88.8102%" y="623.50"></text></g><g><title>core::array::try_from_trusted_iterator (1 samples, 0.20%)</title><rect x="88.5602%" y="597" width="0.1972%" height="15" fill="rgb(231,218,15)" fg:x="449" fg:w="1"/><text x="88.8102%" y="607.50"></text></g><g><title>core::array::try_from_fn (1 samples, 0.20%)</title><rect x="88.5602%" y="581" width="0.1972%" height="15" fill="rgb(226,171,48)" fg:x="449" fg:w="1"/><text x="88.8102%" y="591.50"></text></g><g><title>core::array::try_from_fn_erased (1 samples, 0.20%)</title><rect x="88.5602%" y="565" width="0.1972%" height="15" fill="rgb(235,201,9)" fg:x="449" fg:w="1"/><text x="88.8102%" y="575.50"></text></g><g><title>core::array::try_from_trusted_iterator::next::{{closure}} (1 samples, 0.20%)</title><rect x="88.5602%" y="549" width="0.1972%" height="15" fill="rgb(217,80,15)" fg:x="449" fg:w="1"/><text x="88.8102%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (1 samples, 0.20%)</title><rect x="88.5602%" y="533" width="0.1972%" height="15" fill="rgb(219,152,8)" fg:x="449" fg:w="1"/><text x="88.8102%" y="543.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_1::{{closure}} (1 samples, 0.20%)</title><rect x="88.5602%" y="517" width="0.1972%" height="15" fill="rgb(243,107,38)" fg:x="449" fg:w="1"/><text x="88.8102%" y="527.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed::{{closure}} (1 samples, 0.20%)</title><rect x="88.5602%" y="501" width="0.1972%" height="15" fill="rgb(231,17,5)" fg:x="449" fg:w="1"/><text x="88.8102%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="88.5602%" y="485" width="0.1972%" height="15" fill="rgb(209,25,54)" fg:x="449" fg:w="1"/><text x="88.8102%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="88.5602%" y="469" width="0.1972%" height="15" fill="rgb(219,0,2)" fg:x="449" fg:w="1"/><text x="88.8102%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.20%)</title><rect x="88.5602%" y="453" width="0.1972%" height="15" fill="rgb(246,9,5)" fg:x="449" fg:w="1"/><text x="88.8102%" y="463.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="88.5602%" y="437" width="0.1972%" height="15" fill="rgb(226,159,4)" fg:x="449" fg:w="1"/><text x="88.8102%" y="447.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="88.5602%" y="421" width="0.1972%" height="15" fill="rgb(219,175,34)" fg:x="449" fg:w="1"/><text x="88.8102%" y="431.50"></text></g><g><title>core::ops::index_range::IndexRange::next_unchecked (1 samples, 0.20%)</title><rect x="88.5602%" y="405" width="0.1972%" height="15" fill="rgb(236,10,46)" fg:x="449" fg:w="1"/><text x="88.8102%" y="415.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="88.7574%" y="421" width="0.1972%" height="15" fill="rgb(240,211,16)" fg:x="450" fg:w="1"/><text x="89.0074%" y="431.50"></text></g><g><title>core::ops::index_range::IndexRange::next_unchecked (1 samples, 0.20%)</title><rect x="88.7574%" y="405" width="0.1972%" height="15" fill="rgb(205,3,43)" fg:x="450" fg:w="1"/><text x="89.0074%" y="415.50"></text></g><g><title>&lt;meet_middle::enumerate::Bv&lt;_&gt; as core::ops::bit::BitXor&gt;::bitxor (3 samples, 0.59%)</title><rect x="88.7574%" y="725" width="0.5917%" height="15" fill="rgb(245,7,22)" fg:x="450" fg:w="3"/><text x="89.0074%" y="735.50"></text></g><g><title>meet_middle::enumerate::op::bv::xor (3 samples, 0.59%)</title><rect x="88.7574%" y="709" width="0.5917%" height="15" fill="rgb(239,132,32)" fg:x="450" fg:w="3"/><text x="89.0074%" y="719.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::collect (3 samples, 0.59%)</title><rect x="88.7574%" y="693" width="0.5917%" height="15" fill="rgb(228,202,34)" fg:x="450" fg:w="3"/><text x="89.0074%" y="703.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed (3 samples, 0.59%)</title><rect x="88.7574%" y="677" width="0.5917%" height="15" fill="rgb(254,200,22)" fg:x="450" fg:w="3"/><text x="89.0074%" y="687.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::map (3 samples, 0.59%)</title><rect x="88.7574%" y="661" width="0.5917%" height="15" fill="rgb(219,10,39)" fg:x="450" fg:w="3"/><text x="89.0074%" y="671.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map (3 samples, 0.59%)</title><rect x="88.7574%" y="645" width="0.5917%" height="15" fill="rgb(226,210,39)" fg:x="450" fg:w="3"/><text x="89.0074%" y="655.50"></text></g><g><title>core::array::drain::drain_array_with (3 samples, 0.59%)</title><rect x="88.7574%" y="629" width="0.5917%" height="15" fill="rgb(208,219,16)" fg:x="450" fg:w="3"/><text x="89.0074%" y="639.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map::{{closure}} (3 samples, 0.59%)</title><rect x="88.7574%" y="613" width="0.5917%" height="15" fill="rgb(216,158,51)" fg:x="450" fg:w="3"/><text x="89.0074%" y="623.50"></text></g><g><title>core::array::try_from_trusted_iterator (3 samples, 0.59%)</title><rect x="88.7574%" y="597" width="0.5917%" height="15" fill="rgb(233,14,44)" fg:x="450" fg:w="3"/><text x="89.0074%" y="607.50"></text></g><g><title>core::array::try_from_fn (3 samples, 0.59%)</title><rect x="88.7574%" y="581" width="0.5917%" height="15" fill="rgb(237,97,39)" fg:x="450" fg:w="3"/><text x="89.0074%" y="591.50"></text></g><g><title>core::array::try_from_fn_erased (3 samples, 0.59%)</title><rect x="88.7574%" y="565" width="0.5917%" height="15" fill="rgb(218,198,43)" fg:x="450" fg:w="3"/><text x="89.0074%" y="575.50"></text></g><g><title>core::array::try_from_trusted_iterator::next::{{closure}} (3 samples, 0.59%)</title><rect x="88.7574%" y="549" width="0.5917%" height="15" fill="rgb(231,104,20)" fg:x="450" fg:w="3"/><text x="89.0074%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (3 samples, 0.59%)</title><rect x="88.7574%" y="533" width="0.5917%" height="15" fill="rgb(254,36,13)" fg:x="450" fg:w="3"/><text x="89.0074%" y="543.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_1::{{closure}} (3 samples, 0.59%)</title><rect x="88.7574%" y="517" width="0.5917%" height="15" fill="rgb(248,14,50)" fg:x="450" fg:w="3"/><text x="89.0074%" y="527.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed::{{closure}} (3 samples, 0.59%)</title><rect x="88.7574%" y="501" width="0.5917%" height="15" fill="rgb(217,107,29)" fg:x="450" fg:w="3"/><text x="89.0074%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.59%)</title><rect x="88.7574%" y="485" width="0.5917%" height="15" fill="rgb(251,169,33)" fg:x="450" fg:w="3"/><text x="89.0074%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.59%)</title><rect x="88.7574%" y="469" width="0.5917%" height="15" fill="rgb(217,108,32)" fg:x="450" fg:w="3"/><text x="89.0074%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (3 samples, 0.59%)</title><rect x="88.7574%" y="453" width="0.5917%" height="15" fill="rgb(219,66,42)" fg:x="450" fg:w="3"/><text x="89.0074%" y="463.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.59%)</title><rect x="88.7574%" y="437" width="0.5917%" height="15" fill="rgb(206,180,7)" fg:x="450" fg:w="3"/><text x="89.0074%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.39%)</title><rect x="88.9546%" y="421" width="0.3945%" height="15" fill="rgb(208,226,31)" fg:x="451" fg:w="2"/><text x="89.2046%" y="431.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (2 samples, 0.39%)</title><rect x="88.9546%" y="405" width="0.3945%" height="15" fill="rgb(218,26,49)" fg:x="451" fg:w="2"/><text x="89.2046%" y="415.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (2 samples, 0.39%)</title><rect x="88.9546%" y="389" width="0.3945%" height="15" fill="rgb(233,197,48)" fg:x="451" fg:w="2"/><text x="89.2046%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (2 samples, 0.39%)</title><rect x="88.9546%" y="373" width="0.3945%" height="15" fill="rgb(252,181,51)" fg:x="451" fg:w="2"/><text x="89.2046%" y="383.50"></text></g><g><title>core::array::drain::drain_array_with (2 samples, 0.39%)</title><rect x="88.9546%" y="357" width="0.3945%" height="15" fill="rgb(253,90,19)" fg:x="451" fg:w="2"/><text x="89.2046%" y="367.50"></text></g><g><title>meet_middle::deductive::reverse::ReverseRule::reverse (5 samples, 0.99%)</title><rect x="88.5602%" y="741" width="0.9862%" height="15" fill="rgb(215,171,30)" fg:x="449" fg:w="5"/><text x="88.8102%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.20%)</title><rect x="89.3491%" y="725" width="0.1972%" height="15" fill="rgb(214,222,9)" fg:x="453" fg:w="1"/><text x="89.5991%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.20%)</title><rect x="89.3491%" y="709" width="0.1972%" height="15" fill="rgb(223,3,22)" fg:x="453" fg:w="1"/><text x="89.5991%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.20%)</title><rect x="89.3491%" y="693" width="0.1972%" height="15" fill="rgb(225,196,46)" fg:x="453" fg:w="1"/><text x="89.5991%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.20%)</title><rect x="89.3491%" y="677" width="0.1972%" height="15" fill="rgb(209,110,37)" fg:x="453" fg:w="1"/><text x="89.5991%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.20%)</title><rect x="89.3491%" y="661" width="0.1972%" height="15" fill="rgb(249,89,12)" fg:x="453" fg:w="1"/><text x="89.5991%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.20%)</title><rect x="89.3491%" y="645" width="0.1972%" height="15" fill="rgb(226,27,33)" fg:x="453" fg:w="1"/><text x="89.5991%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.20%)</title><rect x="89.3491%" y="629" width="0.1972%" height="15" fill="rgb(213,82,22)" fg:x="453" fg:w="1"/><text x="89.5991%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.20%)</title><rect x="89.3491%" y="613" width="0.1972%" height="15" fill="rgb(248,140,0)" fg:x="453" fg:w="1"/><text x="89.5991%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.20%)</title><rect x="89.3491%" y="597" width="0.1972%" height="15" fill="rgb(228,106,3)" fg:x="453" fg:w="1"/><text x="89.5991%" y="607.50"></text></g><g><title>meet_middle::search::sample::SampleConfig::search_inner::{{closure}} (9 samples, 1.78%)</title><rect x="87.9684%" y="773" width="1.7751%" height="15" fill="rgb(209,23,37)" fg:x="446" fg:w="9"/><text x="88.2184%" y="783.50">m..</text></g><g><title>meet_middle::search::filter::FilterState&lt;_&gt;::filter (9 samples, 1.78%)</title><rect x="87.9684%" y="757" width="1.7751%" height="15" fill="rgb(241,93,50)" fg:x="446" fg:w="9"/><text x="88.2184%" y="767.50">m..</text></g><g><title>meet_middle::solutions::Solutions::add_solution (1 samples, 0.20%)</title><rect x="89.5464%" y="741" width="0.1972%" height="15" fill="rgb(253,46,43)" fg:x="454" fg:w="1"/><text x="89.7964%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;sdset::set::SetBuf&lt;usize&gt;&gt; (1 samples, 0.20%)</title><rect x="89.5464%" y="725" width="0.1972%" height="15" fill="rgb(226,206,43)" fg:x="454" fg:w="1"/><text x="89.7964%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (1 samples, 0.20%)</title><rect x="89.5464%" y="709" width="0.1972%" height="15" fill="rgb(217,54,7)" fg:x="454" fg:w="1"/><text x="89.7964%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (1 samples, 0.20%)</title><rect x="89.5464%" y="693" width="0.1972%" height="15" fill="rgb(223,5,52)" fg:x="454" fg:w="1"/><text x="89.7964%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.20%)</title><rect x="89.5464%" y="677" width="0.1972%" height="15" fill="rgb(206,52,46)" fg:x="454" fg:w="1"/><text x="89.7964%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.20%)</title><rect x="89.5464%" y="661" width="0.1972%" height="15" fill="rgb(253,136,11)" fg:x="454" fg:w="1"/><text x="89.7964%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.20%)</title><rect x="89.5464%" y="645" width="0.1972%" height="15" fill="rgb(208,106,33)" fg:x="454" fg:w="1"/><text x="89.7964%" y="655.50"></text></g><g><title>_int_free (1 samples, 0.20%)</title><rect x="89.5464%" y="629" width="0.1972%" height="15" fill="rgb(206,54,4)" fg:x="454" fg:w="1"/><text x="89.7964%" y="639.50"></text></g><g><title>meet_middle::enumerate::algo::Algo&lt;_&gt;::run_until::{{closure}} (10 samples, 1.97%)</title><rect x="87.9684%" y="789" width="1.9724%" height="15" fill="rgb(213,3,15)" fg:x="446" fg:w="10"/><text x="88.2184%" y="799.50">m..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::try_insert (1 samples, 0.20%)</title><rect x="89.7436%" y="773" width="0.1972%" height="15" fill="rgb(252,211,39)" fg:x="455" fg:w="1"/><text x="89.9936%" y="783.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.20%)</title><rect x="89.7436%" y="757" width="0.1972%" height="15" fill="rgb(223,6,36)" fg:x="455" fg:w="1"/><text x="89.9936%" y="767.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.20%)</title><rect x="89.7436%" y="741" width="0.1972%" height="15" fill="rgb(252,169,45)" fg:x="455" fg:w="1"/><text x="89.9936%" y="751.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.20%)</title><rect x="89.7436%" y="725" width="0.1972%" height="15" fill="rgb(212,48,26)" fg:x="455" fg:w="1"/><text x="89.9936%" y="735.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.20%)</title><rect x="89.7436%" y="709" width="0.1972%" height="15" fill="rgb(251,102,48)" fg:x="455" fg:w="1"/><text x="89.9936%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.20%)</title><rect x="89.7436%" y="693" width="0.1972%" height="15" fill="rgb(243,208,16)" fg:x="455" fg:w="1"/><text x="89.9936%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.20%)</title><rect x="89.7436%" y="677" width="0.1972%" height="15" fill="rgb(219,96,24)" fg:x="455" fg:w="1"/><text x="89.9936%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.20%)</title><rect x="89.7436%" y="661" width="0.1972%" height="15" fill="rgb(219,33,29)" fg:x="455" fg:w="1"/><text x="89.9936%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.20%)</title><rect x="89.7436%" y="645" width="0.1972%" height="15" fill="rgb(223,176,5)" fg:x="455" fg:w="1"/><text x="89.9936%" y="655.50"></text></g><g><title>meet_middle::enumerate::op::bv::add (1 samples, 0.20%)</title><rect x="90.1381%" y="757" width="0.1972%" height="15" fill="rgb(228,140,14)" fg:x="457" fg:w="1"/><text x="90.3881%" y="767.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::collect (1 samples, 0.20%)</title><rect x="90.1381%" y="741" width="0.1972%" height="15" fill="rgb(217,179,31)" fg:x="457" fg:w="1"/><text x="90.3881%" y="751.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed (1 samples, 0.20%)</title><rect x="90.1381%" y="725" width="0.1972%" height="15" fill="rgb(230,9,30)" fg:x="457" fg:w="1"/><text x="90.3881%" y="735.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::map (1 samples, 0.20%)</title><rect x="90.1381%" y="709" width="0.1972%" height="15" fill="rgb(230,136,20)" fg:x="457" fg:w="1"/><text x="90.3881%" y="719.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map (1 samples, 0.20%)</title><rect x="90.1381%" y="693" width="0.1972%" height="15" fill="rgb(215,210,22)" fg:x="457" fg:w="1"/><text x="90.3881%" y="703.50"></text></g><g><title>core::array::drain::drain_array_with (1 samples, 0.20%)</title><rect x="90.1381%" y="677" width="0.1972%" height="15" fill="rgb(218,43,5)" fg:x="457" fg:w="1"/><text x="90.3881%" y="687.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map::{{closure}} (1 samples, 0.20%)</title><rect x="90.1381%" y="661" width="0.1972%" height="15" fill="rgb(216,11,5)" fg:x="457" fg:w="1"/><text x="90.3881%" y="671.50"></text></g><g><title>core::array::try_from_trusted_iterator (1 samples, 0.20%)</title><rect x="90.1381%" y="645" width="0.1972%" height="15" fill="rgb(209,82,29)" fg:x="457" fg:w="1"/><text x="90.3881%" y="655.50"></text></g><g><title>core::array::try_from_fn (1 samples, 0.20%)</title><rect x="90.1381%" y="629" width="0.1972%" height="15" fill="rgb(244,115,12)" fg:x="457" fg:w="1"/><text x="90.3881%" y="639.50"></text></g><g><title>meet_middle::enumerate::op::bv::sub (1 samples, 0.20%)</title><rect x="90.3353%" y="757" width="0.1972%" height="15" fill="rgb(222,82,18)" fg:x="458" fg:w="1"/><text x="90.5853%" y="767.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::collect (1 samples, 0.20%)</title><rect x="90.3353%" y="741" width="0.1972%" height="15" fill="rgb(249,227,8)" fg:x="458" fg:w="1"/><text x="90.5853%" y="751.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed (1 samples, 0.20%)</title><rect x="90.3353%" y="725" width="0.1972%" height="15" fill="rgb(253,141,45)" fg:x="458" fg:w="1"/><text x="90.5853%" y="735.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::map (1 samples, 0.20%)</title><rect x="90.3353%" y="709" width="0.1972%" height="15" fill="rgb(234,184,4)" fg:x="458" fg:w="1"/><text x="90.5853%" y="719.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map (1 samples, 0.20%)</title><rect x="90.3353%" y="693" width="0.1972%" height="15" fill="rgb(218,194,23)" fg:x="458" fg:w="1"/><text x="90.5853%" y="703.50"></text></g><g><title>core::array::drain::drain_array_with (1 samples, 0.20%)</title><rect x="90.3353%" y="677" width="0.1972%" height="15" fill="rgb(235,66,41)" fg:x="458" fg:w="1"/><text x="90.5853%" y="687.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map::{{closure}} (1 samples, 0.20%)</title><rect x="90.3353%" y="661" width="0.1972%" height="15" fill="rgb(245,217,1)" fg:x="458" fg:w="1"/><text x="90.5853%" y="671.50"></text></g><g><title>core::array::try_from_trusted_iterator (1 samples, 0.20%)</title><rect x="90.3353%" y="645" width="0.1972%" height="15" fill="rgb(229,91,1)" fg:x="458" fg:w="1"/><text x="90.5853%" y="655.50"></text></g><g><title>core::array::try_from_fn (1 samples, 0.20%)</title><rect x="90.3353%" y="629" width="0.1972%" height="15" fill="rgb(207,101,30)" fg:x="458" fg:w="1"/><text x="90.5853%" y="639.50"></text></g><g><title>core::array::try_from_fn_erased (1 samples, 0.20%)</title><rect x="90.3353%" y="613" width="0.1972%" height="15" fill="rgb(223,82,49)" fg:x="458" fg:w="1"/><text x="90.5853%" y="623.50"></text></g><g><title>core::array::try_from_trusted_iterator::next::{{closure}} (1 samples, 0.20%)</title><rect x="90.3353%" y="597" width="0.1972%" height="15" fill="rgb(218,167,17)" fg:x="458" fg:w="1"/><text x="90.5853%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (1 samples, 0.20%)</title><rect x="90.3353%" y="581" width="0.1972%" height="15" fill="rgb(208,103,14)" fg:x="458" fg:w="1"/><text x="90.5853%" y="591.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_1::{{closure}} (1 samples, 0.20%)</title><rect x="90.3353%" y="565" width="0.1972%" height="15" fill="rgb(238,20,8)" fg:x="458" fg:w="1"/><text x="90.5853%" y="575.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed::{{closure}} (1 samples, 0.20%)</title><rect x="90.3353%" y="549" width="0.1972%" height="15" fill="rgb(218,80,54)" fg:x="458" fg:w="1"/><text x="90.5853%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="90.3353%" y="533" width="0.1972%" height="15" fill="rgb(240,144,17)" fg:x="458" fg:w="1"/><text x="90.5853%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="90.3353%" y="517" width="0.1972%" height="15" fill="rgb(245,27,50)" fg:x="458" fg:w="1"/><text x="90.5853%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.20%)</title><rect x="90.3353%" y="501" width="0.1972%" height="15" fill="rgb(251,51,7)" fg:x="458" fg:w="1"/><text x="90.5853%" y="511.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="90.3353%" y="485" width="0.1972%" height="15" fill="rgb(245,217,29)" fg:x="458" fg:w="1"/><text x="90.5853%" y="495.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="90.3353%" y="469" width="0.1972%" height="15" fill="rgb(221,176,29)" fg:x="458" fg:w="1"/><text x="90.5853%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.20%)</title><rect x="90.5325%" y="677" width="0.1972%" height="15" fill="rgb(212,180,24)" fg:x="459" fg:w="1"/><text x="90.7825%" y="687.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (1 samples, 0.20%)</title><rect x="90.5325%" y="661" width="0.1972%" height="15" fill="rgb(254,24,2)" fg:x="459" fg:w="1"/><text x="90.7825%" y="671.50"></text></g><g><title>&lt;meet_middle::enumerate::Bv&lt;_&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.20%)</title><rect x="90.5325%" y="645" width="0.1972%" height="15" fill="rgb(230,100,2)" fg:x="459" fg:w="1"/><text x="90.7825%" y="655.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (1 samples, 0.20%)</title><rect x="90.5325%" y="629" width="0.1972%" height="15" fill="rgb(219,142,25)" fg:x="459" fg:w="1"/><text x="90.7825%" y="639.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (1 samples, 0.20%)</title><rect x="90.5325%" y="613" width="0.1972%" height="15" fill="rgb(240,73,43)" fg:x="459" fg:w="1"/><text x="90.7825%" y="623.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.20%)</title><rect x="90.5325%" y="597" width="0.1972%" height="15" fill="rgb(214,114,15)" fg:x="459" fg:w="1"/><text x="90.7825%" y="607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (3 samples, 0.59%)</title><rect x="90.5325%" y="741" width="0.5917%" height="15" fill="rgb(207,130,4)" fg:x="459" fg:w="3"/><text x="90.7825%" y="751.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (3 samples, 0.59%)</title><rect x="90.5325%" y="725" width="0.5917%" height="15" fill="rgb(221,25,40)" fg:x="459" fg:w="3"/><text x="90.7825%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.59%)</title><rect x="90.5325%" y="709" width="0.5917%" height="15" fill="rgb(241,184,7)" fg:x="459" fg:w="3"/><text x="90.7825%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (3 samples, 0.59%)</title><rect x="90.5325%" y="693" width="0.5917%" height="15" fill="rgb(235,159,4)" fg:x="459" fg:w="3"/><text x="90.7825%" y="703.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.39%)</title><rect x="90.7298%" y="677" width="0.3945%" height="15" fill="rgb(214,87,48)" fg:x="460" fg:w="2"/><text x="90.9798%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.39%)</title><rect x="90.7298%" y="661" width="0.3945%" height="15" fill="rgb(246,198,24)" fg:x="460" fg:w="2"/><text x="90.9798%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.39%)</title><rect x="90.7298%" y="645" width="0.3945%" height="15" fill="rgb(209,66,40)" fg:x="460" fg:w="2"/><text x="90.9798%" y="655.50"></text></g><g><title>meet_middle::enumerate::algo::Algo&lt;_&gt;::run_until::{{closure}} (7 samples, 1.38%)</title><rect x="90.1381%" y="773" width="1.3807%" height="15" fill="rgb(233,147,39)" fg:x="457" fg:w="7"/><text x="90.3881%" y="783.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::try_insert (5 samples, 0.99%)</title><rect x="90.5325%" y="757" width="0.9862%" height="15" fill="rgb(231,145,52)" fg:x="459" fg:w="5"/><text x="90.7825%" y="767.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (2 samples, 0.39%)</title><rect x="91.1243%" y="741" width="0.3945%" height="15" fill="rgb(206,20,26)" fg:x="462" fg:w="2"/><text x="91.3743%" y="751.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.39%)</title><rect x="91.1243%" y="725" width="0.3945%" height="15" fill="rgb(238,220,4)" fg:x="462" fg:w="2"/><text x="91.3743%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (2 samples, 0.39%)</title><rect x="91.1243%" y="709" width="0.3945%" height="15" fill="rgb(252,195,42)" fg:x="462" fg:w="2"/><text x="91.3743%" y="719.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (2 samples, 0.39%)</title><rect x="91.1243%" y="693" width="0.3945%" height="15" fill="rgb(209,10,6)" fg:x="462" fg:w="2"/><text x="91.3743%" y="703.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (2 samples, 0.39%)</title><rect x="91.1243%" y="677" width="0.3945%" height="15" fill="rgb(229,3,52)" fg:x="462" fg:w="2"/><text x="91.3743%" y="687.50"></text></g><g><title>core::ptr::write (2 samples, 0.39%)</title><rect x="91.1243%" y="661" width="0.3945%" height="15" fill="rgb(253,49,37)" fg:x="462" fg:w="2"/><text x="91.3743%" y="671.50"></text></g><g><title>meet_middle::enumerate::expr::Expr::for_each_subexpr (19 samples, 3.75%)</title><rect x="87.9684%" y="837" width="3.7475%" height="15" fill="rgb(240,103,49)" fg:x="446" fg:w="19"/><text x="88.2184%" y="847.50">meet..</text></g><g><title>meet_middle::enumerate::expr::Expr::for_each_subexpr (19 samples, 3.75%)</title><rect x="87.9684%" y="821" width="3.7475%" height="15" fill="rgb(250,182,30)" fg:x="446" fg:w="19"/><text x="88.2184%" y="831.50">meet..</text></g><g><title>meet_middle::enumerate::expr::Expr::for_each_subexpr (19 samples, 3.75%)</title><rect x="87.9684%" y="805" width="3.7475%" height="15" fill="rgb(248,8,30)" fg:x="446" fg:w="19"/><text x="88.2184%" y="815.50">meet..</text></g><g><title>meet_middle::enumerate::expr::Expr::for_each_subexpr (9 samples, 1.78%)</title><rect x="89.9408%" y="789" width="1.7751%" height="15" fill="rgb(237,120,30)" fg:x="456" fg:w="9"/><text x="90.1908%" y="799.50">m..</text></g><g><title>meet_middle::enumerate::op::bv::lshr (1 samples, 0.20%)</title><rect x="91.5187%" y="773" width="0.1972%" height="15" fill="rgb(221,146,34)" fg:x="464" fg:w="1"/><text x="91.7687%" y="783.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::collect (1 samples, 0.20%)</title><rect x="91.5187%" y="757" width="0.1972%" height="15" fill="rgb(242,55,13)" fg:x="464" fg:w="1"/><text x="91.7687%" y="767.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed (1 samples, 0.20%)</title><rect x="91.5187%" y="741" width="0.1972%" height="15" fill="rgb(242,112,31)" fg:x="464" fg:w="1"/><text x="91.7687%" y="751.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::map (1 samples, 0.20%)</title><rect x="91.5187%" y="725" width="0.1972%" height="15" fill="rgb(249,192,27)" fg:x="464" fg:w="1"/><text x="91.7687%" y="735.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map (1 samples, 0.20%)</title><rect x="91.5187%" y="709" width="0.1972%" height="15" fill="rgb(208,204,44)" fg:x="464" fg:w="1"/><text x="91.7687%" y="719.50"></text></g><g><title>core::array::drain::drain_array_with (1 samples, 0.20%)</title><rect x="91.5187%" y="693" width="0.1972%" height="15" fill="rgb(208,93,54)" fg:x="464" fg:w="1"/><text x="91.7687%" y="703.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map::{{closure}} (1 samples, 0.20%)</title><rect x="91.5187%" y="677" width="0.1972%" height="15" fill="rgb(242,1,31)" fg:x="464" fg:w="1"/><text x="91.7687%" y="687.50"></text></g><g><title>core::array::try_from_trusted_iterator (1 samples, 0.20%)</title><rect x="91.5187%" y="661" width="0.1972%" height="15" fill="rgb(241,83,25)" fg:x="464" fg:w="1"/><text x="91.7687%" y="671.50"></text></g><g><title>core::array::try_from_fn (1 samples, 0.20%)</title><rect x="91.5187%" y="645" width="0.1972%" height="15" fill="rgb(205,169,50)" fg:x="464" fg:w="1"/><text x="91.7687%" y="655.50"></text></g><g><title>core::array::try_from_fn_erased (1 samples, 0.20%)</title><rect x="91.5187%" y="629" width="0.1972%" height="15" fill="rgb(239,186,37)" fg:x="464" fg:w="1"/><text x="91.7687%" y="639.50"></text></g><g><title>core::array::try_from_trusted_iterator::next::{{closure}} (1 samples, 0.20%)</title><rect x="91.5187%" y="613" width="0.1972%" height="15" fill="rgb(205,221,10)" fg:x="464" fg:w="1"/><text x="91.7687%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (1 samples, 0.20%)</title><rect x="91.5187%" y="597" width="0.1972%" height="15" fill="rgb(218,196,15)" fg:x="464" fg:w="1"/><text x="91.7687%" y="607.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_1::{{closure}} (1 samples, 0.20%)</title><rect x="91.5187%" y="581" width="0.1972%" height="15" fill="rgb(218,196,35)" fg:x="464" fg:w="1"/><text x="91.7687%" y="591.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed::{{closure}} (1 samples, 0.20%)</title><rect x="91.5187%" y="565" width="0.1972%" height="15" fill="rgb(233,63,24)" fg:x="464" fg:w="1"/><text x="91.7687%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="91.5187%" y="549" width="0.1972%" height="15" fill="rgb(225,8,4)" fg:x="464" fg:w="1"/><text x="91.7687%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="91.5187%" y="533" width="0.1972%" height="15" fill="rgb(234,105,35)" fg:x="464" fg:w="1"/><text x="91.7687%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.20%)</title><rect x="91.5187%" y="517" width="0.1972%" height="15" fill="rgb(236,21,32)" fg:x="464" fg:w="1"/><text x="91.7687%" y="527.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="91.5187%" y="501" width="0.1972%" height="15" fill="rgb(228,109,6)" fg:x="464" fg:w="1"/><text x="91.7687%" y="511.50"></text></g><g><title>meet_middle::enumerate::algo::Algo&lt;_&gt;::run_until::{{closure}} (1 samples, 0.20%)</title><rect x="91.7160%" y="709" width="0.1972%" height="15" fill="rgb(229,215,31)" fg:x="465" fg:w="1"/><text x="91.9660%" y="719.50"></text></g><g><title>meet_middle::search::sample::SampleConfig::search_inner::{{closure}} (1 samples, 0.20%)</title><rect x="91.7160%" y="693" width="0.1972%" height="15" fill="rgb(221,52,54)" fg:x="465" fg:w="1"/><text x="91.9660%" y="703.50"></text></g><g><title>meet_middle::search::filter::FilterState&lt;_&gt;::filter (1 samples, 0.20%)</title><rect x="91.7160%" y="677" width="0.1972%" height="15" fill="rgb(252,129,43)" fg:x="465" fg:w="1"/><text x="91.9660%" y="687.50"></text></g><g><title>meet_middle::solutions::Solutions::add_solution (1 samples, 0.20%)</title><rect x="91.7160%" y="661" width="0.1972%" height="15" fill="rgb(248,183,27)" fg:x="465" fg:w="1"/><text x="91.9660%" y="671.50"></text></g><g><title>meet_middle::parse::constraint::pbe::PbeConstraint::test (1 samples, 0.20%)</title><rect x="91.7160%" y="645" width="0.1972%" height="15" fill="rgb(250,0,22)" fg:x="465" fg:w="1"/><text x="91.9660%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.20%)</title><rect x="91.7160%" y="629" width="0.1972%" height="15" fill="rgb(213,166,10)" fg:x="465" fg:w="1"/><text x="91.9660%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.20%)</title><rect x="91.7160%" y="613" width="0.1972%" height="15" fill="rgb(207,163,36)" fg:x="465" fg:w="1"/><text x="91.9660%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.20%)</title><rect x="91.7160%" y="597" width="0.1972%" height="15" fill="rgb(208,122,22)" fg:x="465" fg:w="1"/><text x="91.9660%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.20%)</title><rect x="91.7160%" y="581" width="0.1972%" height="15" fill="rgb(207,104,49)" fg:x="465" fg:w="1"/><text x="91.9660%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.20%)</title><rect x="91.7160%" y="565" width="0.1972%" height="15" fill="rgb(248,211,50)" fg:x="465" fg:w="1"/><text x="91.9660%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.20%)</title><rect x="91.7160%" y="549" width="0.1972%" height="15" fill="rgb(217,13,45)" fg:x="465" fg:w="1"/><text x="91.9660%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="91.7160%" y="533" width="0.1972%" height="15" fill="rgb(211,216,49)" fg:x="465" fg:w="1"/><text x="91.9660%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="91.7160%" y="517" width="0.1972%" height="15" fill="rgb(221,58,53)" fg:x="465" fg:w="1"/><text x="91.9660%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="91.7160%" y="501" width="0.1972%" height="15" fill="rgb(220,112,41)" fg:x="465" fg:w="1"/><text x="91.9660%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.20%)</title><rect x="91.7160%" y="485" width="0.1972%" height="15" fill="rgb(236,38,28)" fg:x="465" fg:w="1"/><text x="91.9660%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="91.7160%" y="469" width="0.1972%" height="15" fill="rgb(227,195,22)" fg:x="465" fg:w="1"/><text x="91.9660%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.20%)</title><rect x="91.7160%" y="453" width="0.1972%" height="15" fill="rgb(214,55,33)" fg:x="465" fg:w="1"/><text x="91.9660%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.20%)</title><rect x="91.7160%" y="437" width="0.1972%" height="15" fill="rgb(248,80,13)" fg:x="465" fg:w="1"/><text x="91.9660%" y="447.50"></text></g><g><title>meet_middle::parse::constraint::pbe::PbeConstraint::test::{{closure}} (1 samples, 0.20%)</title><rect x="91.7160%" y="421" width="0.1972%" height="15" fill="rgb(238,52,6)" fg:x="465" fg:w="1"/><text x="91.9660%" y="431.50"></text></g><g><title>meet_middle::enumerate::expr::Expr::eval (1 samples, 0.20%)</title><rect x="91.7160%" y="405" width="0.1972%" height="15" fill="rgb(224,198,47)" fg:x="465" fg:w="1"/><text x="91.9660%" y="415.50"></text></g><g><title>meet_middle::enumerate::expr::Expr::eval (1 samples, 0.20%)</title><rect x="91.7160%" y="389" width="0.1972%" height="15" fill="rgb(233,171,20)" fg:x="465" fg:w="1"/><text x="91.9660%" y="399.50"></text></g><g><title>meet_middle::enumerate::expr::Expr::eval (1 samples, 0.20%)</title><rect x="91.7160%" y="373" width="0.1972%" height="15" fill="rgb(241,30,25)" fg:x="465" fg:w="1"/><text x="91.9660%" y="383.50"></text></g><g><title>meet_middle::enumerate::expr::Expr::eval (1 samples, 0.20%)</title><rect x="91.7160%" y="357" width="0.1972%" height="15" fill="rgb(207,171,38)" fg:x="465" fg:w="1"/><text x="91.9660%" y="367.50"></text></g><g><title>meet_middle::enumerate::expr::Expr::eval (1 samples, 0.20%)</title><rect x="91.7160%" y="341" width="0.1972%" height="15" fill="rgb(234,70,1)" fg:x="465" fg:w="1"/><text x="91.9660%" y="351.50"></text></g><g><title>meet_middle::enumerate::expr::Expr::eval (1 samples, 0.20%)</title><rect x="91.7160%" y="325" width="0.1972%" height="15" fill="rgb(232,178,18)" fg:x="465" fg:w="1"/><text x="91.9660%" y="335.50"></text></g><g><title>meet_middle::enumerate::expr::Expr::eval (1 samples, 0.20%)</title><rect x="91.7160%" y="309" width="0.1972%" height="15" fill="rgb(241,78,40)" fg:x="465" fg:w="1"/><text x="91.9660%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.20%)</title><rect x="92.3077%" y="677" width="0.1972%" height="15" fill="rgb(222,35,25)" fg:x="468" fg:w="1"/><text x="92.5577%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.20%)</title><rect x="92.3077%" y="661" width="0.1972%" height="15" fill="rgb(207,92,16)" fg:x="468" fg:w="1"/><text x="92.5577%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.20%)</title><rect x="92.3077%" y="645" width="0.1972%" height="15" fill="rgb(216,59,51)" fg:x="468" fg:w="1"/><text x="92.5577%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.20%)</title><rect x="92.3077%" y="629" width="0.1972%" height="15" fill="rgb(213,80,28)" fg:x="468" fg:w="1"/><text x="92.5577%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.20%)</title><rect x="92.3077%" y="613" width="0.1972%" height="15" fill="rgb(220,93,7)" fg:x="468" fg:w="1"/><text x="92.5577%" y="623.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.20%)</title><rect x="92.3077%" y="597" width="0.1972%" height="15" fill="rgb(225,24,44)" fg:x="468" fg:w="1"/><text x="92.5577%" y="607.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.20%)</title><rect x="92.3077%" y="581" width="0.1972%" height="15" fill="rgb(243,74,40)" fg:x="468" fg:w="1"/><text x="92.5577%" y="591.50"></text></g><g><title>__rdl_realloc (1 samples, 0.20%)</title><rect x="92.3077%" y="565" width="0.1972%" height="15" fill="rgb(228,39,7)" fg:x="468" fg:w="1"/><text x="92.5577%" y="575.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.20%)</title><rect x="92.3077%" y="549" width="0.1972%" height="15" fill="rgb(227,79,8)" fg:x="468" fg:w="1"/><text x="92.5577%" y="559.50"></text></g><g><title>std::sys::common::alloc::realloc_fallback (1 samples, 0.20%)</title><rect x="92.3077%" y="533" width="0.1972%" height="15" fill="rgb(236,58,11)" fg:x="468" fg:w="1"/><text x="92.5577%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.20%)</title><rect x="92.3077%" y="517" width="0.1972%" height="15" fill="rgb(249,63,35)" fg:x="468" fg:w="1"/><text x="92.5577%" y="527.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.20%)</title><rect x="92.3077%" y="501" width="0.1972%" height="15" fill="rgb(252,114,16)" fg:x="468" fg:w="1"/><text x="92.5577%" y="511.50"></text></g><g><title>bumpalo::Bump::alloc_layout (1 samples, 0.20%)</title><rect x="92.5049%" y="645" width="0.1972%" height="15" fill="rgb(254,151,24)" fg:x="469" fg:w="1"/><text x="92.7549%" y="655.50"></text></g><g><title>bumpalo::Bump::try_alloc_layout (1 samples, 0.20%)</title><rect x="92.5049%" y="629" width="0.1972%" height="15" fill="rgb(253,54,39)" fg:x="469" fg:w="1"/><text x="92.7549%" y="639.50"></text></g><g><title>bumpalo::Bump::try_alloc_layout_fast (1 samples, 0.20%)</title><rect x="92.5049%" y="613" width="0.1972%" height="15" fill="rgb(243,25,45)" fg:x="469" fg:w="1"/><text x="92.7549%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::wrapping_sub (1 samples, 0.20%)</title><rect x="92.5049%" y="597" width="0.1972%" height="15" fill="rgb(234,134,9)" fg:x="469" fg:w="1"/><text x="92.7549%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::wrapping_offset (1 samples, 0.20%)</title><rect x="92.5049%" y="581" width="0.1972%" height="15" fill="rgb(227,166,31)" fg:x="469" fg:w="1"/><text x="92.7549%" y="591.50"></text></g><g><title>bumpalo::Bump::alloc (2 samples, 0.39%)</title><rect x="92.5049%" y="677" width="0.3945%" height="15" fill="rgb(245,143,41)" fg:x="469" fg:w="2"/><text x="92.7549%" y="687.50"></text></g><g><title>bumpalo::Bump::alloc_with (2 samples, 0.39%)</title><rect x="92.5049%" y="661" width="0.3945%" height="15" fill="rgb(238,181,32)" fg:x="469" fg:w="2"/><text x="92.7549%" y="671.50"></text></g><g><title>bumpalo::Bump::alloc_with::inner_writer (1 samples, 0.20%)</title><rect x="92.7022%" y="645" width="0.1972%" height="15" fill="rgb(224,113,18)" fg:x="470" fg:w="1"/><text x="92.9522%" y="655.50"></text></g><g><title>core::ptr::write (1 samples, 0.20%)</title><rect x="92.7022%" y="629" width="0.1972%" height="15" fill="rgb(240,229,28)" fg:x="470" fg:w="1"/><text x="92.9522%" y="639.50"></text></g><g><title>meet_middle::enumerate::op::bv::and (1 samples, 0.20%)</title><rect x="92.8994%" y="677" width="0.1972%" height="15" fill="rgb(250,185,3)" fg:x="471" fg:w="1"/><text x="93.1494%" y="687.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::collect (1 samples, 0.20%)</title><rect x="92.8994%" y="661" width="0.1972%" height="15" fill="rgb(212,59,25)" fg:x="471" fg:w="1"/><text x="93.1494%" y="671.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed (1 samples, 0.20%)</title><rect x="92.8994%" y="645" width="0.1972%" height="15" fill="rgb(221,87,20)" fg:x="471" fg:w="1"/><text x="93.1494%" y="655.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::map (1 samples, 0.20%)</title><rect x="92.8994%" y="629" width="0.1972%" height="15" fill="rgb(213,74,28)" fg:x="471" fg:w="1"/><text x="93.1494%" y="639.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map (1 samples, 0.20%)</title><rect x="92.8994%" y="613" width="0.1972%" height="15" fill="rgb(224,132,34)" fg:x="471" fg:w="1"/><text x="93.1494%" y="623.50"></text></g><g><title>core::array::drain::drain_array_with (1 samples, 0.20%)</title><rect x="92.8994%" y="597" width="0.1972%" height="15" fill="rgb(222,101,24)" fg:x="471" fg:w="1"/><text x="93.1494%" y="607.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map::{{closure}} (1 samples, 0.20%)</title><rect x="92.8994%" y="581" width="0.1972%" height="15" fill="rgb(254,142,4)" fg:x="471" fg:w="1"/><text x="93.1494%" y="591.50"></text></g><g><title>core::array::try_from_trusted_iterator (1 samples, 0.20%)</title><rect x="92.8994%" y="565" width="0.1972%" height="15" fill="rgb(230,229,49)" fg:x="471" fg:w="1"/><text x="93.1494%" y="575.50"></text></g><g><title>core::array::try_from_fn (1 samples, 0.20%)</title><rect x="92.8994%" y="549" width="0.1972%" height="15" fill="rgb(238,70,47)" fg:x="471" fg:w="1"/><text x="93.1494%" y="559.50"></text></g><g><title>core::array::try_from_fn_erased (1 samples, 0.20%)</title><rect x="92.8994%" y="533" width="0.1972%" height="15" fill="rgb(231,160,17)" fg:x="471" fg:w="1"/><text x="93.1494%" y="543.50"></text></g><g><title>core::array::try_from_trusted_iterator::next::{{closure}} (1 samples, 0.20%)</title><rect x="92.8994%" y="517" width="0.1972%" height="15" fill="rgb(218,68,53)" fg:x="471" fg:w="1"/><text x="93.1494%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (1 samples, 0.20%)</title><rect x="92.8994%" y="501" width="0.1972%" height="15" fill="rgb(236,111,10)" fg:x="471" fg:w="1"/><text x="93.1494%" y="511.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_1::{{closure}} (1 samples, 0.20%)</title><rect x="92.8994%" y="485" width="0.1972%" height="15" fill="rgb(224,34,41)" fg:x="471" fg:w="1"/><text x="93.1494%" y="495.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed::{{closure}} (1 samples, 0.20%)</title><rect x="92.8994%" y="469" width="0.1972%" height="15" fill="rgb(241,118,19)" fg:x="471" fg:w="1"/><text x="93.1494%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="92.8994%" y="453" width="0.1972%" height="15" fill="rgb(238,129,25)" fg:x="471" fg:w="1"/><text x="93.1494%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="92.8994%" y="437" width="0.1972%" height="15" fill="rgb(238,22,31)" fg:x="471" fg:w="1"/><text x="93.1494%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.20%)</title><rect x="92.8994%" y="421" width="0.1972%" height="15" fill="rgb(222,174,48)" fg:x="471" fg:w="1"/><text x="93.1494%" y="431.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="92.8994%" y="405" width="0.1972%" height="15" fill="rgb(206,152,40)" fg:x="471" fg:w="1"/><text x="93.1494%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.20%)</title><rect x="92.8994%" y="389" width="0.1972%" height="15" fill="rgb(218,99,54)" fg:x="471" fg:w="1"/><text x="93.1494%" y="399.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (1 samples, 0.20%)</title><rect x="92.8994%" y="373" width="0.1972%" height="15" fill="rgb(220,174,26)" fg:x="471" fg:w="1"/><text x="93.1494%" y="383.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (1 samples, 0.20%)</title><rect x="92.8994%" y="357" width="0.1972%" height="15" fill="rgb(245,116,9)" fg:x="471" fg:w="1"/><text x="93.1494%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (1 samples, 0.20%)</title><rect x="92.8994%" y="341" width="0.1972%" height="15" fill="rgb(209,72,35)" fg:x="471" fg:w="1"/><text x="93.1494%" y="351.50"></text></g><g><title>core::array::drain::drain_array_with (1 samples, 0.20%)</title><rect x="92.8994%" y="325" width="0.1972%" height="15" fill="rgb(226,126,21)" fg:x="471" fg:w="1"/><text x="93.1494%" y="335.50"></text></g><g><title>meet_middle::enumerate::op::bv::udiv (1 samples, 0.20%)</title><rect x="93.0966%" y="677" width="0.1972%" height="15" fill="rgb(227,192,1)" fg:x="472" fg:w="1"/><text x="93.3466%" y="687.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::collect (1 samples, 0.20%)</title><rect x="93.0966%" y="661" width="0.1972%" height="15" fill="rgb(237,180,29)" fg:x="472" fg:w="1"/><text x="93.3466%" y="671.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed (1 samples, 0.20%)</title><rect x="93.0966%" y="645" width="0.1972%" height="15" fill="rgb(230,197,35)" fg:x="472" fg:w="1"/><text x="93.3466%" y="655.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::map (1 samples, 0.20%)</title><rect x="93.0966%" y="629" width="0.1972%" height="15" fill="rgb(246,193,31)" fg:x="472" fg:w="1"/><text x="93.3466%" y="639.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map (1 samples, 0.20%)</title><rect x="93.0966%" y="613" width="0.1972%" height="15" fill="rgb(241,36,4)" fg:x="472" fg:w="1"/><text x="93.3466%" y="623.50"></text></g><g><title>core::array::drain::drain_array_with (1 samples, 0.20%)</title><rect x="93.0966%" y="597" width="0.1972%" height="15" fill="rgb(241,130,17)" fg:x="472" fg:w="1"/><text x="93.3466%" y="607.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map::{{closure}} (1 samples, 0.20%)</title><rect x="93.0966%" y="581" width="0.1972%" height="15" fill="rgb(206,137,32)" fg:x="472" fg:w="1"/><text x="93.3466%" y="591.50"></text></g><g><title>core::array::try_from_trusted_iterator (1 samples, 0.20%)</title><rect x="93.0966%" y="565" width="0.1972%" height="15" fill="rgb(237,228,51)" fg:x="472" fg:w="1"/><text x="93.3466%" y="575.50"></text></g><g><title>core::array::try_from_fn (1 samples, 0.20%)</title><rect x="93.0966%" y="549" width="0.1972%" height="15" fill="rgb(243,6,42)" fg:x="472" fg:w="1"/><text x="93.3466%" y="559.50"></text></g><g><title>core::array::try_from_fn_erased (1 samples, 0.20%)</title><rect x="93.0966%" y="533" width="0.1972%" height="15" fill="rgb(251,74,28)" fg:x="472" fg:w="1"/><text x="93.3466%" y="543.50"></text></g><g><title>core::array::try_from_trusted_iterator::next::{{closure}} (1 samples, 0.20%)</title><rect x="93.0966%" y="517" width="0.1972%" height="15" fill="rgb(218,20,49)" fg:x="472" fg:w="1"/><text x="93.3466%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (1 samples, 0.20%)</title><rect x="93.0966%" y="501" width="0.1972%" height="15" fill="rgb(238,28,14)" fg:x="472" fg:w="1"/><text x="93.3466%" y="511.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_1::{{closure}} (1 samples, 0.20%)</title><rect x="93.0966%" y="485" width="0.1972%" height="15" fill="rgb(229,40,46)" fg:x="472" fg:w="1"/><text x="93.3466%" y="495.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed::{{closure}} (1 samples, 0.20%)</title><rect x="93.0966%" y="469" width="0.1972%" height="15" fill="rgb(244,195,20)" fg:x="472" fg:w="1"/><text x="93.3466%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="93.0966%" y="453" width="0.1972%" height="15" fill="rgb(253,56,35)" fg:x="472" fg:w="1"/><text x="93.3466%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.20%)</title><rect x="93.0966%" y="437" width="0.1972%" height="15" fill="rgb(210,149,44)" fg:x="472" fg:w="1"/><text x="93.3466%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.20%)</title><rect x="93.0966%" y="421" width="0.1972%" height="15" fill="rgb(240,135,12)" fg:x="472" fg:w="1"/><text x="93.3466%" y="431.50"></text></g><g><title>meet_middle::enumerate::op::bv::udiv::{{closure}} (1 samples, 0.20%)</title><rect x="93.0966%" y="405" width="0.1972%" height="15" fill="rgb(251,24,50)" fg:x="472" fg:w="1"/><text x="93.3466%" y="415.50"></text></g><g><title>meet_middle::enumerate::op::udiv (1 samples, 0.20%)</title><rect x="93.0966%" y="389" width="0.1972%" height="15" fill="rgb(243,200,47)" fg:x="472" fg:w="1"/><text x="93.3466%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::checked_div (1 samples, 0.20%)</title><rect x="93.0966%" y="373" width="0.1972%" height="15" fill="rgb(224,166,26)" fg:x="472" fg:w="1"/><text x="93.3466%" y="383.50"></text></g><g><title>meet_middle::enumerate::op::bv::xor (2 samples, 0.39%)</title><rect x="93.2939%" y="677" width="0.3945%" height="15" fill="rgb(233,0,47)" fg:x="473" fg:w="2"/><text x="93.5439%" y="687.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::collect (2 samples, 0.39%)</title><rect x="93.2939%" y="661" width="0.3945%" height="15" fill="rgb(253,80,5)" fg:x="473" fg:w="2"/><text x="93.5439%" y="671.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed (2 samples, 0.39%)</title><rect x="93.2939%" y="645" width="0.3945%" height="15" fill="rgb(214,133,25)" fg:x="473" fg:w="2"/><text x="93.5439%" y="655.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::map (1 samples, 0.20%)</title><rect x="93.4911%" y="629" width="0.1972%" height="15" fill="rgb(209,27,14)" fg:x="474" fg:w="1"/><text x="93.7411%" y="639.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map (1 samples, 0.20%)</title><rect x="93.4911%" y="613" width="0.1972%" height="15" fill="rgb(219,102,51)" fg:x="474" fg:w="1"/><text x="93.7411%" y="623.50"></text></g><g><title>core::array::drain::drain_array_with (1 samples, 0.20%)</title><rect x="93.4911%" y="597" width="0.1972%" height="15" fill="rgb(237,18,16)" fg:x="474" fg:w="1"/><text x="93.7411%" y="607.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map::{{closure}} (1 samples, 0.20%)</title><rect x="93.4911%" y="581" width="0.1972%" height="15" fill="rgb(241,85,17)" fg:x="474" fg:w="1"/><text x="93.7411%" y="591.50"></text></g><g><title>core::array::try_from_trusted_iterator (1 samples, 0.20%)</title><rect x="93.4911%" y="565" width="0.1972%" height="15" fill="rgb(236,90,42)" fg:x="474" fg:w="1"/><text x="93.7411%" y="575.50"></text></g><g><title>core::array::try_from_fn (1 samples, 0.20%)</title><rect x="93.4911%" y="549" width="0.1972%" height="15" fill="rgb(249,57,21)" fg:x="474" fg:w="1"/><text x="93.7411%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.20%)</title><rect x="93.6884%" y="469" width="0.1972%" height="15" fill="rgb(243,12,36)" fg:x="475" fg:w="1"/><text x="93.9384%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.20%)</title><rect x="93.6884%" y="453" width="0.1972%" height="15" fill="rgb(253,128,47)" fg:x="475" fg:w="1"/><text x="93.9384%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.20%)</title><rect x="93.6884%" y="437" width="0.1972%" height="15" fill="rgb(207,33,20)" fg:x="475" fg:w="1"/><text x="93.9384%" y="447.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (2 samples, 0.39%)</title><rect x="93.6884%" y="533" width="0.3945%" height="15" fill="rgb(233,215,35)" fg:x="475" fg:w="2"/><text x="93.9384%" y="543.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.39%)</title><rect x="93.6884%" y="517" width="0.3945%" height="15" fill="rgb(249,188,52)" fg:x="475" fg:w="2"/><text x="93.9384%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.39%)</title><rect x="93.6884%" y="501" width="0.3945%" height="15" fill="rgb(225,12,32)" fg:x="475" fg:w="2"/><text x="93.9384%" y="511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.39%)</title><rect x="93.6884%" y="485" width="0.3945%" height="15" fill="rgb(247,98,14)" fg:x="475" fg:w="2"/><text x="93.9384%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.20%)</title><rect x="93.8856%" y="469" width="0.1972%" height="15" fill="rgb(247,219,48)" fg:x="476" fg:w="1"/><text x="94.1356%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.79%)</title><rect x="94.0828%" y="469" width="0.7890%" height="15" fill="rgb(253,60,48)" fg:x="477" fg:w="4"/><text x="94.3328%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.20%)</title><rect x="94.6746%" y="453" width="0.1972%" height="15" fill="rgb(245,15,52)" fg:x="480" fg:w="1"/><text x="94.9246%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (7 samples, 1.38%)</title><rect x="93.6884%" y="629" width="1.3807%" height="15" fill="rgb(220,133,28)" fg:x="475" fg:w="7"/><text x="93.9384%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (7 samples, 1.38%)</title><rect x="93.6884%" y="613" width="1.3807%" height="15" fill="rgb(217,180,4)" fg:x="475" fg:w="7"/><text x="93.9384%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (7 samples, 1.38%)</title><rect x="93.6884%" y="597" width="1.3807%" height="15" fill="rgb(251,24,1)" fg:x="475" fg:w="7"/><text x="93.9384%" y="607.50"></text></g><g><title>&lt;meet_middle::enumerate::Bv&lt;_&gt; as core::hash::Hash&gt;::hash (7 samples, 1.38%)</title><rect x="93.6884%" y="581" width="1.3807%" height="15" fill="rgb(212,185,49)" fg:x="475" fg:w="7"/><text x="93.9384%" y="591.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (7 samples, 1.38%)</title><rect x="93.6884%" y="565" width="1.3807%" height="15" fill="rgb(215,175,22)" fg:x="475" fg:w="7"/><text x="93.9384%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (7 samples, 1.38%)</title><rect x="93.6884%" y="549" width="1.3807%" height="15" fill="rgb(250,205,14)" fg:x="475" fg:w="7"/><text x="93.9384%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash_slice (5 samples, 0.99%)</title><rect x="94.0828%" y="533" width="0.9862%" height="15" fill="rgb(225,211,22)" fg:x="477" fg:w="5"/><text x="94.3328%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.99%)</title><rect x="94.0828%" y="517" width="0.9862%" height="15" fill="rgb(251,179,42)" fg:x="477" fg:w="5"/><text x="94.3328%" y="527.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5 samples, 0.99%)</title><rect x="94.0828%" y="501" width="0.9862%" height="15" fill="rgb(208,216,51)" fg:x="477" fg:w="5"/><text x="94.3328%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.99%)</title><rect x="94.0828%" y="485" width="0.9862%" height="15" fill="rgb(235,36,11)" fg:x="477" fg:w="5"/><text x="94.3328%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.20%)</title><rect x="94.8718%" y="469" width="0.1972%" height="15" fill="rgb(213,189,28)" fg:x="481" fg:w="1"/><text x="95.1218%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="95.0690%" y="597" width="0.1972%" height="15" fill="rgb(227,203,42)" fg:x="482" fg:w="1"/><text x="95.3190%" y="607.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.20%)</title><rect x="95.0690%" y="581" width="0.1972%" height="15" fill="rgb(244,72,36)" fg:x="482" fg:w="1"/><text x="95.3190%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (4 samples, 0.79%)</title><rect x="95.2663%" y="597" width="0.7890%" height="15" fill="rgb(213,53,17)" fg:x="483" fg:w="4"/><text x="95.5163%" y="607.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (4 samples, 0.79%)</title><rect x="95.2663%" y="581" width="0.7890%" height="15" fill="rgb(207,167,3)" fg:x="483" fg:w="4"/><text x="95.5163%" y="591.50"></text></g><g><title>&lt;meet_middle::enumerate::Bv&lt;_&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.79%)</title><rect x="95.2663%" y="565" width="0.7890%" height="15" fill="rgb(216,98,30)" fg:x="483" fg:w="4"/><text x="95.5163%" y="575.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (4 samples, 0.79%)</title><rect x="95.2663%" y="549" width="0.7890%" height="15" fill="rgb(236,123,15)" fg:x="483" fg:w="4"/><text x="95.5163%" y="559.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (4 samples, 0.79%)</title><rect x="95.2663%" y="533" width="0.7890%" height="15" fill="rgb(248,81,50)" fg:x="483" fg:w="4"/><text x="95.5163%" y="543.50"></text></g><g><title>__memcmp_avx2_movbe (4 samples, 0.79%)</title><rect x="95.2663%" y="517" width="0.7890%" height="15" fill="rgb(214,120,4)" fg:x="483" fg:w="4"/><text x="95.5163%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (13 samples, 2.56%)</title><rect x="93.6884%" y="661" width="2.5641%" height="15" fill="rgb(208,179,34)" fg:x="475" fg:w="13"/><text x="93.9384%" y="671.50">st..</text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (13 samples, 2.56%)</title><rect x="93.6884%" y="645" width="2.5641%" height="15" fill="rgb(227,140,7)" fg:x="475" fg:w="13"/><text x="93.9384%" y="655.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 1.18%)</title><rect x="95.0690%" y="629" width="1.1834%" height="15" fill="rgb(214,22,6)" fg:x="482" fg:w="6"/><text x="95.3190%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (6 samples, 1.18%)</title><rect x="95.0690%" y="613" width="1.1834%" height="15" fill="rgb(207,137,27)" fg:x="482" fg:w="6"/><text x="95.3190%" y="623.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.20%)</title><rect x="96.0552%" y="597" width="0.1972%" height="15" fill="rgb(210,8,46)" fg:x="487" fg:w="1"/><text x="96.3052%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.20%)</title><rect x="96.0552%" y="581" width="0.1972%" height="15" fill="rgb(240,16,54)" fg:x="487" fg:w="1"/><text x="96.3052%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.20%)</title><rect x="96.0552%" y="565" width="0.1972%" height="15" fill="rgb(211,209,29)" fg:x="487" fg:w="1"/><text x="96.3052%" y="575.50"></text></g><g><title>meet_middle::enumerate::algo::Algo&lt;_&gt;::run_until::{{closure}} (22 samples, 4.34%)</title><rect x="92.3077%" y="693" width="4.3393%" height="15" fill="rgb(226,228,24)" fg:x="468" fg:w="22"/><text x="92.5577%" y="703.50">meet_..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::try_insert (15 samples, 2.96%)</title><rect x="93.6884%" y="677" width="2.9586%" height="15" fill="rgb(222,84,9)" fg:x="475" fg:w="15"/><text x="93.9384%" y="687.50">std..</text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (2 samples, 0.39%)</title><rect x="96.2525%" y="661" width="0.3945%" height="15" fill="rgb(234,203,30)" fg:x="488" fg:w="2"/><text x="96.5025%" y="671.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.39%)</title><rect x="96.2525%" y="645" width="0.3945%" height="15" fill="rgb(238,109,14)" fg:x="488" fg:w="2"/><text x="96.5025%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (2 samples, 0.39%)</title><rect x="96.2525%" y="629" width="0.3945%" height="15" fill="rgb(233,206,34)" fg:x="488" fg:w="2"/><text x="96.5025%" y="639.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (2 samples, 0.39%)</title><rect x="96.2525%" y="613" width="0.3945%" height="15" fill="rgb(220,167,47)" fg:x="488" fg:w="2"/><text x="96.5025%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (2 samples, 0.39%)</title><rect x="96.2525%" y="597" width="0.3945%" height="15" fill="rgb(238,105,10)" fg:x="488" fg:w="2"/><text x="96.5025%" y="607.50"></text></g><g><title>core::ptr::write (2 samples, 0.39%)</title><rect x="96.2525%" y="581" width="0.3945%" height="15" fill="rgb(213,227,17)" fg:x="488" fg:w="2"/><text x="96.5025%" y="591.50"></text></g><g><title>meet_middle::main (26 samples, 5.13%)</title><rect x="91.7160%" y="837" width="5.1282%" height="15" fill="rgb(217,132,38)" fg:x="465" fg:w="26"/><text x="91.9660%" y="847.50">meet_m..</text></g><g><title>meet_middle::main_inner (26 samples, 5.13%)</title><rect x="91.7160%" y="821" width="5.1282%" height="15" fill="rgb(242,146,4)" fg:x="465" fg:w="26"/><text x="91.9660%" y="831.50">meet_m..</text></g><g><title>meet_middle::search::search::SearchConfig::cegis_loop (26 samples, 5.13%)</title><rect x="91.7160%" y="805" width="5.1282%" height="15" fill="rgb(212,61,9)" fg:x="465" fg:w="26"/><text x="91.9660%" y="815.50">meet_m..</text></g><g><title>meet_middle::search::search::SearchConfig::search (26 samples, 5.13%)</title><rect x="91.7160%" y="789" width="5.1282%" height="15" fill="rgb(247,126,22)" fg:x="465" fg:w="26"/><text x="91.9660%" y="799.50">meet_m..</text></g><g><title>meet_middle::search::sample::SampleConfig::search (26 samples, 5.13%)</title><rect x="91.7160%" y="773" width="5.1282%" height="15" fill="rgb(220,196,2)" fg:x="465" fg:w="26"/><text x="91.9660%" y="783.50">meet_m..</text></g><g><title>meet_middle::search::sample::SampleConfig::search_inner (26 samples, 5.13%)</title><rect x="91.7160%" y="757" width="5.1282%" height="15" fill="rgb(208,46,4)" fg:x="465" fg:w="26"/><text x="91.9660%" y="767.50">meet_m..</text></g><g><title>meet_middle::enumerate::algo::Algo&lt;_&gt;::run_until (26 samples, 5.13%)</title><rect x="91.7160%" y="741" width="5.1282%" height="15" fill="rgb(252,104,46)" fg:x="465" fg:w="26"/><text x="91.9660%" y="751.50">meet_m..</text></g><g><title>meet_middle::enumerate::expr::Expr::for_each_subexpr (26 samples, 5.13%)</title><rect x="91.7160%" y="725" width="5.1282%" height="15" fill="rgb(237,152,48)" fg:x="465" fg:w="26"/><text x="91.9660%" y="735.50">meet_m..</text></g><g><title>meet_middle::enumerate::expr::Expr::for_each_subexpr (25 samples, 4.93%)</title><rect x="91.9132%" y="709" width="4.9310%" height="15" fill="rgb(221,59,37)" fg:x="466" fg:w="25"/><text x="92.1632%" y="719.50">meet_m..</text></g><g><title>meet_middle::enumerate::op::bv::lshr (1 samples, 0.20%)</title><rect x="96.6469%" y="693" width="0.1972%" height="15" fill="rgb(209,202,51)" fg:x="490" fg:w="1"/><text x="96.8969%" y="703.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::collect (1 samples, 0.20%)</title><rect x="96.6469%" y="677" width="0.1972%" height="15" fill="rgb(228,81,30)" fg:x="490" fg:w="1"/><text x="96.8969%" y="687.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed (1 samples, 0.20%)</title><rect x="96.6469%" y="661" width="0.1972%" height="15" fill="rgb(227,42,39)" fg:x="490" fg:w="1"/><text x="96.8969%" y="671.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::map (1 samples, 0.20%)</title><rect x="96.6469%" y="645" width="0.1972%" height="15" fill="rgb(221,26,2)" fg:x="490" fg:w="1"/><text x="96.8969%" y="655.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map (1 samples, 0.20%)</title><rect x="96.6469%" y="629" width="0.1972%" height="15" fill="rgb(254,61,31)" fg:x="490" fg:w="1"/><text x="96.8969%" y="639.50"></text></g><g><title>core::array::drain::drain_array_with (1 samples, 0.20%)</title><rect x="96.6469%" y="613" width="0.1972%" height="15" fill="rgb(222,173,38)" fg:x="490" fg:w="1"/><text x="96.8969%" y="623.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map::{{closure}} (1 samples, 0.20%)</title><rect x="96.6469%" y="597" width="0.1972%" height="15" fill="rgb(218,50,12)" fg:x="490" fg:w="1"/><text x="96.8969%" y="607.50"></text></g><g><title>core::array::try_from_trusted_iterator (1 samples, 0.20%)</title><rect x="96.6469%" y="581" width="0.1972%" height="15" fill="rgb(223,88,40)" fg:x="490" fg:w="1"/><text x="96.8969%" y="591.50"></text></g><g><title>core::array::try_from_fn (1 samples, 0.20%)</title><rect x="96.6469%" y="565" width="0.1972%" height="15" fill="rgb(237,54,19)" fg:x="490" fg:w="1"/><text x="96.8969%" y="575.50"></text></g><g><title>core::array::try_from_fn_erased (1 samples, 0.20%)</title><rect x="96.6469%" y="549" width="0.1972%" height="15" fill="rgb(251,129,25)" fg:x="490" fg:w="1"/><text x="96.8969%" y="559.50"></text></g><g><title>core::array::try_from_trusted_iterator::next::{{closure}} (1 samples, 0.20%)</title><rect x="96.6469%" y="533" width="0.1972%" height="15" fill="rgb(238,97,19)" fg:x="490" fg:w="1"/><text x="96.8969%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (1 samples, 0.20%)</title><rect x="96.6469%" y="517" width="0.1972%" height="15" fill="rgb(240,169,18)" fg:x="490" fg:w="1"/><text x="96.8969%" y="527.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_1::{{closure}} (1 samples, 0.20%)</title><rect x="96.6469%" y="501" width="0.1972%" height="15" fill="rgb(230,187,49)" fg:x="490" fg:w="1"/><text x="96.8969%" y="511.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed::{{closure}} (1 samples, 0.20%)</title><rect x="96.6469%" y="485" width="0.1972%" height="15" fill="rgb(209,44,26)" fg:x="490" fg:w="1"/><text x="96.8969%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="96.6469%" y="469" width="0.1972%" height="15" fill="rgb(244,0,6)" fg:x="490" fg:w="1"/><text x="96.8969%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.20%)</title><rect x="96.6469%" y="453" width="0.1972%" height="15" fill="rgb(248,18,21)" fg:x="490" fg:w="1"/><text x="96.8969%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.20%)</title><rect x="96.6469%" y="437" width="0.1972%" height="15" fill="rgb(245,180,19)" fg:x="490" fg:w="1"/><text x="96.8969%" y="447.50"></text></g><g><title>meet_middle::enumerate::op::bv::lshr::{{closure}} (1 samples, 0.20%)</title><rect x="96.6469%" y="421" width="0.1972%" height="15" fill="rgb(252,118,36)" fg:x="490" fg:w="1"/><text x="96.8969%" y="431.50"></text></g><g><title>meet_middle::enumerate::op::lshr (1 samples, 0.20%)</title><rect x="96.6469%" y="405" width="0.1972%" height="15" fill="rgb(210,224,19)" fg:x="490" fg:w="1"/><text x="96.8969%" y="415.50"></text></g><g><title>meet_middle::parse::constraint::pbe::PbeConstraint::args (1 samples, 0.20%)</title><rect x="96.8442%" y="837" width="0.1972%" height="15" fill="rgb(218,30,24)" fg:x="491" fg:w="1"/><text x="97.0942%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.20%)</title><rect x="97.0414%" y="709" width="0.1972%" height="15" fill="rgb(219,75,50)" fg:x="492" fg:w="1"/><text x="97.2914%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.20%)</title><rect x="97.0414%" y="693" width="0.1972%" height="15" fill="rgb(234,72,50)" fg:x="492" fg:w="1"/><text x="97.2914%" y="703.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="97.4359%" y="357" width="0.1972%" height="15" fill="rgb(219,100,48)" fg:x="494" fg:w="1"/><text x="97.6859%" y="367.50"></text></g><g><title>core::ops::index_range::IndexRange::next_unchecked (1 samples, 0.20%)</title><rect x="97.4359%" y="341" width="0.1972%" height="15" fill="rgb(253,5,41)" fg:x="494" fg:w="1"/><text x="97.6859%" y="351.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.39%)</title><rect x="97.4359%" y="373" width="0.3945%" height="15" fill="rgb(247,181,11)" fg:x="494" fg:w="2"/><text x="97.6859%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.20%)</title><rect x="97.6331%" y="357" width="0.1972%" height="15" fill="rgb(222,223,25)" fg:x="495" fg:w="1"/><text x="97.8831%" y="367.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (1 samples, 0.20%)</title><rect x="97.6331%" y="341" width="0.1972%" height="15" fill="rgb(214,198,28)" fg:x="495" fg:w="1"/><text x="97.8831%" y="351.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (1 samples, 0.20%)</title><rect x="97.6331%" y="325" width="0.1972%" height="15" fill="rgb(230,46,43)" fg:x="495" fg:w="1"/><text x="97.8831%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (1 samples, 0.20%)</title><rect x="97.6331%" y="309" width="0.1972%" height="15" fill="rgb(233,65,53)" fg:x="495" fg:w="1"/><text x="97.8831%" y="319.50"></text></g><g><title>core::array::drain::drain_array_with (1 samples, 0.20%)</title><rect x="97.6331%" y="293" width="0.1972%" height="15" fill="rgb(221,121,27)" fg:x="495" fg:w="1"/><text x="97.8831%" y="303.50"></text></g><g><title>&lt;meet_middle::enumerate::Bv&lt;_&gt; as core::ops::bit::BitAnd&gt;::bitand (5 samples, 0.99%)</title><rect x="97.2387%" y="661" width="0.9862%" height="15" fill="rgb(247,70,47)" fg:x="493" fg:w="5"/><text x="97.4887%" y="671.50"></text></g><g><title>meet_middle::enumerate::op::bv::and (5 samples, 0.99%)</title><rect x="97.2387%" y="645" width="0.9862%" height="15" fill="rgb(228,85,35)" fg:x="493" fg:w="5"/><text x="97.4887%" y="655.50"></text></g><g><title>iter_fixed::IteratorFixed&lt;I,_&gt;::collect (5 samples, 0.99%)</title><rect x="97.2387%" y="629" width="0.9862%" height="15" fill="rgb(209,50,18)" fg:x="493" fg:w="5"/><text x="97.4887%" y="639.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed (5 samples, 0.99%)</title><rect x="97.2387%" y="613" width="0.9862%" height="15" fill="rgb(250,19,35)" fg:x="493" fg:w="5"/><text x="97.4887%" y="623.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::map (5 samples, 0.99%)</title><rect x="97.2387%" y="597" width="0.9862%" height="15" fill="rgb(253,107,29)" fg:x="493" fg:w="5"/><text x="97.4887%" y="607.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map (4 samples, 0.79%)</title><rect x="97.4359%" y="581" width="0.7890%" height="15" fill="rgb(252,179,29)" fg:x="494" fg:w="4"/><text x="97.6859%" y="591.50"></text></g><g><title>core::array::drain::drain_array_with (4 samples, 0.79%)</title><rect x="97.4359%" y="565" width="0.7890%" height="15" fill="rgb(238,194,6)" fg:x="494" fg:w="4"/><text x="97.6859%" y="575.50"></text></g><g><title>core::array::&lt;impl [T: N]&gt;::try_map::{{closure}} (4 samples, 0.79%)</title><rect x="97.4359%" y="549" width="0.7890%" height="15" fill="rgb(238,164,29)" fg:x="494" fg:w="4"/><text x="97.6859%" y="559.50"></text></g><g><title>core::array::try_from_trusted_iterator (4 samples, 0.79%)</title><rect x="97.4359%" y="533" width="0.7890%" height="15" fill="rgb(224,25,9)" fg:x="494" fg:w="4"/><text x="97.6859%" y="543.50"></text></g><g><title>core::array::try_from_fn (4 samples, 0.79%)</title><rect x="97.4359%" y="517" width="0.7890%" height="15" fill="rgb(244,153,23)" fg:x="494" fg:w="4"/><text x="97.6859%" y="527.50"></text></g><g><title>core::array::try_from_fn_erased (4 samples, 0.79%)</title><rect x="97.4359%" y="501" width="0.7890%" height="15" fill="rgb(212,203,14)" fg:x="494" fg:w="4"/><text x="97.6859%" y="511.50"></text></g><g><title>core::array::try_from_trusted_iterator::next::{{closure}} (4 samples, 0.79%)</title><rect x="97.4359%" y="485" width="0.7890%" height="15" fill="rgb(220,164,20)" fg:x="494" fg:w="4"/><text x="97.6859%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (4 samples, 0.79%)</title><rect x="97.4359%" y="469" width="0.7890%" height="15" fill="rgb(222,203,48)" fg:x="494" fg:w="4"/><text x="97.6859%" y="479.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_1::{{closure}} (4 samples, 0.79%)</title><rect x="97.4359%" y="453" width="0.7890%" height="15" fill="rgb(215,159,22)" fg:x="494" fg:w="4"/><text x="97.6859%" y="463.50"></text></g><g><title>&lt;[&lt;I as core::iter::traits::iterator::Iterator&gt;::Item: N] as iter_fixed::from::FromIteratorFixed&lt;I,_&gt;&gt;::from_iter_fixed::{{closure}} (4 samples, 0.79%)</title><rect x="97.4359%" y="437" width="0.7890%" height="15" fill="rgb(216,183,47)" fg:x="494" fg:w="4"/><text x="97.6859%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.79%)</title><rect x="97.4359%" y="421" width="0.7890%" height="15" fill="rgb(229,195,25)" fg:x="494" fg:w="4"/><text x="97.6859%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.79%)</title><rect x="97.4359%" y="405" width="0.7890%" height="15" fill="rgb(224,132,51)" fg:x="494" fg:w="4"/><text x="97.6859%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (4 samples, 0.79%)</title><rect x="97.4359%" y="389" width="0.7890%" height="15" fill="rgb(240,63,7)" fg:x="494" fg:w="4"/><text x="97.6859%" y="399.50"></text></g><g><title>core::array::drain::drain_array_with (2 samples, 0.39%)</title><rect x="97.8304%" y="373" width="0.3945%" height="15" fill="rgb(249,182,41)" fg:x="496" fg:w="2"/><text x="98.0804%" y="383.50"></text></g><g><title>meet_middle::deductive::combine::CombineRules&lt;_&gt;::test (6 samples, 1.18%)</title><rect x="97.2387%" y="677" width="1.1834%" height="15" fill="rgb(243,47,26)" fg:x="493" fg:w="6"/><text x="97.4887%" y="687.50"></text></g><g><title>meet_middle::enumerate::Bv&lt;_&gt;::count (1 samples, 0.20%)</title><rect x="98.2249%" y="661" width="0.1972%" height="15" fill="rgb(233,48,2)" fg:x="498" fg:w="1"/><text x="98.4749%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.20%)</title><rect x="98.2249%" y="645" width="0.1972%" height="15" fill="rgb(244,165,34)" fg:x="498" fg:w="1"/><text x="98.4749%" y="655.50"></text></g><g><title>&lt;u32 as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.20%)</title><rect x="98.2249%" y="629" width="0.1972%" height="15" fill="rgb(207,89,7)" fg:x="498" fg:w="1"/><text x="98.4749%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.20%)</title><rect x="98.2249%" y="613" width="0.1972%" height="15" fill="rgb(244,117,36)" fg:x="498" fg:w="1"/><text x="98.4749%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.20%)</title><rect x="98.2249%" y="597" width="0.1972%" height="15" fill="rgb(226,144,34)" fg:x="498" fg:w="1"/><text x="98.4749%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.20%)</title><rect x="98.2249%" y="581" width="0.1972%" height="15" fill="rgb(213,23,19)" fg:x="498" fg:w="1"/><text x="98.4749%" y="591.50"></text></g><g><title>meet_middle::enumerate::Bv&lt;_&gt;::count::{{closure}} (1 samples, 0.20%)</title><rect x="98.2249%" y="565" width="0.1972%" height="15" fill="rgb(217,75,12)" fg:x="498" fg:w="1"/><text x="98.4749%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::count_ones (1 samples, 0.20%)</title><rect x="98.2249%" y="549" width="0.1972%" height="15" fill="rgb(224,159,17)" fg:x="498" fg:w="1"/><text x="98.4749%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.39%)</title><rect x="98.6193%" y="437" width="0.3945%" height="15" fill="rgb(217,118,1)" fg:x="500" fg:w="2"/><text x="98.8693%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.20%)</title><rect x="98.8166%" y="421" width="0.1972%" height="15" fill="rgb(232,180,48)" fg:x="501" fg:w="1"/><text x="99.0666%" y="431.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (3 samples, 0.59%)</title><rect x="98.6193%" y="517" width="0.5917%" height="15" fill="rgb(230,27,33)" fg:x="500" fg:w="3"/><text x="98.8693%" y="527.50"></text></g><g><title>core::hash::Hasher::write_usize (3 samples, 0.59%)</title><rect x="98.6193%" y="501" width="0.5917%" height="15" fill="rgb(205,31,21)" fg:x="500" fg:w="3"/><text x="98.8693%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.59%)</title><rect x="98.6193%" y="485" width="0.5917%" height="15" fill="rgb(253,59,4)" fg:x="500" fg:w="3"/><text x="98.8693%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.59%)</title><rect x="98.6193%" y="469" width="0.5917%" height="15" fill="rgb(224,201,9)" fg:x="500" fg:w="3"/><text x="98.8693%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.59%)</title><rect x="98.6193%" y="453" width="0.5917%" height="15" fill="rgb(229,206,30)" fg:x="500" fg:w="3"/><text x="98.8693%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.20%)</title><rect x="99.0138%" y="437" width="0.1972%" height="15" fill="rgb(212,67,47)" fg:x="502" fg:w="1"/><text x="99.2638%" y="447.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.79%)</title><rect x="98.6193%" y="613" width="0.7890%" height="15" fill="rgb(211,96,50)" fg:x="500" fg:w="4"/><text x="98.8693%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.79%)</title><rect x="98.6193%" y="597" width="0.7890%" height="15" fill="rgb(252,114,18)" fg:x="500" fg:w="4"/><text x="98.8693%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.79%)</title><rect x="98.6193%" y="581" width="0.7890%" height="15" fill="rgb(223,58,37)" fg:x="500" fg:w="4"/><text x="98.8693%" y="591.50"></text></g><g><title>&lt;meet_middle::enumerate::Bv&lt;_&gt; as core::hash::Hash&gt;::hash (4 samples, 0.79%)</title><rect x="98.6193%" y="565" width="0.7890%" height="15" fill="rgb(237,70,4)" fg:x="500" fg:w="4"/><text x="98.8693%" y="575.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (4 samples, 0.79%)</title><rect x="98.6193%" y="549" width="0.7890%" height="15" fill="rgb(244,85,46)" fg:x="500" fg:w="4"/><text x="98.8693%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (4 samples, 0.79%)</title><rect x="98.6193%" y="533" width="0.7890%" height="15" fill="rgb(223,39,52)" fg:x="500" fg:w="4"/><text x="98.8693%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash_slice (1 samples, 0.20%)</title><rect x="99.2110%" y="517" width="0.1972%" height="15" fill="rgb(218,200,14)" fg:x="503" fg:w="1"/><text x="99.4610%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.20%)</title><rect x="99.2110%" y="501" width="0.1972%" height="15" fill="rgb(208,171,16)" fg:x="503" fg:w="1"/><text x="99.4610%" y="511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.20%)</title><rect x="99.2110%" y="485" width="0.1972%" height="15" fill="rgb(234,200,18)" fg:x="503" fg:w="1"/><text x="99.4610%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.20%)</title><rect x="99.2110%" y="469" width="0.1972%" height="15" fill="rgb(228,45,11)" fg:x="503" fg:w="1"/><text x="99.4610%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.20%)</title><rect x="99.2110%" y="453" width="0.1972%" height="15" fill="rgb(237,182,11)" fg:x="503" fg:w="1"/><text x="99.4610%" y="463.50"></text></g><g><title>meet_middle::search::search::SearchConfig::cegis_loop (13 samples, 2.56%)</title><rect x="97.0414%" y="837" width="2.5641%" height="15" fill="rgb(241,175,49)" fg:x="492" fg:w="13"/><text x="97.2914%" y="847.50">me..</text></g><g><title>meet_middle::search::search::SearchConfig::search (13 samples, 2.56%)</title><rect x="97.0414%" y="821" width="2.5641%" height="15" fill="rgb(247,38,35)" fg:x="492" fg:w="13"/><text x="97.2914%" y="831.50">me..</text></g><g><title>meet_middle::search::sample::SampleConfig::search (13 samples, 2.56%)</title><rect x="97.0414%" y="805" width="2.5641%" height="15" fill="rgb(228,39,49)" fg:x="492" fg:w="13"/><text x="97.2914%" y="815.50">me..</text></g><g><title>meet_middle::search::sample::SampleConfig::search_inner (13 samples, 2.56%)</title><rect x="97.0414%" y="789" width="2.5641%" height="15" fill="rgb(226,101,26)" fg:x="492" fg:w="13"/><text x="97.2914%" y="799.50">me..</text></g><g><title>meet_middle::enumerate::algo::Algo&lt;_&gt;::run_until (13 samples, 2.56%)</title><rect x="97.0414%" y="773" width="2.5641%" height="15" fill="rgb(206,141,19)" fg:x="492" fg:w="13"/><text x="97.2914%" y="783.50">me..</text></g><g><title>meet_middle::enumerate::expr::Expr::for_each_subexpr (13 samples, 2.56%)</title><rect x="97.0414%" y="757" width="2.5641%" height="15" fill="rgb(211,200,13)" fg:x="492" fg:w="13"/><text x="97.2914%" y="767.50">me..</text></g><g><title>meet_middle::enumerate::expr::Expr::for_each_subexpr (13 samples, 2.56%)</title><rect x="97.0414%" y="741" width="2.5641%" height="15" fill="rgb(241,121,6)" fg:x="492" fg:w="13"/><text x="97.2914%" y="751.50">me..</text></g><g><title>meet_middle::enumerate::algo::Algo&lt;_&gt;::run_until::{{closure}} (13 samples, 2.56%)</title><rect x="97.0414%" y="725" width="2.5641%" height="15" fill="rgb(234,221,29)" fg:x="492" fg:w="13"/><text x="97.2914%" y="735.50">me..</text></g><g><title>meet_middle::search::sample::SampleConfig::search_inner::{{closure}} (12 samples, 2.37%)</title><rect x="97.2387%" y="709" width="2.3669%" height="15" fill="rgb(229,136,5)" fg:x="493" fg:w="12"/><text x="97.4887%" y="719.50">me..</text></g><g><title>meet_middle::search::filter::FilterState&lt;_&gt;::filter (12 samples, 2.37%)</title><rect x="97.2387%" y="693" width="2.3669%" height="15" fill="rgb(238,36,11)" fg:x="493" fg:w="12"/><text x="97.4887%" y="703.50">me..</text></g><g><title>meet_middle::deductive::reverse::ReverseRule::reverse (6 samples, 1.18%)</title><rect x="98.4221%" y="677" width="1.1834%" height="15" fill="rgb(251,55,41)" fg:x="499" fg:w="6"/><text x="98.6721%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (6 samples, 1.18%)</title><rect x="98.4221%" y="661" width="1.1834%" height="15" fill="rgb(242,34,40)" fg:x="499" fg:w="6"/><text x="98.6721%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (6 samples, 1.18%)</title><rect x="98.4221%" y="645" width="1.1834%" height="15" fill="rgb(215,42,17)" fg:x="499" fg:w="6"/><text x="98.6721%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 1.18%)</title><rect x="98.4221%" y="629" width="1.1834%" height="15" fill="rgb(207,44,46)" fg:x="499" fg:w="6"/><text x="98.6721%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.20%)</title><rect x="99.4083%" y="613" width="0.1972%" height="15" fill="rgb(211,206,28)" fg:x="504" fg:w="1"/><text x="99.6583%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.20%)</title><rect x="99.4083%" y="597" width="0.1972%" height="15" fill="rgb(237,167,16)" fg:x="504" fg:w="1"/><text x="99.6583%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.20%)</title><rect x="99.4083%" y="581" width="0.1972%" height="15" fill="rgb(233,66,6)" fg:x="504" fg:w="1"/><text x="99.6583%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.20%)</title><rect x="99.4083%" y="565" width="0.1972%" height="15" fill="rgb(246,123,29)" fg:x="504" fg:w="1"/><text x="99.6583%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.20%)</title><rect x="99.4083%" y="549" width="0.1972%" height="15" fill="rgb(209,62,40)" fg:x="504" fg:w="1"/><text x="99.6583%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.20%)</title><rect x="99.4083%" y="533" width="0.1972%" height="15" fill="rgb(218,4,25)" fg:x="504" fg:w="1"/><text x="99.6583%" y="543.50"></text></g><g><title>meet_middle::search::search::SearchConfig::search (1 samples, 0.20%)</title><rect x="99.6055%" y="837" width="0.1972%" height="15" fill="rgb(253,91,49)" fg:x="505" fg:w="1"/><text x="99.8555%" y="847.50"></text></g><g><title>meet_middle::search::sample::SampleConfig::search (1 samples, 0.20%)</title><rect x="99.6055%" y="821" width="0.1972%" height="15" fill="rgb(228,155,29)" fg:x="505" fg:w="1"/><text x="99.8555%" y="831.50"></text></g><g><title>meet_middle::search::sample::SampleConfig::search_inner (1 samples, 0.20%)</title><rect x="99.6055%" y="805" width="0.1972%" height="15" fill="rgb(243,57,37)" fg:x="505" fg:w="1"/><text x="99.8555%" y="815.50"></text></g><g><title>meet_middle::enumerate::algo::Algo&lt;_&gt;::run_until (1 samples, 0.20%)</title><rect x="99.6055%" y="789" width="0.1972%" height="15" fill="rgb(244,167,17)" fg:x="505" fg:w="1"/><text x="99.8555%" y="799.50"></text></g><g><title>meet_middle::enumerate::expr::Expr::for_each_subexpr (1 samples, 0.20%)</title><rect x="99.6055%" y="773" width="0.1972%" height="15" fill="rgb(207,181,38)" fg:x="505" fg:w="1"/><text x="99.8555%" y="783.50"></text></g><g><title>meet_middle::enumerate::expr::Expr::for_each_subexpr (1 samples, 0.20%)</title><rect x="99.6055%" y="757" width="0.1972%" height="15" fill="rgb(211,8,23)" fg:x="505" fg:w="1"/><text x="99.8555%" y="767.50"></text></g><g><title>meet_middle::enumerate::algo::Algo&lt;_&gt;::run_until::{{closure}} (1 samples, 0.20%)</title><rect x="99.6055%" y="741" width="0.1972%" height="15" fill="rgb(235,11,44)" fg:x="505" fg:w="1"/><text x="99.8555%" y="751.50"></text></g><g><title>meet_middle::search::sample::SampleConfig::search_inner::{{closure}} (1 samples, 0.20%)</title><rect x="99.6055%" y="725" width="0.1972%" height="15" fill="rgb(248,18,52)" fg:x="505" fg:w="1"/><text x="99.8555%" y="735.50"></text></g><g><title>meet_middle::search::filter::FilterState&lt;_&gt;::filter (1 samples, 0.20%)</title><rect x="99.6055%" y="709" width="0.1972%" height="15" fill="rgb(208,4,7)" fg:x="505" fg:w="1"/><text x="99.8555%" y="719.50"></text></g><g><title>meet_middle::solutions::Solutions::add_solution (1 samples, 0.20%)</title><rect x="99.6055%" y="693" width="0.1972%" height="15" fill="rgb(240,17,39)" fg:x="505" fg:w="1"/><text x="99.8555%" y="703.50"></text></g><g><title>meet_middle::parse::constraint::pbe::PbeConstraint::test (1 samples, 0.20%)</title><rect x="99.6055%" y="677" width="0.1972%" height="15" fill="rgb(207,170,3)" fg:x="505" fg:w="1"/><text x="99.8555%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.20%)</title><rect x="99.6055%" y="661" width="0.1972%" height="15" fill="rgb(236,100,52)" fg:x="505" fg:w="1"/><text x="99.8555%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.20%)</title><rect x="99.6055%" y="645" width="0.1972%" height="15" fill="rgb(246,78,51)" fg:x="505" fg:w="1"/><text x="99.8555%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.20%)</title><rect x="99.6055%" y="629" width="0.1972%" height="15" fill="rgb(211,17,15)" fg:x="505" fg:w="1"/><text x="99.8555%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.20%)</title><rect x="99.6055%" y="613" width="0.1972%" height="15" fill="rgb(209,59,46)" fg:x="505" fg:w="1"/><text x="99.8555%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.20%)</title><rect x="99.6055%" y="597" width="0.1972%" height="15" fill="rgb(210,92,25)" fg:x="505" fg:w="1"/><text x="99.8555%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.20%)</title><rect x="99.6055%" y="581" width="0.1972%" height="15" fill="rgb(238,174,52)" fg:x="505" fg:w="1"/><text x="99.8555%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="99.6055%" y="565" width="0.1972%" height="15" fill="rgb(230,73,7)" fg:x="505" fg:w="1"/><text x="99.8555%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="99.6055%" y="549" width="0.1972%" height="15" fill="rgb(243,124,40)" fg:x="505" fg:w="1"/><text x="99.8555%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="99.6055%" y="533" width="0.1972%" height="15" fill="rgb(244,170,11)" fg:x="505" fg:w="1"/><text x="99.8555%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.20%)</title><rect x="99.6055%" y="517" width="0.1972%" height="15" fill="rgb(207,114,54)" fg:x="505" fg:w="1"/><text x="99.8555%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="99.6055%" y="501" width="0.1972%" height="15" fill="rgb(205,42,20)" fg:x="505" fg:w="1"/><text x="99.8555%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.20%)</title><rect x="99.6055%" y="485" width="0.1972%" height="15" fill="rgb(230,30,28)" fg:x="505" fg:w="1"/><text x="99.8555%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.20%)</title><rect x="99.6055%" y="469" width="0.1972%" height="15" fill="rgb(205,73,54)" fg:x="505" fg:w="1"/><text x="99.8555%" y="479.50"></text></g><g><title>meet_middle::parse::constraint::pbe::PbeConstraint::test::{{closure}} (1 samples, 0.20%)</title><rect x="99.6055%" y="453" width="0.1972%" height="15" fill="rgb(254,227,23)" fg:x="505" fg:w="1"/><text x="99.8555%" y="463.50"></text></g><g><title>meet_middle::enumerate::expr::Expr::eval (1 samples, 0.20%)</title><rect x="99.6055%" y="437" width="0.1972%" height="15" fill="rgb(228,202,34)" fg:x="505" fg:w="1"/><text x="99.8555%" y="447.50"></text></g><g><title>meet_middle::enumerate::expr::Expr::eval (1 samples, 0.20%)</title><rect x="99.6055%" y="421" width="0.1972%" height="15" fill="rgb(222,225,37)" fg:x="505" fg:w="1"/><text x="99.8555%" y="431.50"></text></g><g><title>meet_middle::enumerate::expr::Expr::eval (1 samples, 0.20%)</title><rect x="99.6055%" y="405" width="0.1972%" height="15" fill="rgb(221,14,54)" fg:x="505" fg:w="1"/><text x="99.8555%" y="415.50"></text></g><g><title>meet_middle::enumerate::expr::Expr::eval (1 samples, 0.20%)</title><rect x="99.6055%" y="389" width="0.1972%" height="15" fill="rgb(254,102,2)" fg:x="505" fg:w="1"/><text x="99.8555%" y="399.50"></text></g><g><title>all (507 samples, 100%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(232,104,17)" fg:x="0" fg:w="507"/><text x="0.2500%" y="879.50"></text></g><g><title>meet-middlemiddlemiddle (499 samples, 98.42%)</title><rect x="1.5779%" y="853" width="98.4221%" height="15" fill="rgb(250,220,14)" fg:x="8" fg:w="499"/><text x="1.meet-middle" y="863.50">meet-middle</text></g><g><title>std::rt::lang_start_internal (1 samples, 0.20%)</title><rect x="99.8028%" y="837" width="0.1972%" height="15" fill="rgb(241,158,9)" fg:x="506" fg:w="1"/><text x="100.0528%" y="847.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.20%)</title><rect x="99.8028%" y="821" width="0.1972%" height="15" fill="rgb(246,9,43)" fg:x="506" fg:w="1"/><text x="100.0528%" y="831.50"></text></g><g><title>std::panicking::try (1 samples, 0.20%)</title><rect x="99.8028%" y="805" width="0.1972%" height="15" fill="rgb(206,73,33)" fg:x="506" fg:w="1"/><text x="100.0528%" y="815.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.20%)</title><rect x="99.8028%" y="789" width="0.1972%" height="15" fill="rgb(222,79,8)" fg:x="506" fg:w="1"/><text x="100.0528%" y="799.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (1 samples, 0.20%)</title><rect x="99.8028%" y="773" width="0.1972%" height="15" fill="rgb(234,8,54)" fg:x="506" fg:w="1"/><text x="100.0528%" y="783.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.20%)</title><rect x="99.8028%" y="757" width="0.1972%" height="15" fill="rgb(209,134,38)" fg:x="506" fg:w="1"/><text x="100.0528%" y="767.50"></text></g><g><title>std::panicking::try (1 samples, 0.20%)</title><rect x="99.8028%" y="741" width="0.1972%" height="15" fill="rgb(230,127,29)" fg:x="506" fg:w="1"/><text x="100.0528%" y="751.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.20%)</title><rect x="99.8028%" y="725" width="0.1972%" height="15" fill="rgb(242,44,41)" fg:x="506" fg:w="1"/><text x="100.0528%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1 samples, 0.20%)</title><rect x="99.8028%" y="709" width="0.1972%" height="15" fill="rgb(222,56,43)" fg:x="506" fg:w="1"/><text x="100.0528%" y="719.50"></text></g><g><title>std::rt::lang_start::{{closure}} (1 samples, 0.20%)</title><rect x="99.8028%" y="693" width="0.1972%" height="15" fill="rgb(238,39,47)" fg:x="506" fg:w="1"/><text x="100.0528%" y="703.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.20%)</title><rect x="99.8028%" y="677" width="0.1972%" height="15" fill="rgb(226,79,43)" fg:x="506" fg:w="1"/><text x="100.0528%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.20%)</title><rect x="99.8028%" y="661" width="0.1972%" height="15" fill="rgb(242,105,53)" fg:x="506" fg:w="1"/><text x="100.0528%" y="671.50"></text></g><g><title>meet_middle::main (1 samples, 0.20%)</title><rect x="99.8028%" y="645" width="0.1972%" height="15" fill="rgb(251,132,46)" fg:x="506" fg:w="1"/><text x="100.0528%" y="655.50"></text></g><g><title>meet_middle::main_inner (1 samples, 0.20%)</title><rect x="99.8028%" y="629" width="0.1972%" height="15" fill="rgb(231,77,14)" fg:x="506" fg:w="1"/><text x="100.0528%" y="639.50"></text></g><g><title>meet_middle::search::search::SearchConfig::cegis_loop (1 samples, 0.20%)</title><rect x="99.8028%" y="613" width="0.1972%" height="15" fill="rgb(240,135,9)" fg:x="506" fg:w="1"/><text x="100.0528%" y="623.50"></text></g><g><title>meet_middle::search::search::SearchConfig::search (1 samples, 0.20%)</title><rect x="99.8028%" y="597" width="0.1972%" height="15" fill="rgb(248,109,14)" fg:x="506" fg:w="1"/><text x="100.0528%" y="607.50"></text></g><g><title>meet_middle::search::sample::SampleConfig::search (1 samples, 0.20%)</title><rect x="99.8028%" y="581" width="0.1972%" height="15" fill="rgb(227,146,52)" fg:x="506" fg:w="1"/><text x="100.0528%" y="591.50"></text></g><g><title>meet_middle::search::sample::SampleConfig::search_inner (1 samples, 0.20%)</title><rect x="99.8028%" y="565" width="0.1972%" height="15" fill="rgb(232,54,3)" fg:x="506" fg:w="1"/><text x="100.0528%" y="575.50"></text></g><g><title>meet_middle::enumerate::algo::Algo&lt;_&gt;::run_until (1 samples, 0.20%)</title><rect x="99.8028%" y="549" width="0.1972%" height="15" fill="rgb(229,201,43)" fg:x="506" fg:w="1"/><text x="100.0528%" y="559.50"></text></g><g><title>meet_middle::enumerate::expr::Expr::for_each_subexpr (1 samples, 0.20%)</title><rect x="99.8028%" y="533" width="0.1972%" height="15" fill="rgb(252,161,33)" fg:x="506" fg:w="1"/><text x="100.0528%" y="543.50"></text></g><g><title>meet_middle::enumerate::algo::Algo&lt;_&gt;::run_until::{{closure}} (1 samples, 0.20%)</title><rect x="99.8028%" y="517" width="0.1972%" height="15" fill="rgb(226,146,40)" fg:x="506" fg:w="1"/><text x="100.0528%" y="527.50"></text></g><g><title>meet_middle::search::sample::SampleConfig::search_inner::{{closure}} (1 samples, 0.20%)</title><rect x="99.8028%" y="501" width="0.1972%" height="15" fill="rgb(219,47,25)" fg:x="506" fg:w="1"/><text x="100.0528%" y="511.50"></text></g><g><title>meet_middle::search::filter::FilterState&lt;_&gt;::filter (1 samples, 0.20%)</title><rect x="99.8028%" y="485" width="0.1972%" height="15" fill="rgb(250,135,13)" fg:x="506" fg:w="1"/><text x="100.0528%" y="495.50"></text></g><g><title>meet_middle::solutions::Solutions::add_solution (1 samples, 0.20%)</title><rect x="99.8028%" y="469" width="0.1972%" height="15" fill="rgb(219,229,18)" fg:x="506" fg:w="1"/><text x="100.0528%" y="479.50"></text></g><g><title>meet_middle::parse::constraint::pbe::PbeConstraint::test (1 samples, 0.20%)</title><rect x="99.8028%" y="453" width="0.1972%" height="15" fill="rgb(217,152,27)" fg:x="506" fg:w="1"/><text x="100.0528%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.20%)</title><rect x="99.8028%" y="437" width="0.1972%" height="15" fill="rgb(225,71,47)" fg:x="506" fg:w="1"/><text x="100.0528%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.20%)</title><rect x="99.8028%" y="421" width="0.1972%" height="15" fill="rgb(220,139,14)" fg:x="506" fg:w="1"/><text x="100.0528%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.20%)</title><rect x="99.8028%" y="405" width="0.1972%" height="15" fill="rgb(247,54,32)" fg:x="506" fg:w="1"/><text x="100.0528%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.20%)</title><rect x="99.8028%" y="389" width="0.1972%" height="15" fill="rgb(252,131,39)" fg:x="506" fg:w="1"/><text x="100.0528%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.20%)</title><rect x="99.8028%" y="373" width="0.1972%" height="15" fill="rgb(210,108,39)" fg:x="506" fg:w="1"/><text x="100.0528%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.20%)</title><rect x="99.8028%" y="357" width="0.1972%" height="15" fill="rgb(205,23,29)" fg:x="506" fg:w="1"/><text x="100.0528%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="99.8028%" y="341" width="0.1972%" height="15" fill="rgb(246,139,46)" fg:x="506" fg:w="1"/><text x="100.0528%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="99.8028%" y="325" width="0.1972%" height="15" fill="rgb(250,81,26)" fg:x="506" fg:w="1"/><text x="100.0528%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="99.8028%" y="309" width="0.1972%" height="15" fill="rgb(214,104,7)" fg:x="506" fg:w="1"/><text x="100.0528%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.20%)</title><rect x="99.8028%" y="293" width="0.1972%" height="15" fill="rgb(233,189,8)" fg:x="506" fg:w="1"/><text x="100.0528%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.20%)</title><rect x="99.8028%" y="277" width="0.1972%" height="15" fill="rgb(228,141,17)" fg:x="506" fg:w="1"/><text x="100.0528%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.20%)</title><rect x="99.8028%" y="261" width="0.1972%" height="15" fill="rgb(247,157,1)" fg:x="506" fg:w="1"/><text x="100.0528%" y="271.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.20%)</title><rect x="99.8028%" y="245" width="0.1972%" height="15" fill="rgb(249,225,5)" fg:x="506" fg:w="1"/><text x="100.0528%" y="255.50"></text></g><g><title>meet_middle::parse::constraint::pbe::PbeConstraint::test::{{closure}} (1 samples, 0.20%)</title><rect x="99.8028%" y="229" width="0.1972%" height="15" fill="rgb(242,55,13)" fg:x="506" fg:w="1"/><text x="100.0528%" y="239.50"></text></g><g><title>meet_middle::enumerate::expr::Expr::eval (1 samples, 0.20%)</title><rect x="99.8028%" y="213" width="0.1972%" height="15" fill="rgb(230,49,50)" fg:x="506" fg:w="1"/><text x="100.0528%" y="223.50"></text></g><g><title>meet_middle::enumerate::expr::Expr::eval (1 samples, 0.20%)</title><rect x="99.8028%" y="197" width="0.1972%" height="15" fill="rgb(241,111,38)" fg:x="506" fg:w="1"/><text x="100.0528%" y="207.50"></text></g></svg></svg>